{"ast":null,"code":"import _slicedToArray from\"/Users/minhyeok/Desktop/LostarkTodo/Front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{call}from\"../../service/api-service\";import Accordion from'@mui/material/Accordion';import AccordionSummary from'@mui/material/AccordionSummary';import AccordionDetails from'@mui/material/AccordionDetails';import ExpandMoreIcon from'@mui/icons-material/ExpandMore';import{Typography}from'@mui/material';import SaveIcon from'@mui/icons-material/Save';import{GridContextProvider,GridDropZone,GridItem,swap}from\"react-grid-dnd\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CharacterSortForm=function CharacterSortForm(props){//1.순서 변경 캐릭터 리스트 저장\nvar _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),itemsSwapState=_React$useState2[0],setItemsSwapState=_React$useState2[1];function onChange(sourceId,sourceIndex,targetIndex,targetId){setItemsSwapState(true);var nextState=swap(props.characters,sourceIndex,targetIndex);for(var i=0;i<nextState.length;i++){nextState[i].sortNumber=i;}props.setCharacters(nextState);}//2.순서 변경 DB저장\nvar saveSort=function saveSort(){props.setShowLinearProgress(true);call(\"/member/characterList/sorting\",\"PATCH\",props.characters).then(function(response){props.setShowLinearProgress(false);props.showMessage(\"순서 업데이트가 완료되었습니다.\");props.setShowCharacterSortForm(false);});setItemsSwapState(false);};return/*#__PURE__*/_jsxs(Accordion,{style:{backgroundColor:\"rgba(255, 255, 255, 50%)\",width:\"100%\",border:\"1px solid white\"},className:\"sort-wrap\",children:[/*#__PURE__*/_jsx(AccordionSummary,{expandIcon:/*#__PURE__*/_jsx(ExpandMoreIcon,{}),style:{borderRadius:\"5px\"},children:/*#__PURE__*/_jsxs(Typography,{fontWeight:\"bold\",display:\"flex\",children:[\"\\uCE90\\uB9AD\\uD130 \\uC21C\\uC11C \\uBCC0\\uACBD\",/*#__PURE__*/_jsx(SaveIcon,{onClick:function onClick(){return saveSort();},sx:{display:itemsSwapState?\"flex\":\"none\",marginLeft:\"5px\",color:\"blueviolet\",cursor:\"pointer\"}})]})}),/*#__PURE__*/_jsx(AccordionDetails,{children:/*#__PURE__*/_jsxs(GridContextProvider,{onChange:onChange,children:[/*#__PURE__*/_jsx(GridDropZone,{id:\"characters\",boxesPerRow:props.itemsPerRow,rowHeight:80,style:{height:80*Math.ceil(props.characters.length/props.itemsPerRow)},children:props.characters.map(function(character){return/*#__PURE__*/_jsx(GridItem,{style:{width:\"\".concat(100/props.itemsPerRow,\"%\")},children:/*#__PURE__*/_jsx(\"div\",{style:{marginRight:10},children:/*#__PURE__*/_jsxs(\"div\",{className:\"character-info-mini\",style:{backgroundImage:character.characterImage!==null?\"url(\".concat(character.characterImage,\")\"):\"\",backgroundPosition:character.characterClassName===\"도화가\"||character.characterClassName===\"기상술사\"?\"left 25px top -70px\":\"left 25px top -35px\",backgroundColor:\"gray\"// imgurl이 없을시 배경색을 회색으로 설정\n},children:[/*#__PURE__*/_jsx(\"p\",{children:character.characterName}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Lv. \",character.itemLevel]})]})})},character.sortNumber);})}),/*#__PURE__*/_jsx(\"span\",{className:\"acc-txt\",children:\"\\uB4DC\\uB798\\uADF8 \\uC2DC \\uCE90\\uB9AD\\uD130 \\uC21C\\uC11C\\uAC00 \\uBCC0\\uACBD\\uB429\\uB2C8\\uB2E4\"})]})})]});};export default CharacterSortForm;","map":{"version":3,"names":["React","call","Accordion","AccordionSummary","AccordionDetails","ExpandMoreIcon","Typography","SaveIcon","GridContextProvider","GridDropZone","GridItem","swap","jsx","_jsx","jsxs","_jsxs","CharacterSortForm","props","_React$useState","useState","_React$useState2","_slicedToArray","itemsSwapState","setItemsSwapState","onChange","sourceId","sourceIndex","targetIndex","targetId","nextState","characters","i","length","sortNumber","setCharacters","saveSort","setShowLinearProgress","then","response","showMessage","setShowCharacterSortForm","style","backgroundColor","width","border","className","children","expandIcon","borderRadius","fontWeight","display","onClick","sx","marginLeft","color","cursor","id","boxesPerRow","itemsPerRow","rowHeight","height","Math","ceil","map","character","concat","marginRight","backgroundImage","characterImage","backgroundPosition","characterClassName","characterName","itemLevel"],"sources":["/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/CharacterSortForm.jsx"],"sourcesContent":["import React from 'react';\nimport { call } from \"../../service/api-service\";\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Typography } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport {\n    GridContextProvider,\n    GridDropZone,\n    GridItem,\n    swap,\n} from \"react-grid-dnd\";\n\nconst CharacterSortForm = (props) => {\n    //1.순서 변경 캐릭터 리스트 저장\n    const [itemsSwapState, setItemsSwapState] = React.useState(false);\n    function onChange(sourceId, sourceIndex, targetIndex, targetId) {\n        setItemsSwapState(true);\n        const nextState = swap(props.characters, sourceIndex, targetIndex);\n        for (let i = 0; i < nextState.length; i++) {\n            nextState[i].sortNumber = i;\n        }\n        props.setCharacters(nextState);\n    }\n\n    //2.순서 변경 DB저장\n    const saveSort = () => {\n        props.setShowLinearProgress(true);\n        call(\"/member/characterList/sorting\", \"PATCH\", props.characters)\n            .then((response) => {\n                props.setShowLinearProgress(false);\n                props.showMessage(\"순서 업데이트가 완료되었습니다.\");\n                props.setShowCharacterSortForm(false);\n            });\n        setItemsSwapState(false);\n    };\n    \n    return (\n        <Accordion style={{ backgroundColor: \"rgba(255, 255, 255, 50%)\", width: \"100%\", border: \"1px solid white\" }} className=\"sort-wrap\">\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                style={{ borderRadius: \"5px\" }}\n            >\n                <Typography fontWeight={\"bold\"} display={\"flex\"}>캐릭터 순서 변경\n                    <SaveIcon\n                        onClick={() => saveSort()}\n                        sx={{ display: itemsSwapState ? \"flex\" : \"none\", marginLeft: \"5px\", color: \"blueviolet\", cursor: \"pointer\" }}\n                    >\n                    </SaveIcon>\n                </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <GridContextProvider onChange={onChange}>\n                    <GridDropZone\n                        id=\"characters\"\n                        boxesPerRow={props.itemsPerRow}\n                        rowHeight={80}\n                        style={{ height: 80 * Math.ceil(props.characters.length / props.itemsPerRow) }}\n                    >\n                        {props.characters.map((character) => (\n                            <GridItem key={character.sortNumber} style={{ width: `${100 / props.itemsPerRow}%` }}>\n                                <div style={{ marginRight: 10 }}>\n                                    <div className=\"character-info-mini\"\n                                        style={{\n                                            backgroundImage: character.characterImage !== null ? `url(${character.characterImage})` : \"\",\n                                            backgroundPosition: character.characterClassName === \"도화가\" || character.characterClassName === \"기상술사\" ? \"left 25px top -70px\" : \"left 25px top -35px\",\n                                            backgroundColor: \"gray\", // imgurl이 없을시 배경색을 회색으로 설정\n                                        }}>\n                                        <p>{character.characterName}</p>\n                                        <p>Lv. {character.itemLevel}</p>\n                                        {/* pub 없어도 될꺼같아서 삭제! <p>테스트테스트</p> */}\n                                    </div>\n                                </div>\n                            </GridItem>\n                        ))}\n                    </GridDropZone>\n                    <span className=\"acc-txt\">드래그 시 캐릭터 순서가 변경됩니다</span>{/* pub 문구추가 */}\n                </GridContextProvider>\n            </AccordionDetails>\n        </Accordion>\n    );\n};\n\nexport default CharacterSortForm;"],"mappings":"+HAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,KAAQ,2BAA2B,CAChD,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAC7D,MAAO,CAAAC,gBAAgB,KAAM,gCAAgC,CAC7D,MAAO,CAAAC,cAAc,KAAM,gCAAgC,CAC3D,OAASC,UAAU,KAAQ,eAAe,CAC1C,MAAO,CAAAC,QAAQ,KAAM,0BAA0B,CAC/C,OACIC,mBAAmB,CACnBC,YAAY,CACZC,QAAQ,CACRC,IAAI,KACD,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExB,GAAM,CAAAC,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,KAAK,CAAK,CACjC;AACA,IAAAC,eAAA,CAA4ClB,KAAK,CAACmB,QAAQ,CAAC,KAAK,CAAC,CAAAC,gBAAA,CAAAC,cAAA,CAAAH,eAAA,IAA1DI,cAAc,CAAAF,gBAAA,IAAEG,iBAAiB,CAAAH,gBAAA,IACxC,QAAS,CAAAI,QAAQA,CAACC,QAAQ,CAAEC,WAAW,CAAEC,WAAW,CAAEC,QAAQ,CAAE,CAC5DL,iBAAiB,CAAC,IAAI,CAAC,CACvB,GAAM,CAAAM,SAAS,CAAGlB,IAAI,CAACM,KAAK,CAACa,UAAU,CAAEJ,WAAW,CAAEC,WAAW,CAAC,CAClE,IAAK,GAAI,CAAAI,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,SAAS,CAACG,MAAM,CAAED,CAAC,EAAE,CAAE,CACvCF,SAAS,CAACE,CAAC,CAAC,CAACE,UAAU,CAAGF,CAAC,CAC/B,CACAd,KAAK,CAACiB,aAAa,CAACL,SAAS,CAAC,CAClC,CAEA;AACA,GAAM,CAAAM,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAA,CAAS,CACnBlB,KAAK,CAACmB,qBAAqB,CAAC,IAAI,CAAC,CACjCnC,IAAI,CAAC,+BAA+B,CAAE,OAAO,CAAEgB,KAAK,CAACa,UAAU,CAAC,CAC3DO,IAAI,CAAC,SAACC,QAAQ,CAAK,CAChBrB,KAAK,CAACmB,qBAAqB,CAAC,KAAK,CAAC,CAClCnB,KAAK,CAACsB,WAAW,CAAC,mBAAmB,CAAC,CACtCtB,KAAK,CAACuB,wBAAwB,CAAC,KAAK,CAAC,CACzC,CAAC,CAAC,CACNjB,iBAAiB,CAAC,KAAK,CAAC,CAC5B,CAAC,CAED,mBACIR,KAAA,CAACb,SAAS,EAACuC,KAAK,CAAE,CAAEC,eAAe,CAAE,0BAA0B,CAAEC,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,iBAAkB,CAAE,CAACC,SAAS,CAAC,WAAW,CAAAC,QAAA,eAC9HjC,IAAA,CAACV,gBAAgB,EACb4C,UAAU,cAAElC,IAAA,CAACR,cAAc,GAAE,CAAE,CAC/BoC,KAAK,CAAE,CAAEO,YAAY,CAAE,KAAM,CAAE,CAAAF,QAAA,cAE/B/B,KAAA,CAACT,UAAU,EAAC2C,UAAU,CAAE,MAAO,CAACC,OAAO,CAAE,MAAO,CAAAJ,QAAA,EAAC,8CAC7C,cAAAjC,IAAA,CAACN,QAAQ,EACL4C,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAhB,QAAQ,CAAC,CAAC,EAAC,CAC1BiB,EAAE,CAAE,CAAEF,OAAO,CAAE5B,cAAc,CAAG,MAAM,CAAG,MAAM,CAAE+B,UAAU,CAAE,KAAK,CAAEC,KAAK,CAAE,YAAY,CAAEC,MAAM,CAAE,SAAU,CAAE,CAEvG,CAAC,EACH,CAAC,CACC,CAAC,cACnB1C,IAAA,CAACT,gBAAgB,EAAA0C,QAAA,cACb/B,KAAA,CAACP,mBAAmB,EAACgB,QAAQ,CAAEA,QAAS,CAAAsB,QAAA,eACpCjC,IAAA,CAACJ,YAAY,EACT+C,EAAE,CAAC,YAAY,CACfC,WAAW,CAAExC,KAAK,CAACyC,WAAY,CAC/BC,SAAS,CAAE,EAAG,CACdlB,KAAK,CAAE,CAAEmB,MAAM,CAAE,EAAE,CAAGC,IAAI,CAACC,IAAI,CAAC7C,KAAK,CAACa,UAAU,CAACE,MAAM,CAAGf,KAAK,CAACyC,WAAW,CAAE,CAAE,CAAAZ,QAAA,CAE9E7B,KAAK,CAACa,UAAU,CAACiC,GAAG,CAAC,SAACC,SAAS,qBAC5BnD,IAAA,CAACH,QAAQ,EAA4B+B,KAAK,CAAE,CAAEE,KAAK,IAAAsB,MAAA,CAAK,GAAG,CAAGhD,KAAK,CAACyC,WAAW,KAAI,CAAE,CAAAZ,QAAA,cACjFjC,IAAA,QAAK4B,KAAK,CAAE,CAAEyB,WAAW,CAAE,EAAG,CAAE,CAAApB,QAAA,cAC5B/B,KAAA,QAAK8B,SAAS,CAAC,qBAAqB,CAChCJ,KAAK,CAAE,CACH0B,eAAe,CAAEH,SAAS,CAACI,cAAc,GAAK,IAAI,QAAAH,MAAA,CAAUD,SAAS,CAACI,cAAc,MAAM,EAAE,CAC5FC,kBAAkB,CAAEL,SAAS,CAACM,kBAAkB,GAAK,KAAK,EAAIN,SAAS,CAACM,kBAAkB,GAAK,MAAM,CAAG,qBAAqB,CAAG,qBAAqB,CACrJ5B,eAAe,CAAE,MAAQ;AAC7B,CAAE,CAAAI,QAAA,eACFjC,IAAA,MAAAiC,QAAA,CAAIkB,SAAS,CAACO,aAAa,CAAI,CAAC,cAChCxD,KAAA,MAAA+B,QAAA,EAAG,MAAI,CAACkB,SAAS,CAACQ,SAAS,EAAI,CAAC,EAE/B,CAAC,CACL,CAAC,EAZKR,SAAS,CAAC/B,UAaf,CAAC,EACd,CAAC,CACQ,CAAC,cACfpB,IAAA,SAAMgC,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,gGAAmB,CAAM,CAAC,EACnC,CAAC,CACR,CAAC,EACZ,CAAC,CAEpB,CAAC,CAED,cAAe,CAAA9B,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}