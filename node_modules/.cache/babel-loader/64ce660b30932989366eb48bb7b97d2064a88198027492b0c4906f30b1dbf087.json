{"ast":null,"code":"var _jsxFileName = \"/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/Comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { call } from \"../service/api-service\";\nimport './Comments.css';\nimport Comment from \"./Commnet\";\nimport CommentForm from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [backendComments, setBackendComments] = useState([]);\n  const [currentUsername, setCurrentUsername] = useState([]);\n  const [currentUserRole, setCurrentUserRole] = useState([]);\n  const [activeComment, setActiveComment] = useState(null);\n  const rootComments = backendComments.filter(backendComment => backendComment.parentId === 0);\n  const getReplies = commentId => backendComments.filter(backendComment => backendComment.parentId === commentId).sort((a, b) => new Date(a.lastModifiedDate).getTime() - new Date(b.lastModifiedDate).getTime());\n  useEffect(() => {\n    call(\"/member\", \"GET\", null).then(response => {\n      setCurrentUsername(response.username);\n      setCurrentUserRole(response.role);\n    }).catch(error => {\n      console.log(error.errorMessage);\n    });\n    // 초기 캐릭터 정보 불러오기\n    call(\"/comments\", \"GET\", null).then(response => {\n      setBackendComments(response);\n    }).catch(error => {\n      console.log(error.errorMessage);\n    });\n  }, []);\n  const addComment = (text, parentId = null) => {\n    const updateContent = {\n      body: text,\n      parentId: parentId\n    };\n    call(\"/comments\", \"POST\", updateContent).then(response => {\n      setBackendComments(response);\n      setActiveComment(null);\n    }).catch(error => {\n      console.log(error.errorMessage);\n    });\n  };\n  const updateComment = (text, commentId) => {\n    const updateContent = {\n      body: text,\n      id: commentId\n    };\n    call(\"/comments\", \"PATCH\", updateContent).then(response => {\n      setBackendComments(response);\n      setActiveComment(null);\n    }).catch(error => {\n      console.log(error.errorMessage);\n    });\n  };\n  const deleteComment = commentId => {\n    const updateContent = {\n      id: commentId\n    };\n    if (window.confirm(\"삭제하시겠습니까?\")) {\n      call(\"/comments\", \"DELETE\", updateContent).then(response => {\n        setBackendComments(response);\n      }).catch(error => {\n        console.log(error.errorMessage);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"comments-title\",\n      children: \"\\uBC29\\uBA85\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form-title\",\n      children: \"\\uD558\\uACE0\\uC2F6\\uC73C\\uC2E0 \\uB9D0\\uC500 \\uB0A8\\uACA8\\uC8FC\\uC2DC\\uBA74 \\uB429\\uB2C8\\uB2E4. \\uC0AC\\uC6A9\\uD574\\uC8FC\\uC154\\uC11C \\uAC10\\uC0AC\\uD569\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uAC1C\\uBC1C\\uC911\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"2\\uC8FC \\uCFE8\\uD0C0\\uC784 \\uB808\\uC774\\uB4DC \\uCCB4\\uD06C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), \" - \\uC0AC\\uB78C\\uB4E4\\uB9C8\\uB2E4 \\uD50C\\uB808\\uC774\\uD558\\uB294 \\uBC29\\uC2DD\\uC774 \\uB2EC\\uB77C, \\uCD5C\\uB300\\uD55C \\uB9CE\\uC740 \\uBD84\\uB4E4\\uC758 \\uC694\\uAD6C\\uC0AC\\uD56D\\uC744 \\uB9CC\\uC871\\uD560 \\uC218 \\uC788\\uACE0 \\uD3B8\\uD558\\uAC8C \\uC4F0\\uC2E4 \\uC218 \\uC788\\uB294 \\uBC29\\uBC95\\uC744 \\uACE0\\uC548\\uC911\\uC785\\uB2C8\\uB2E4. \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uC11C\\uBC84\\uBCC4 \\uD45C\\uC2DC, \\uBD80\\uACC4\\uC815 \\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), \" - \\uC11C\\uBC84\\uBCC4\\uB9CC \\uBD84\\uB9AC\\uB294 \\uB2F9\\uC7A5\\uAC00\\uB2A5 \\uD558\\uC9C0\\uB9CC, \\uBD80\\uACC4\\uC815 \\uCD94\\uAC00\\uB791 \\uC5EE\\uC774\\uBA74 \\uBCF5\\uC7A1\\uD574\\uC838\\uC11C \\uAC1C\\uBC1C\\uC911\\uC5D0 \\uC788\\uC2B5\\uB2C8\\uB2E4\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uB3C4\\uBE44\\uC2A4, \\uB3C4\\uAC00\\uD1A0 \\uB4F1 \\uC6D0\\uC815\\uB300 \\uB2E8\\uC704 \\uC219\\uC81C \\uCD94\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), \" - \\uC704\\uC5D0 \\uAE30\\uB2A5\\uACFC \\uC5EE\\uC778 \\uAE30\\uB2A5\\uC774\\uB77C \\uD568\\uAED8 \\uAC1C\\uBC1C\\uC911\\uC785\\uB2C8\\uB2E4.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      submitLabel: \"Write\",\n      handleSubmit: addComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-container\",\n      children: rootComments.map(rootComment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: rootComment,\n        replies: getReplies(rootComment.id),\n        activeComment: activeComment,\n        setActiveComment: setActiveComment,\n        addComment: addComment,\n        deleteComment: deleteComment,\n        updateComment: updateComment,\n        currentUsername: currentUsername,\n        currentUserRole: currentUserRole\n      }, rootComment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Comments, \"4NLRQKkXLiyiKaAl4MogHCWKbpU=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","call","Comment","CommentForm","jsxDEV","_jsxDEV","Comments","_s","backendComments","setBackendComments","currentUsername","setCurrentUsername","currentUserRole","setCurrentUserRole","activeComment","setActiveComment","rootComments","filter","backendComment","parentId","getReplies","commentId","sort","a","b","Date","lastModifiedDate","getTime","then","response","username","role","catch","error","console","log","errorMessage","addComment","text","updateContent","body","updateComment","id","deleteComment","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","submitLabel","handleSubmit","map","rootComment","comment","replies","_c","$RefreshReg$"],"sources":["/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/Comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { call } from \"../service/api-service\";\nimport './Comments.css';\nimport Comment from \"./Commnet\";\nimport CommentForm from \"./CommentForm\";\n\nconst Comments = () => {\n    const [backendComments, setBackendComments] = useState([]);\n    const [currentUsername, setCurrentUsername] = useState([]);\n    const [currentUserRole, setCurrentUserRole] = useState([]);\n    const [activeComment, setActiveComment] = useState(null);\n    const rootComments = backendComments.filter(\n        (backendComment) => backendComment.parentId === 0\n    );\n    const getReplies = (commentId) =>\n        backendComments\n            .filter((backendComment) => backendComment.parentId === commentId)\n            .sort(\n                (a, b) =>\n                    new Date(a.lastModifiedDate).getTime() - new Date(b.lastModifiedDate).getTime()\n            );\n\n    useEffect(() => {\n        call(\"/member\", \"GET\", null)\n            .then((response) => {\n                setCurrentUsername(response.username);\n                setCurrentUserRole(response.role);\n            })\n            .catch((error) => { console.log(error.errorMessage) });\n        // 초기 캐릭터 정보 불러오기\n        call(\"/comments\", \"GET\", null)\n            .then((response) => {\n                setBackendComments(response);\n            })\n            .catch((error) => { console.log(error.errorMessage) });\n\n    }, []);\n\n    const addComment = (text, parentId = null) => {\n        const updateContent = {\n            body: text,\n            parentId: parentId\n        };\n        call(\"/comments\", \"POST\", updateContent)\n            .then((response) => {\n                setBackendComments(response);\n                setActiveComment(null);\n            })\n            .catch((error) => { console.log(error.errorMessage) });\n    };\n\n    const updateComment = (text, commentId) => {\n        const updateContent = {\n            body: text,\n            id: commentId\n        };\n        call(\"/comments\", \"PATCH\", updateContent)\n            .then((response) => {\n                setBackendComments(response);\n                setActiveComment(null);\n            })\n            .catch((error) => {\n                console.log(error.errorMessage)\n            });\n    };\n\n    const deleteComment = (commentId) => {\n        const updateContent = {\n            id: commentId,\n        };\n        if (window.confirm(\"삭제하시겠습니까?\")) {\n            call(\"/comments\", \"DELETE\", updateContent)\n                .then((response) => {\n                    setBackendComments(response);\n                })\n                .catch((error) => { console.log(error.errorMessage) });\n        }\n    };\n\n    return (\n        <div className=\"comments\">\n            <h3 className=\"comments-title\">방명록</h3>\n            <div className=\"comment-form-title\">하고싶으신 말씀 남겨주시면 됩니다. 사용해주셔서 감사합니다</div>\n            <div>\n                <h3>개발중</h3>\n                <ul>\n                    <li><strong>2주 쿨타임 레이드 체크</strong> - 사람들마다 플레이하는 방식이 달라, 최대한 많은 분들의 요구사항을 만족할 수 있고 편하게 쓰실 수 있는 방법을 고안중입니다. </li>\n                    <li><strong>서버별 표시, 부계정 추가</strong> - 서버별만 분리는 당장가능 하지만, 부계정 추가랑 엮이면 복잡해져서 개발중에 있습니다</li>\n                    <li><strong>도비스, 도가토 등 원정대 단위 숙제 추가</strong> - 위에 기능과 엮인 기능이라 함께 개발중입니다.</li>\n                </ul>\n            </div>\n            <CommentForm submitLabel=\"Write\" handleSubmit={addComment} />\n            <div className=\"comments-container\">\n                {rootComments.map((rootComment) => (\n                    <Comment\n                        key={rootComment.id}\n                        comment={rootComment}\n                        replies={getReplies(rootComment.id)}\n                        activeComment={activeComment}\n                        setActiveComment={setActiveComment}\n                        addComment={addComment}\n                        deleteComment={deleteComment}\n                        updateComment={updateComment}\n                        currentUsername={currentUsername}\n                        currentUserRole={currentUserRole}\n                    />\n                ))}\n\n            </div>\n        </div>\n    );\n};\n\nexport default Comments;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,wBAAwB;AAC7C,OAAO,gBAAgB;AACvB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMiB,YAAY,GAAGR,eAAe,CAACS,MAAM,CACtCC,cAAc,IAAKA,cAAc,CAACC,QAAQ,KAAK,CACpD,CAAC;EACD,MAAMC,UAAU,GAAIC,SAAS,IACzBb,eAAe,CACVS,MAAM,CAAEC,cAAc,IAAKA,cAAc,CAACC,QAAQ,KAAKE,SAAS,CAAC,CACjEC,IAAI,CACD,CAACC,CAAC,EAAEC,CAAC,KACD,IAAIC,IAAI,CAACF,CAAC,CAACG,gBAAgB,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAIF,IAAI,CAACD,CAAC,CAACE,gBAAgB,CAAC,CAACC,OAAO,CAAC,CACtF,CAAC;EAET3B,SAAS,CAAC,MAAM;IACZC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,CACvB2B,IAAI,CAAEC,QAAQ,IAAK;MAChBlB,kBAAkB,CAACkB,QAAQ,CAACC,QAAQ,CAAC;MACrCjB,kBAAkB,CAACgB,QAAQ,CAACE,IAAI,CAAC;IACrC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,YAAY,CAAC;IAAC,CAAC,CAAC;IAC1D;IACAnC,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,CACzB2B,IAAI,CAAEC,QAAQ,IAAK;MAChBpB,kBAAkB,CAACoB,QAAQ,CAAC;IAChC,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,YAAY,CAAC;IAAC,CAAC,CAAC;EAE9D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAGA,CAACC,IAAI,EAAEnB,QAAQ,GAAG,IAAI,KAAK;IAC1C,MAAMoB,aAAa,GAAG;MAClBC,IAAI,EAAEF,IAAI;MACVnB,QAAQ,EAAEA;IACd,CAAC;IACDlB,IAAI,CAAC,WAAW,EAAE,MAAM,EAAEsC,aAAa,CAAC,CACnCX,IAAI,CAAEC,QAAQ,IAAK;MAChBpB,kBAAkB,CAACoB,QAAQ,CAAC;MAC5Bd,gBAAgB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAK;MAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,YAAY,CAAC;IAAC,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMK,aAAa,GAAGA,CAACH,IAAI,EAAEjB,SAAS,KAAK;IACvC,MAAMkB,aAAa,GAAG;MAClBC,IAAI,EAAEF,IAAI;MACVI,EAAE,EAAErB;IACR,CAAC;IACDpB,IAAI,CAAC,WAAW,EAAE,OAAO,EAAEsC,aAAa,CAAC,CACpCX,IAAI,CAAEC,QAAQ,IAAK;MAChBpB,kBAAkB,CAACoB,QAAQ,CAAC;MAC5Bd,gBAAgB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,YAAY,CAAC;IACnC,CAAC,CAAC;EACV,CAAC;EAED,MAAMO,aAAa,GAAItB,SAAS,IAAK;IACjC,MAAMkB,aAAa,GAAG;MAClBG,EAAE,EAAErB;IACR,CAAC;IACD,IAAIuB,MAAM,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;MAC7B5C,IAAI,CAAC,WAAW,EAAE,QAAQ,EAAEsC,aAAa,CAAC,CACrCX,IAAI,CAAEC,QAAQ,IAAK;QAChBpB,kBAAkB,CAACoB,QAAQ,CAAC;MAChC,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;QAAEC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,YAAY,CAAC;MAAC,CAAC,CAAC;IAC9D;EACJ,CAAC;EAED,oBACI/B,OAAA;IAAKyC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrB1C,OAAA;MAAIyC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC9C,OAAA;MAAKyC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1E9C,OAAA;MAAA0C,QAAA,gBACI1C,OAAA;QAAA0C,QAAA,EAAI;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACZ9C,OAAA;QAAA0C,QAAA,gBACI1C,OAAA;UAAA0C,QAAA,gBAAI1C,OAAA;YAAA0C,QAAA,EAAQ;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,4UAAyE;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChH9C,OAAA;UAAA0C,QAAA,gBAAI1C,OAAA;YAAA0C,QAAA,EAAQ;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,yOAAiD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzF9C,OAAA;UAAA0C,QAAA,gBAAI1C,OAAA;YAAA0C,QAAA,EAAQ;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,+HAA4B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACN9C,OAAA,CAACF,WAAW;MAACiD,WAAW,EAAC,OAAO;MAACC,YAAY,EAAEhB;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7D9C,OAAA;MAAKyC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAC9B/B,YAAY,CAACsC,GAAG,CAAEC,WAAW,iBAC1BlD,OAAA,CAACH,OAAO;QAEJsD,OAAO,EAAED,WAAY;QACrBE,OAAO,EAAErC,UAAU,CAACmC,WAAW,CAACb,EAAE,CAAE;QACpC5B,aAAa,EAAEA,aAAc;QAC7BC,gBAAgB,EAAEA,gBAAiB;QACnCsB,UAAU,EAAEA,UAAW;QACvBM,aAAa,EAAEA,aAAc;QAC7BF,aAAa,EAAEA,aAAc;QAC7B/B,eAAe,EAAEA,eAAgB;QACjCE,eAAe,EAAEA;MAAgB,GAT5B2C,WAAW,CAACb,EAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUtB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC5C,EAAA,CAzGID,QAAQ;AAAAoD,EAAA,GAARpD,QAAQ;AA2Gd,eAAeA,QAAQ;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}