[{"/Users/minhyeok/Desktop/LostarkTodo/Front/src/index.js":"1","/Users/minhyeok/Desktop/LostarkTodo/Front/src/reportWebVitals.js":"2","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/LinearIndeterminate.jsx":"3","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Navbar.jsx":"4","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Notification.jsx":"5","/Users/minhyeok/Desktop/LostarkTodo/Front/src/service/api-service.jsx":"6","/Users/minhyeok/Desktop/LostarkTodo/Front/src/config/api-config.jsx":"7","/Users/minhyeok/Desktop/LostarkTodo/Front/src/App.jsx":"8","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/SocialLogin.jsx":"9","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Setting.jsx":"10","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/BasicSpeedDial.jsx":"11","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/member/ApiKeyUpdateForm.jsx":"12","/Users/minhyeok/Desktop/LostarkTodo/Front/src/icons/DiscordIcon.jsx":"13","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekTodoWrap.jsx":"14","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendsWrap.jsx":"15","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendCubeWrap.jsx":"16","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekEponaWrap.jsx":"17","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendSilmaelChangeWrap.jsx":"18","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendTodoWrap.jsx":"19","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/AdsCard.js":"20","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendBasicSpeedDial.jsx":"21","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/boards.js":"22","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardList.jsx":"23","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardInsertForm.jsx":"24","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/Board.jsx":"25","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/search/SearchBox.jsx":"26","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/api.js":"27","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/comments/CommentListContainer.jsx":"28","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/comments.js":"29","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/comments/CommentList.jsx":"30","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/comments/CommentInsertForm.jsx":"31","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/comments/Comment.jsx":"32","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoContainer.jsx":"33","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/todo.js":"34","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoMain.jsx":"35","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoProfitsContainer.jsx":"36","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoProfit.jsx":"37","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/CircularLoading.jsx":"38","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/PageNation.jsx":"39","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoModal.jsx":"40","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoServerAndChallengeContainer.jsx":"41","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoServerAndChallenge.jsx":"42","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/friend.js":"43","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoContentWrapContainer.jsx":"44","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoContentWrap.jsx":"45","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoWeekRaidContainer.jsx":"46","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoWeekRaid.jsx":"47","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoWeekContentContainer.jsx":"48","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardWrap.jsx":"49","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/comments/CommentWrap.jsx":"50","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoWrap.jsx":"51","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/boards/BoardListContainer.jsx":"52","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/boards/BoardUpdateContainer.jsx":"53","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/boards/BoardReadContainer.jsx":"54","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/boards/BoardInsertContainer.jsx":"55","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/weekContent/SilmaelChangeWrap.jsx":"56","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/weekContent/CubeWrap.jsx":"57","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/weekContent/WeekEponaWrap.jsx":"58","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/CharacterSortForm.jsx":"59","/Users/minhyeok/Desktop/LostarkTodo/Front/src/backup/TodoWrap.jsx":"60","/Users/minhyeok/Desktop/LostarkTodo/Front/src/backup/WeekTodoWrap.jsx":"61","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/home/HomeContainer.jsx":"62","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/home/HomeMain.jsx":"63","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/home/HomeBoardContainer.jsx":"64","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/home/HomeBoards.jsx":"65","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardText.jsx":"66","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/home/HomeNoticesContainer.jsx":"67","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/notices.js":"68","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/home/HomeNotices.jsx":"69","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/auth.js":"70","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/notification/NotificationComponent.jsx":"71","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/KaKaoAd.js":"72","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/auth/Login.jsx":"73","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/auth/SignUp.jsx":"74","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/auth/AuthTimer.jsx":"75","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/auth/SignUpCharacters.jsx":"76"},{"size":242,"mtime":1694332041421,"results":"77","hashOfConfig":"78"},{"size":362,"mtime":1694195401976,"results":"79","hashOfConfig":"78"},{"size":337,"mtime":1698152681908,"results":"80","hashOfConfig":"78"},{"size":5534,"mtime":1704865451437,"results":"81","hashOfConfig":"78"},{"size":867,"mtime":1694079266240,"results":"82","hashOfConfig":"78"},{"size":954,"mtime":1704776939940,"results":"83","hashOfConfig":"78"},{"size":136,"mtime":1704878762386,"results":"84","hashOfConfig":"78"},{"size":4889,"mtime":1704877983943,"results":"85","hashOfConfig":"78"},{"size":970,"mtime":1703298708697,"results":"86","hashOfConfig":"78"},{"size":8098,"mtime":1698715394197,"results":"87","hashOfConfig":"78"},{"size":2572,"mtime":1702303146734,"results":"88","hashOfConfig":"78"},{"size":2325,"mtime":1696970973228,"results":"89","hashOfConfig":"78"},{"size":1415,"mtime":1698326557861,"results":"90","hashOfConfig":"78"},{"size":9125,"mtime":1700264844026,"results":"91","hashOfConfig":"78"},{"size":19047,"mtime":1704878566850,"results":"92","hashOfConfig":"78"},{"size":12750,"mtime":1700264116913,"results":"93","hashOfConfig":"78"},{"size":4172,"mtime":1700264520139,"results":"94","hashOfConfig":"78"},{"size":3029,"mtime":1700264767113,"results":"95","hashOfConfig":"78"},{"size":26179,"mtime":1702402478951,"results":"96","hashOfConfig":"78"},{"size":929,"mtime":1701864320122,"results":"97","hashOfConfig":"98"},{"size":2212,"mtime":1702054164633,"results":"99","hashOfConfig":"78"},{"size":1430,"mtime":1704720626570,"results":"100","hashOfConfig":"78"},{"size":1625,"mtime":1702401233441,"results":"101","hashOfConfig":"78"},{"size":1286,"mtime":1701669169998,"results":"102","hashOfConfig":"78"},{"size":726,"mtime":1701852488917,"results":"103","hashOfConfig":"78"},{"size":1703,"mtime":1701849255061,"results":"104","hashOfConfig":"78"},{"size":1083,"mtime":1704877164532,"results":"105","hashOfConfig":"78"},{"size":3675,"mtime":1702401668953,"results":"106","hashOfConfig":"78"},{"size":1413,"mtime":1704719592898,"results":"107","hashOfConfig":"78"},{"size":1670,"mtime":1702263341577,"results":"108","hashOfConfig":"78"},{"size":1326,"mtime":1702032670936,"results":"109","hashOfConfig":"78"},{"size":3894,"mtime":1702263333864,"results":"110","hashOfConfig":"78"},{"size":4379,"mtime":1704878191776,"results":"111","hashOfConfig":"78"},{"size":6690,"mtime":1704867587160,"results":"112","hashOfConfig":"78"},{"size":2458,"mtime":1702402478954,"results":"113","hashOfConfig":"78"},{"size":1899,"mtime":1702303015909,"results":"114","hashOfConfig":"78"},{"size":1463,"mtime":1702404618665,"results":"115","hashOfConfig":"78"},{"size":253,"mtime":1702403883713,"results":"116","hashOfConfig":"78"},{"size":2716,"mtime":1704719816284,"results":"117","hashOfConfig":"78"},{"size":1422,"mtime":1702297395888,"results":"118","hashOfConfig":"78"},{"size":2021,"mtime":1702301876769,"results":"119","hashOfConfig":"78"},{"size":2472,"mtime":1702298915792,"results":"120","hashOfConfig":"78"},{"size":333,"mtime":1702302984851,"results":"121","hashOfConfig":"78"},{"size":7846,"mtime":1702358366318,"results":"122","hashOfConfig":"78"},{"size":12036,"mtime":1702402441252,"results":"123","hashOfConfig":"78"},{"size":12949,"mtime":1702366358389,"results":"124","hashOfConfig":"78"},{"size":8721,"mtime":1702402457963,"results":"125","hashOfConfig":"78"},{"size":14473,"mtime":1702403732184,"results":"126","hashOfConfig":"78"},{"size":1199,"mtime":1704719822132,"results":"127","hashOfConfig":"78"},{"size":1330,"mtime":1702401640974,"results":"128","hashOfConfig":"78"},{"size":1868,"mtime":1704776372294,"results":"129","hashOfConfig":"78"},{"size":1530,"mtime":1704720709688,"results":"130","hashOfConfig":"78"},{"size":434,"mtime":1702401354206,"results":"131","hashOfConfig":"78"},{"size":746,"mtime":1702401354201,"results":"132","hashOfConfig":"78"},{"size":964,"mtime":1702401139678,"results":"133","hashOfConfig":"78"},{"size":1746,"mtime":1702402799021,"results":"134","hashOfConfig":"78"},{"size":1929,"mtime":1702403599160,"results":"135","hashOfConfig":"78"},{"size":1669,"mtime":1702402457960,"results":"136","hashOfConfig":"78"},{"size":4777,"mtime":1702402478944,"results":"137","hashOfConfig":"78"},{"size":33152,"mtime":1702403850087,"results":"138","hashOfConfig":"98"},{"size":21134,"mtime":1702403850093,"results":"139","hashOfConfig":"98"},{"size":403,"mtime":1703266641729,"results":"140","hashOfConfig":"78"},{"size":964,"mtime":1704537597536,"results":"141","hashOfConfig":"78"},{"size":1070,"mtime":1704720044328,"results":"142","hashOfConfig":"78"},{"size":1611,"mtime":1703393723514,"results":"143","hashOfConfig":"78"},{"size":2517,"mtime":1703289314379,"results":"144","hashOfConfig":"78"},{"size":1081,"mtime":1703297028482,"results":"145","hashOfConfig":"78"},{"size":317,"mtime":1703297028490,"results":"146","hashOfConfig":"78"},{"size":1636,"mtime":1703393845446,"results":"147","hashOfConfig":"78"},{"size":2002,"mtime":1704869258702,"results":"148","hashOfConfig":"78"},{"size":1352,"mtime":1704720392028,"results":"149","hashOfConfig":"78"},{"size":881,"mtime":1704535962748,"results":"150","hashOfConfig":"78"},{"size":5040,"mtime":1704877101713,"results":"151","hashOfConfig":"78"},{"size":9518,"mtime":1704876160559,"results":"152","hashOfConfig":"78"},{"size":1140,"mtime":1704792785619,"results":"153","hashOfConfig":"78"},{"size":3375,"mtime":1704877282869,"results":"154","hashOfConfig":"78"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"msu5gv",{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},"sou7p6",{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"237"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325"},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329"},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337"},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341"},{"filePath":"342","messages":"343","suppressedMessages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"182"},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"368","usedDeprecatedRules":"182"},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"182"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"379","usedDeprecatedRules":"182"},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/minhyeok/Desktop/LostarkTodo/Front/src/index.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/reportWebVitals.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/LinearIndeterminate.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Navbar.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Notification.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/service/api-service.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/config/api-config.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/App.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/SocialLogin.jsx",[],[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Setting.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/BasicSpeedDial.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/member/ApiKeyUpdateForm.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/icons/DiscordIcon.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekTodoWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendsWrap.jsx",["402"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendCubeWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekEponaWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendSilmaelChangeWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendTodoWrap.jsx",["403","404","405","406","407"],[],"import React, { useState } from \"react\";\nimport { call } from \"../../service/api-service\";\nimport CharacterSortForm from \"../todo/CharacterSortForm\";\nimport { Grid } from \"@mui/material\";\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\nimport FriendWeekTodoWrap from \"./FriendWeekTodoWrap\";\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\n\nconst FriendTodoWrap = (props) => {\n    //------------------------- 일일 수익 & 주간 수익 관련 -------------------------\n    //1. 예상 일일 수익\n    const totalDayGold = props.characters.reduce((accumulator, character) => {\n        if (character.settings.showChaos) {\n            accumulator += character.chaosGold;\n        }\n        if (character.settings.showGuardian) {\n            accumulator += character.guardianGold;\n        }\n        return accumulator;\n    }, 0);\n\n    //2. 일일 수익\n    const getDayGold = props.characters.reduce((accumulator, character) => {\n        if (character.chaosCheck >= 1) {\n            for (var i = 0; i < character.chaosCheck; i++) {\n                accumulator += character.chaosGold / 2;\n            }\n        }\n        if (character.guardianCheck === 1) {\n            accumulator += character.guardianGold;\n        }\n        return accumulator;\n    }, 0);\n\n    //3. 예상 주간 수익\n    const totalWeekGold = props.characters.reduce((accumulator, character) => {\n        if (character.goldCharacter) {\n            character.todoList.forEach((todo) => {\n                accumulator += todo.gold;\n            });\n        }\n        return accumulator;\n    }, 0);\n\n    //4. 주간 수익\n    const getWeekGold = props.characters.reduce((accumulator, character) => {\n        if (character.goldCharacter) {\n            accumulator += character.weekGold;\n        }\n        return accumulator;\n    }, 0);\n    //-------------------------------------------------------------------------\n\n    //------------------------- 일일 숙제 체크 관련 -------------------------\n    const updateDayContent = async (characterId, category, authority) => {\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        props.setShowLinearProgress(true);\n        const updatedCharacters = props.characters.map((character) => {\n            if (character.id === characterId) {\n                var updatedCharacter = {\n                    ...character,\n                };\n                const updateContent = {\n                    characterId: character.id,\n                    characterName: character.characterName,\n                };\n                return call(\"/v2/friends/day-content/check/\" + category, \"PATCH\", updateContent)\n                    .then((response) => {\n                        props.setShowLinearProgress(false);\n                        updatedCharacter = response;\n                        return updatedCharacter;\n                    })\n                    .catch((error) => {\n                        props.setShowLinearProgress(false);\n                        props.showMessage(error.errorMessage);\n                        updatedCharacter[`${category}Check`] = 0;\n                        return updatedCharacter;\n                    });\n            }\n            return character;\n        });\n        const updatedCharactersResult = await Promise.all(updatedCharacters);\n        props.setCharacters(updatedCharactersResult);\n    };\n\n    const updateDayContentAll = async (e, characterId, category, authority) => {\n        e.preventDefault();\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        props.setShowLinearProgress(true);\n        const updatedCharacters = props.characters.map((character) => {\n            if (character.id === characterId) {\n                var updatedCharacter = {\n                    ...character,\n                };\n                const updateContent = {\n                    characterId: character.id,\n                    characterName: character.characterName,\n                };\n                return call(\"/v2/friends/day-content/check/\" + category + \"/all\", \"PATCH\", updateContent)\n                    .then((response) => {\n                        props.setShowLinearProgress(false);\n                        updatedCharacter = response;\n                        return updatedCharacter;\n                    })\n                    .catch((error) => {\n                        props.setShowLinearProgress(false);\n                        props.showMessage(error.errorMessage);\n                        updatedCharacter[`${category}Check`] = 0;\n                        return updatedCharacter;\n                    });\n            }\n            return character;\n        });\n        const updatedCharactersResult = await Promise.all(updatedCharacters);\n        props.setCharacters(updatedCharactersResult);\n    };\n\n    //캐릭터 휴식게이지 업데이트\n    const handleDayContentGuage = async (e, characterId, gaugeType, authority) => {\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        e.preventDefault();\n        const newGaugeValue = window.prompt(`휴식게이지 수정`);\n\n        if (newGaugeValue !== null) {\n            const parsedValue = parseInt(newGaugeValue);\n            if (!isNaN(parsedValue)) {\n                const updatedCharacters = props.characters.map((character) => {\n                    if (character.id === characterId) {\n                        const updatedCharacter = {\n                            ...character,\n                            [`${gaugeType}Gauge`]: parsedValue,\n                        };\n\n                        const updateContent = {\n                            characterId: updatedCharacter.id,\n                            characterName: updatedCharacter.characterName,\n                            chaosGauge: updatedCharacter.chaosGauge,\n                            guardianGauge: updatedCharacter.guardianGauge,\n                            eponaGauge: updatedCharacter.eponaGauge,\n                        };\n\n                        props.setShowLinearProgress(true);\n\n                        return call(\"/v2/friends/day-content/gauge\", \"PATCH\", updateContent)\n                            .then((response) => {\n                                props.setShowLinearProgress(false);\n                                updatedCharacter.chaosGold = response.chaosGold;\n                                updatedCharacter.guardianGold = response.guardianGold;\n                                return updatedCharacter;\n                            })\n                            .catch((error) => {\n                                props.setShowLinearProgress(false);\n                                props.showMessage(error.errorMessage);\n                                return character;\n                            });\n                    }\n                    return character;\n                });\n                const updatedCharactersWithGold = await Promise.all(updatedCharacters);\n                props.setCharacters(updatedCharactersWithGold);\n            }\n        }\n    };\n\n    //------------------------- 서버별 분리 관련 -------------------------\n    // const [anchorEl, setAnchorEl] = useState(null);\n    // const [selectedServer, setSelectedServer] = useState(null);\n    // const [servers, setServers] = useState([]); //서버 리스트\n\n    // const open = Boolean(anchorEl);\n    // const handleClick = (event) => {\n    //     setAnchorEl(event.currentTarget);\n    // };\n    // const handleClose = () => {\n    //     setAnchorEl(null);\n    // };\n    // const handleServerSelect = (serverName) => {\n    //     setSelectedServer(serverName);\n    //     handleClose();\n    //     call(\"/member/characterList/\" + serverName, \"GET\", null)\n    //         .then((characterResponse) => {\n    //             props.setCharacters(characterResponse);\n    //         })\n    // };\n    // const serverItems = Object.entries(servers).map(([serverName, count]) => (\n    //     <MenuItem key={serverName} value={serverName}\n    //         onClick={() => handleServerSelect(serverName)}>\n    //         {serverName}: {count}개\n    //     </MenuItem>\n    // ));\n\n    // 도전 어비스/가디언 체크(v2 업데이트 완료)\n    const updateChallenge = async (character, content, authority) => {\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        props.setShowLinearProgress(true);\n        const updateContent = {\n            characterId: character.id,\n            serverName: character.serverName,\n            content: content\n        };\n        try {\n            const response = await call(\"/v2/friends/challenge\", \"PATCH\", updateContent);\n            props.setCharacters(response);\n            props.setShowLinearProgress(false);\n        } catch (error) {\n            console.error(\"Error updating challenge:\", error);\n            props.setShowLinearProgress(false);\n        }\n    }\n\n    //-----------------------------------------------------------------------------\n    return (\n        <div>\n            <div className=\"wrap\" style={{ marginTop: 0 }}>\n                <div className=\"setting-wrap\">\n                    <div className=\"content-box\">\n                        <p>일일 수익</p>\n                        <span className=\"bar\">\n                            <i style={{ width: `${getDayGold / totalDayGold * 100}%` }}></i>\n                            <em style={{ textAlign: \"center\" }}>{(getDayGold / totalDayGold * 100).toFixed(1)} %</em>\n                        </span>\n                        <p>{getDayGold.toFixed(2)} / <span>{totalDayGold.toFixed(2)}</span>G</p>\n                    </div>\n                    <div className=\"content-box\">\n                        <p>주간 수익</p>\n                        <span className=\"bar\">\n                            <i style={{ width: `${getWeekGold / totalWeekGold * 100}%` }}></i>\n                            <em style={{ textAlign: \"center\" }}>{(getWeekGold / totalWeekGold * 100).toFixed(1)} %</em>\n                        </span>\n                        <p className={`${getWeekGold / totalWeekGold}` === 1 ? \"on\" : \"\"}>{getWeekGold.toLocaleString()} / <span>{totalWeekGold.toLocaleString()}</span>G</p>{/* pub width가 100% 시 on 클래스 추가해주세요!(골드색변함) */}\n                    </div>\n                </div>\n                {props.showCharacterSortForm && <CharacterSortForm\n                    characters={props.characters}\n                    setCharacters={props.setCharacters}\n                    setShowLinearProgress={props.setShowLinearProgress}\n                    showMessage={props.showMessage}\n                    setShowCharacterSortForm={props.setShowCharacterSortForm}\n                    friendSetting={props.friendSetting}\n                    friendUsername={props.friendUsername}\n                />}\n                <div className=\"setting-wrap\">\n                    {/* <div>\n                        <Button\n                            id=\"fade-button\"\n                            aria-controls={open ? 'fade-menu' : undefined}\n                            aria-haspopup=\"true\"\n                            aria-expanded={open ? 'true' : undefined}\n                            onClick={handleClick}\n                        >\n                            {selectedServer} {servers[selectedServer]}개\n                        </Button>\n                        <Menu\n                            id=\"fade-menu\"\n                            MenuListProps={{\n                                'aria-labelledby': 'fade-button',\n                            }}\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={handleClose}\n                            TransitionComponent={Fade}\n                        >\n                            {serverItems}\n                        </Menu>\n                    </div> */}\n                    <button\n                        className={`content-button ${props.characters.length > 0 && props.characters[0].challengeGuardian === true ? \"done\" : \"\"}`}\n                        onClick={() => updateChallenge(props.characters[0], \"Guardian\", props.friendSetting.checkWeekTodo)} style={{ cursor: \"pointer\" }}\n                    >\n                        도전 가디언 토벌\n                        <div className=\"content-button-text\" onClick={() => updateChallenge(props.characters[0], \"Guardian\", props.friendSetting.checkWeekTodo)}>\n                            {props.characters.length > 0 && (props.characters[0]?.challengeGuardian === true ? <DoneIcon /> : \"\")}\n                        </div>\n                    </button>\n                    <button\n                        className={`content-button ${props.characters.length > 0 && props.characters[0].challengeAbyss === true ? \"done\" : \"\"}`}\n                        onClick={() => updateChallenge(props.characters[0], \"Abyss\", props.friendSetting.checkWeekTodo)} style={{ cursor: \"pointer\" }}\n                    >\n                        도전 어비스 던전\n                        <div className=\"content-button-text\" onClick={() => updateChallenge(props.characters[0], \"Abyss\", props.friendSetting.checkWeekTodo)}>\n                            {props.characters.length > 0 && (props.characters[0]?.challengeAbyss === true ? <DoneIcon /> : \"\")}\n                        </div>\n                    </button>\n                </div>\n                <div className=\"todo-wrap\" >\n                    <Grid container spacing={1.5} overflow={\"hidden\"}>\n                        {props.characters.map((character) => (\n                            <Grid key={character.id} item>\n                                <div className=\"character-wrap\">\n                                    <div className=\"character-info\"\n                                        style={{\n                                            backgroundImage: character.characterImage !== null ? `url(${character.characterImage})` : \"\",\n                                            backgroundPosition: character.characterClassName === \"도화가\" || character.characterClassName === \"기상술사\" ? \"left 10px top -80px\" : \"left 10px top -30px\",\n                                            backgroundColor: \"gray\", // 배경색을 회색으로 설정\n                                        }}>\n                                        <div className={character.goldCharacter ? \"gold-border\" : \"\"}>\n                                            {character.goldCharacter ? \"골드 획득 지정\" : \"\"} {/* pub 문구변경 */}\n                                        </div>\n                                        <span>@{character.serverName}  {character.characterClassName}</span>\n                                        <h3 style={{ margin: 0 }}>{character.characterName}</h3>\n                                        <h2 style={{ margin: 0 }}>Lv. {character.itemLevel}</h2>\n                                    </div>\n                                    <p className=\"title\">일일 숙제</p>{/* pub 추가 */}\n                                    {props.friendSetting.showDayTodo && <div>\n                                        <div className=\"content-wrap\">\n                                            <div className=\"content\"\n                                                onClick={() => updateDayContent(character.id, \"epona\", props.friendSetting.checkDayTodo)}\n                                                onContextMenu={(e) => updateDayContentAll(e, character.id, \"epona\", props.friendSetting.checkDayTodo)}\n                                                style={{ cursor: \"pointer\" }}\n                                            >\n                                                <button\n                                                    className={`content-button ${character.eponaCheck === 3 ? \"done\" :\n                                                        character.eponaCheck === 1 ? \"ing\" :\n                                                            character.eponaCheck === 2 ? \"ing2\" : \"\"}`}\n                                                >\n                                                    {character.eponaCheck === 3 ? <DoneIcon /> : <CloseIcon />}\n                                                </button>\n                                                <div\n                                                    className={`${character.eponaCheck === 3 ? \"text-done\" : \"\"}`}>\n                                                    <span>에포나의뢰</span>\n                                                </div>\n                                            </div>\n                                            <div className=\"content gauge-box\" style={{ height: 24, padding: 0, position: \"relative\", cursor: \"pointer\" }}\n                                                onContextMenu={(e) => handleDayContentGuage(e, character.id, \"epona\", props.friendSetting.checkDayTodo)}\n                                                onClick={(e) => handleDayContentGuage(e, character.id, \"epona\", props.friendSetting.checkDayTodo)}>\n                                                {Array.from({ length: 5 }, (_, index) => (\n                                                    <div key={index} className=\"gauge-wrap\">\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 < character.eponaGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 + 1 < character.eponaGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                    </div>\n                                                ))}\n                                                <span className=\"gauge-text\">\n                                                    휴식게이지 {character.eponaGauge}\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div className=\"content-wrap\">\n                                            <div className=\"content\" onClick={() => updateDayContent(character.id, \"chaos\", props.friendSetting.checkDayTodo)}\n                                                onContextMenu={(e) => updateDayContentAll(e, character.id, \"chaos\", props.friendSetting.checkDayTodo)}\n                                                style={{ cursor: \"pointer\" }}>\n                                                <button\n                                                    className={`content-button ${character.chaosCheck === 0 ? \"\" :\n                                                        character.chaosCheck === 1 ? \"ing\" : \"done\"}`}\n                                                >\n                                                    {character.chaosCheck === 2 ? <DoneIcon /> : <CloseIcon />}\n                                                </button>\n                                                <div\n                                                    className={`${character.chaosCheck === 2 ? \"text-done\" : \"\"}`}\n                                                >\n                                                    <p>카오스던전</p>\n                                                    <p className=\"gold\">({character.chaosGold} gold)</p>\n                                                </div>\n                                            </div>\n                                            <div className=\"content gauge-box\" style={{ height: 24, padding: 0, position: \"relative\", cursor: \"pointer\" }}\n                                                onContextMenu={(e) => handleDayContentGuage(e, character.id, \"chaos\", props.friendSetting.checkDayTodo)}\n                                                onClick={(e) => handleDayContentGuage(e, character.id, \"chaos\", props.friendSetting.checkDayTodo)}>\n                                                {Array.from({ length: 5 }, (_, index) => (\n                                                    <div key={index} className=\"gauge-wrap\">\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 < character.chaosGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 + 1 < character.chaosGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                    </div>\n                                                ))}\n                                                <span className=\"gauge-text\">\n                                                    휴식게이지 {character.chaosGauge}\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div className=\"content-wrap\">\n                                            <div className=\"content\" onClick={() => updateDayContent(character.id, \"guardian\", props.friendSetting.checkDayTodo)}\n                                                onContextMenu={(e) => updateDayContentAll(e, character.id, \"guardian\", props.friendSetting.checkDayTodo)}\n                                                style={{ cursor: \"pointer\" }}>\n                                                <button\n                                                    className={`content-button ${character.guardianCheck === 1 ? \"done\" : \"\"}`}\n                                                >\n                                                    {character.guardianCheck === 1 ? <DoneIcon /> : <CloseIcon />}\n                                                </button>\n                                                <div\n                                                    className={`${character.guardianCheck === 1 ? \"text-done\" : \"\"}`}\n                                                >\n                                                    <p>가디언토벌</p>\n                                                    <p className=\"gold\">({character.guardianGold} gold)</p>\n                                                </div>\n                                            </div>\n                                            <div className=\"content gauge-box\" style={{ height: 24, padding: 0, position: \"relative\", cursor: \"pointer\" }}\n                                                onContextMenu={(e) => handleDayContentGuage(e, character.id, \"guardian\", props.friendSetting.checkDayTodo)}\n                                                onClick={(e) => handleDayContentGuage(e, character.id, \"guardian\", props.friendSetting.checkDayTodo)}>\n                                                {Array.from({ length: 5 }, (_, index) => (\n                                                    <div key={index} className=\"gauge-wrap\">\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 < character.guardianGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 + 1 < character.guardianGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                    </div>\n                                                ))}\n                                                <span className=\"gauge-text\">\n                                                    휴식게이지 {character.guardianGauge}\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>}\n                                </div>\n                                <FriendWeekTodoWrap\n                                    characters={props.characters}\n                                    setCharacters={props.setCharacters}\n                                    character={character}\n                                    setModalTitle={props.setModalTitle}\n                                    setModalContent={props.setModalContent}\n                                    setOpenModal={props.setOpenModal}\n                                    setShowLinearProgress={props.setShowLinearProgress}\n                                    showMessage={props.showMessage}\n                                    friendSetting={props.friendSetting}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            </div >\n        </div>\n    );\n};\n\nexport default FriendTodoWrap;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/AdsCard.js",[],[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendBasicSpeedDial.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/boards.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardList.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardInsertForm.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/Board.jsx",["408","409"],[],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n//게시글 조회\nconst Board = ({ board, no }) => {\n    const createMarkup = () => {\n        return { __html: board.content };\n    };\n    return (\n        <div className=\"board-container\">\n            <div className=\"board-info\">\n                <p className=\"notice-title\">공지 | {board.title}</p>\n                <p className=\"reg-date\">{new Date(board.regDate).toLocaleString()}</p>\n            </div>\n            <div className=\"board-content\" dangerouslySetInnerHTML={createMarkup()} />\n            {/* <Link to={`/boards/update/${no}`}>수정</Link> */}\n        </div>\n    );\n};\n\nexport default Board;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/search/SearchBox.jsx",["410","411"],[],"import React, { useState } from \"react\";\nimport './SearchBox.css';\nimport SearchIcon from '@mui/icons-material/Search';\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nfunction SearchBox({ placeholder, data }) {\n    const [filteredData, setFilteredData] = useState([]);\n    const [wordEntered, setWordEntered] = useState(\"\");\n  \n    const handleFilter = (event) => {\n      const searchWord = event.target.value;\n      setWordEntered(searchWord);\n      const newFilter = data.filter((value) => {\n        return value.title.toLowerCase().includes(searchWord.toLowerCase());\n      });\n  \n      if (searchWord === \"\") {\n        setFilteredData([]);\n      } else {\n        setFilteredData(newFilter);\n      }\n    };\n  \n    const clearInput = () => {\n      setFilteredData([]);\n      setWordEntered(\"\");\n    };\n  \n    return (\n      <div className=\"search\">\n        <div className=\"searchInputs\">\n          <input\n            type=\"text\"\n            placeholder={placeholder}\n            value={wordEntered}\n            onChange={handleFilter}\n          />\n          <div className=\"searchIcon\">\n            {filteredData.length === 0 ? (\n              <SearchIcon />\n            ) : (\n              <CloseIcon id=\"clearBtn\" onClick={clearInput} />\n            )}\n          </div>\n        </div>\n        {filteredData.length != 0 && (\n          <div className=\"dataResult\">\n            {filteredData.slice(0, 15).map((value, key) => {\n              return (\n                <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                  <p>{value.title} </p>\n                </a>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n\nexport default SearchBox;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/api.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/comments/CommentListContainer.jsx",["412","413","414"],[],"import React, {useState, useEffect} from 'react';\nimport * as comment from '../../apis/comments';\nimport CommentList from '../../components/comments/CommentList';\nimport PageNation from '../../fragments/PageNation';\nimport CommentWrap from \"../../components/comments/CommentWrap\";\n\n// 방명록 리스트\n// 루트 코멘트 5개 + 답글 출력\nconst CommentListContainer = ({setIsLoading}) => {\n\n    //state 설정\n    const [backendComments, setBackendComments] = useState([]);\n    const [rootComments, setRootComments] = useState([]);\n    const [currentUser, setCurrentUser] = useState([]);\n    const [activeComment, setActiveComment] = useState(null);\n    const [totalPages, setTotalPages] = useState(1);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    // 방명록 데이터\n    const getComment = async (page) => {\n        setIsLoading(true);\n        const data = await comment.list(page);\n        setBackendComments(data.commentDtoList);\n        setTotalPages(data.totalPages);\n        setCurrentUser(data.memberResponseDto)\n        isRootComments(data.commentDtoList);\n        setIsLoading(false);\n    }\n\n    // 데이터 호출\n    useEffect(() => {\n        getComment(currentPage);\n    }, [currentPage]);\n\n    //게시글 추가\n    const addComment = async (text, parentId = null) => {\n        const data = await comment.addComment(text, parentId);\n        setBackendComments(data.commentDtoList);\n        setTotalPages(data.totalPages);\n        isRootComments(data.commentDtoList);\n        setCurrentPage(1);\n        setActiveComment(null);\n    };\n\n    //게시글 수정\n    const updateComment = async (text, commentId, page) => {\n        const data = await comment.updateComment(text, commentId, page);\n        setBackendComments(data.commentDtoList);\n        isRootComments(data.commentDtoList);\n        setActiveComment(null);\n    };\n\n    //게시글 삭제\n    const deleteComment = async (commentId) => {\n        const data = await comment.deleteComment(commentId);\n        setBackendComments(data.commentDtoList);\n        setTotalPages(data.totalPages);\n        isRootComments(data.commentDtoList);\n        setCurrentPage(1);\n        setActiveComment(null);\n    };\n\n    //루트 코멘트인가?\n    const isRootComments = (backendComments) => {\n        setRootComments(backendComments.filter((backendComment) => backendComment.parentId === 0));\n    }\n\n    //답글인가? (루트 코멘트가 있는가?)\n    const getReplies = (commentId) =>\n        backendComments\n            .filter((backendComment) => backendComment.parentId === commentId)\n            .sort(\n                (a, b) =>\n                    new Date(a.regDate).getTime() - new Date(b.regDate).getTime()\n            );\n\n    // 페이징\n    const handlePageClick = async (page) => {\n        if (page <= totalPages) {\n            try {\n                const data = await comment.list(page);\n                setBackendComments(data.commentDtoList);\n                isRootComments(data.commentDtoList);\n                setCurrentPage(page);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    };\n\n    return (\n        <CommentWrap\n            addComment={addComment}\n            rootComments={rootComments}\n            getReplies={getReplies}\n            activeComment={activeComment}\n            setActiveComment={setActiveComment}\n            deleteComment={deleteComment}\n            updateComment={updateComment}\n            currentUser={currentUser}\n            currentPage={currentPage}\n            handlePageClick={handlePageClick}\n            totalPages={totalPages}\n        />\n    );\n};\n\nexport default CommentListContainer;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/comments.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/comments/CommentList.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/comments/CommentInsertForm.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/comments/Comment.jsx",["415"],[],"import React from 'react';\nimport CommentInsertForm from './CommentInsertForm';\n\nconst Comment = ({\n    comment,\n    replies,\n    setActiveComment,\n    activeComment,\n    updateComment,\n    deleteComment,\n    addComment,\n    parentId = null,\n    currentUser, \n    currentPage\n  }) => {\n    const isEditing =\n      activeComment &&\n      activeComment.id === comment.id &&\n      activeComment.type === \"editing\";\n    const isReplying =\n      activeComment &&\n      activeComment.id === comment.id &&\n      activeComment.type === \"replying\";\n    const canDelete =\n      (currentUser.id === comment.memberId && replies.length === 0);\n    const canReply = (currentUser.role === \"ADMIN\" || \"PUBLISHER\") || (currentUser.id === comment.memberId);\n    const canEdit = currentUser.id === comment.memberId;\n    const replyId = parentId ? parentId : comment.id;\n    const regDate = new Date(comment.regDate).toLocaleString();\n    var username = \"\";\n    if (comment.role === \"ADMIN\") {\n      username = \"관리자\";\n    } else if (comment.role === \"PUBLISHER\") {\n      username = \"UI담당자\";\n    } else {\n      username = comment.username.substring(0, 5) + '*'.repeat(comment.username.length - 5);\n    }\n  \n    return (\n      <div key={comment.id} className=\"comment\">\n        <div className=\"comment-image-container\">\n          <img src=\"/user-icon.png\" />\n        </div>\n        <div className=\"comment-right-part\">\n          <div className=\"comment-content\">\n            <div>\n              <span className=\"comment-author\"\n                style={{ color: comment.role === \"ADMIN\" ? \"blue\" : \"\" }}\n              >{username}</span>({regDate})\n            </div>\n          </div>\n          {!isEditing && <div className=\"comment-text\">{comment.body}</div>}\n          {isEditing && (\n            <CommentInsertForm\n              submitLabel=\"Update\"\n              hasCancelButton\n              initialText={comment.body}\n              handleSubmit={(text) => updateComment(text, comment.id, currentPage)}\n              handleCancel={() => {\n                setActiveComment(null);\n              }}\n            />\n          )}\n          <div className=\"comment-actions\">\n            {canReply && (\n              <div\n                className=\"comment-action\"\n                onClick={() =>\n                  setActiveComment({ id: comment.id, type: \"replying\" })\n                }\n              >\n                Reply\n              </div>\n            )}\n            {canEdit && (\n              <div\n                className=\"comment-action\"\n                onClick={() =>\n                  setActiveComment({ id: comment.id, type: \"editing\" })\n                }\n              >\n                Edit\n              </div>\n            )}\n            {canDelete && (\n              <div\n                className=\"comment-action\"\n                onClick={() => deleteComment(comment.id)}\n              >\n                Delete\n              </div>\n            )}\n          </div>\n          {isReplying && (\n            <CommentInsertForm\n              submitLabel=\"Reply\"\n              handleSubmit={(text) => addComment(text, replyId)}\n            />\n          )}\n          {replies.length > 0 && (\n            <div className=\"replies\">\n              {replies.map((reply) => (\n                <Comment\n                  comment={reply}\n                  key={reply.id}\n                  setActiveComment={setActiveComment}\n                  activeComment={activeComment}\n                  updateComment={updateComment}\n                  deleteComment={deleteComment}\n                  addComment={addComment}\n                  parentId={comment.id}\n                  replies={[]}\n                  currentUser={currentUser}\n                  currentPage={currentPage}\n                />\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n  \n  export default Comment;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoContainer.jsx",["416"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/todo.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoMain.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoProfitsContainer.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoProfit.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/CircularLoading.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/PageNation.jsx",["417","418","419","420","421","422","423"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoModal.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoServerAndChallengeContainer.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoServerAndChallenge.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/friend.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoContentWrapContainer.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoContentWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoWeekRaidContainer.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoWeekRaid.jsx",["424","425","426"],[],"import React from 'react';\nimport DoneIcon from \"@mui/icons-material/Done\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\nimport WeekEponaWrap from \"./weekContent/WeekEponaWrap\";\nimport SilmaelChangeWrap from \"./weekContent/SilmaelChangeWrap\";\nimport CubeWrap from \"./weekContent/CubeWrap\";\nimport TodoWeekContentContainer from \"../../containers/todo/TodoWeekContentContainer\";\n\nconst TodoWeekRaid = ({\n                          setIsLoading,\n                          showMessage,\n                          character,\n                          characters,\n                          setCharacters,\n                          openAddTodoForm,\n                          updateWeekCheck,\n                          updateWeekCheckAll,\n                          updateWeekMessage,\n                          changeShow,\n                          setModalTitle,\n                          setModalContent,\n                          setOpenModal\n                      }) => {\n    return (\n        <div className=\"character-wrap\">\n            <div className=\"content\" style={{padding: 0, display: character.settings.showWeekTodo ? \"block\" : \"none\"}}>\n                <p className=\"title\">주간 레이드</p>{/* pub 추가 */}\n                <p className=\"txt\">마우스 우클릭 시 한번에 체크됩니다</p>{/* pub 추가 */}\n                <button\n                    className={\"content-button\"}\n                    onClick={() => openAddTodoForm(character.id, character.characterName, character.goldCharacter)}\n                    style={{width: '101%', fontWeight: \"bold\", fontSize: 16}}\n                >\n                    편집{/* pub 추가 */}\n                </button>\n            </div>\n            <div className=\"character-todo\">\n                {character.todoList.map((todo) => (\n                    <div className=\"content-wrap\" key={todo.id}>\n                        <div\n                            className=\"content\"\n                            style={{\n                                height: 75,\n                                position: \"relative\",\n                                justifyContent: \"space-between\",\n                                fontSize: 14, //pub 수정\n                            }}\n                        >\n                            <div style={{\n                                display: \"flex\",\n                                flexDirection: \"row\",\n                                justifyContent: \"center\",\n                                cursor: \"pointer\"\n                            }}>\n                                {/* 여기서 부터 */}\n                                <button\n                                    className={`content-button ${todo.check ? \"done\" : \"\"}`}\n                                    style={{cursor: \"pointer\"}}\n                                    onClick={() => updateWeekCheck(character.characterName, todo)}\n                                    onContextMenu={(e) => updateWeekCheckAll(e, character.characterName, todo)}\n                                >\n                                    {todo.check ? <DoneIcon/> : <CloseIcon/>}\n                                </button>\n                                {/* 여기까지 클릭 버튼 */}\n                                {/* 여기서 부터 */}\n                                <div style={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    justifyContent: \"center\",\n                                    width: \"100%\"\n                                }}>\n                                    <div\n                                        className={`${todo.check ? \"text-done\" : \"\"}`}\n                                        onClick={() => updateWeekCheck(character.characterName, todo)}\n                                        onContextMenu={(e) => updateWeekCheckAll(e, character.characterName, todo)}\n                                        dangerouslySetInnerHTML={{__html: todo.name.replace(/\\n/g, \"<br />\")}} // pub 이부분 원래로 원복\n                                    >\n                                    </div>\n                                    <div\n                                        className={`${todo.check ? \"text-done\" : \"\"}`}\n                                        onClick={() => updateWeekCheck(character.characterName, todo)}\n                                        onContextMenu={(e) => updateWeekCheckAll(e, character.characterName, todo)}\n                                    >\n                                        <span\n                                            className=\"gold\">{character.goldCharacter ? todo.gold + \" G\" : \"\"}</span> {/* pub span gold 추가 */}\n                                    </div>\n                                    <div className={\"input-field\"} id={\"input_field_\" + todo.id}>\n                                        {todo.message !== null && (\n                                            <input\n                                                type=\"text\"\n                                                spellCheck=\"false\"\n                                                defaultValue={todo.message}\n                                                style={{width: \"90%\"}}\n                                                onBlur={(e) => updateWeekMessage(character.id, todo.id, e.target.value)}\n                                                onKeyDown={(e) => {\n                                                    if (e.key === \"Enter\") {\n                                                        updateWeekMessage(character.id, todo.id, e.target.value);\n                                                        e.target.blur();\n                                                    }\n                                                }}\n                                                placeholder=\"메모 추가\"\n                                            />\n                                        )}\n                                    </div>\n                                </div>\n                                {/* 여기까지 출력 글씨 */}\n                                {/* 여기서 부터 */}\n                                <div>\n                                    {todo.message === null ?\n                                        <AddBoxIcon id={\"input_field_icon_\" + todo.id}\n                                                    onClick={() => changeShow(character.id, todo.id)}/> : \"\"}\n                                </div>\n                                {/* 여기까지 \"+\" 버튼 */}\n                            </div>\n                        </div>\n                        <div className=\"content gauge-box\"\n                             style={{height: 16, padding: 0, position: \"relative\"}}> {/* pub guage-box 클래스추가 */}\n                            {Array.from({length: todo.totalGate}, (_, index) => (\n                                <div key={`${todo.id}-${index}`} className=\"gauge-wrap\"\n                                     style={{\n                                         backgroundColor: todo.currentGate > index ? \"#ffbfb6\" : \"\", // pub\n                                         width: 100 / todo.totalGate + \"%\",\n                                         alignItems: \"center\",\n                                         justifyContent: \"center\",\n                                         color: \"var(--text-color)\"\n                                     }}>\n                                    <span>{index + 1}관문</span>\n                                </div>\n                            ))}\n                            <span className=\"gauge-text\"></span>\n                        </div>\n                    </div>\n                ))}\n            </div>\n            {/* pub 2023-10-23 스타일 적용 완료 */}\n            {(character.settings.showWeekEpona || character.settings.showSilmaelChange || character.settings.showCubeTicket) &&\n                <div className=\"content title02\" style={{padding: 0}}>\n                    <p className=\"title\">주간 숙제</p>\n                </div>\n            }\n            {/*주간 숙제(에포나, 큐브, 실마엘)*/}\n            <TodoWeekContentContainer\n                showMessage={showMessage}\n                setIsLoading={setIsLoading}\n                character={character}\n                characters={characters}\n                setCharacters={setCharacters}\n                setModalTitle={setModalTitle}\n                setModalContent={setModalContent}\n                setOpenModal={setOpenModal}\n            />\n        </div>\n    );\n};\n\nexport default TodoWeekRaid;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/todo/TodoWeekContentContainer.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardWrap.jsx",["427"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/comments/CommentWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/TodoWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/boards/BoardListContainer.jsx",["428"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/boards/BoardUpdateContainer.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/boards/BoardReadContainer.jsx",["429"],[],"import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as boards from '../../apis/boards';\nimport Board from '../../components/boards/Board';\n\n// 게시글 조회\nconst BoardReadContainer = () => {\n    const { no } = useParams(); //url경로에 있는 param\n\n    // state 설정\n    const [board, setBoard] = useState([]);\n\n    // 게시글 목록 데이터\n    const getBoard = async () => {\n        try {\n            const data = (await boards.select(no));\n            setBoard(data);\n        } catch(e) {\n            console.log(e);\n        }\n    }\n\n    useEffect(()=>{\n        getBoard();\n    }, []);\n\n    return (<Board board={board} no={no}></Board>);\n};\n\nexport default BoardReadContainer;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/boards/BoardInsertContainer.jsx",["430","431"],[],"import React, {useEffect} from 'react';\nimport * as boards from '../../apis/boards';\nimport BoardInsertForm from '../../components/boards/BoardInsertForm';\nimport {useNavigate} from 'react-router-dom';\n\n// 게시글 등록 \nconst BoardInsertContainer = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n        if (accessToken === null || !accessToken) {\n            alert(\"로그인 후 이용해주세요!\");\n            navigate(\"/login\");\n        }\n    }, []);\n\n    const onInsert = async (title, content) => {\n        try {\n            const response = await boards.insert(title, content);\n            alert(\"등록 완료\");\n\n            // -> 게시글 목록 이동\n            navigate('/boards');\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <BoardInsertForm onInsert={onInsert}/>\n    );\n};\n\nexport default BoardInsertContainer;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/weekContent/SilmaelChangeWrap.jsx",["432"],[],"import React from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { call } from \"../../../service/api-service\";\n\nconst SilmaelChangeWrap = ({\n                               character,\n                               silmaelChange,\n                               silmaelChangeAll\n                           }) => {\n    return (\n        <div className=\"content-wrap\">\n            <div\n                className=\"content\"\n                style={{\n                    height: 35,\n                    position: \"relative\",\n                    justifyContent: \"space-between\",\n                    fontSize: 14, //pub 수정\n                }}\n            >\n                <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", cursor: \"pointer\" }}\n                    onClick={() => silmaelChange(character.id)}\n                    onContextMenu={(e) => silmaelChangeAll(e, character.id)}\n                >\n                    {/* 여기서 부터 */}\n                    <button\n                        className={`content-button ${character.silmaelChange ? \"done\" : \"\"}`}\n                        style={{ cursor: \"pointer\" }}\n                    >\n                        <CloseIcon />\n                    </button>\n                    {/* 여기까지 클릭 버튼 */}\n                    {/* 여기서 부터 */}\n                    <div\n                        className={`${character.silmaelChange ? \"text-done\" : \"\"}`}\n                        style={{ width: \"100%\" }}>\n                        실마엘 혈석 교환\n                    </div>\n                    {/* 여기까지 출력 글씨 */}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SilmaelChangeWrap;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/weekContent/CubeWrap.jsx",["433"],[],"import React from \"react\";\nimport { call } from \"../../../service/api-service\";\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst CubeWrap = ({\n                      character,\n                      addCubeTicket,\n                      substractCubeTicket,\n                      openCubeAverage,\n                  }) => {\n    return (\n        <div className=\"content-wrap\">\n            <div\n                className=\"content\"\n                style={{\n                    height: 35,\n                    position: \"relative\",\n                    justifyContent: \"space-between\",\n                    fontSize: 14,\n                }}\n            >\n                <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\" }}>\n                    <button\n                        className =\"minus\"\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => substractCubeTicket(character.id)}\n                    >\n                        -\n                    </button>\n                    <div\n                        style={{ width: \"90px\", justifyContent: \"center\", alignItems: \"center\", display: \"flex\" }}\n                    >\n                        {character.cubeTicket} 장\n                    </div>\n                    <button\n                        className =\"plus\"\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => addCubeTicket(character.id)}\n                    >\n                        +\n                    </button>\n                    <div\n                        style={{ width: \"100%\", marginLeft: 10 }}\n                    >\n                        큐브 티켓\n                    </div>\n                    <SearchIcon onClick={() => openCubeAverage(character.itemLevel)} style={{ cursor: \"pointer\" }} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CubeWrap;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/weekContent/WeekEponaWrap.jsx",["434"],[],"import React from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {call} from \"../../../service/api-service\";\n\nconst WeekEponaWrap = ({\n                           character,\n                           weekEponaCheck,\n                           weekEponaCheckAll\n                       }) => {\n    return (\n        <div className=\"content-wrap\">\n            <div\n                className=\"content\"\n                style={{\n                    height: 35,\n                    position: \"relative\",\n                    justifyContent: \"space-between\",\n                    fontSize: 14, //pub 수정\n                }}\n            >\n                <div style={{display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", cursor: \"pointer\"}}\n                     onClick={() => weekEponaCheck(character.id)}\n                     onContextMenu={(e) => weekEponaCheckAll(e, character.id)}\n                >\n                    <button\n                        className={`content-button ${character.weekEpona === 3 ? \"done\" :\n                            character.weekEpona === 1 ? \"ing\" :\n                                character.weekEpona === 2 ? \"ing2\" : \"\"}`}\n                        style={{cursor: \"pointer\"}}\n                    >\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={`${character.weekEpona === 3 ? \"text-done\" : \"\"}`}\n                        style={{width: \"100%\"}}\n                    >\n                        주간에포나\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default WeekEponaWrap;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/CharacterSortForm.jsx",["435","436","437"],[],"import React, { useState } from \"react\";\nimport * as todo from '../../apis/todo';\nimport * as friend from '../../apis/friend';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Typography } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport {\n    GridContextProvider,\n    GridDropZone,\n    GridItem,\n    swap,\n} from \"react-grid-dnd\";\n\nconst CharacterSortForm = ({\n    setIsLoading,\n    characters,\n    setCharacters,\n    showMessage,\n    itemsPerRow,\n    setShowCharacterSortForm,\n    friendSetting = null,\n    friendUsername = null\n}) => {\n    //1.순서 변경 캐릭터 리스트 저장\n    const [itemsSwapState, setItemsSwapState] = React.useState(false);\n    function onChange(sourceId, sourceIndex, targetIndex, targetId) {\n        setItemsSwapState(true);\n        const nextState = swap(characters, sourceIndex, targetIndex);\n        for (let i = 0; i < nextState.length; i++) {\n            nextState[i].sortNumber = i;\n        }\n        setCharacters(nextState);\n    }\n\n    //2.순서 변경 DB저장\n    const saveSort = async () => {\n        if (friendSetting === null) {\n            try {\n                setIsLoading(true);\n                const response = await todo.saveSort(characters);\n                showMessage(\"순서 업데이트가 완료되었습니다.\");\n                setShowCharacterSortForm(false);\n            } catch (error) {\n                console.error('Error saveSort:', error);\n            } finally {\n                setIsLoading(false);\n            }\n        } else {\n            if (friendSetting.setting) {\n                try {\n                    setIsLoading(true);\n                    const response = await friend.saveSort(friendUsername, characters);\n                    showMessage(\"순서 업데이트가 완료되었습니다.\");\n                } catch (error) {\n                    console.error('Error updating updateChallenge:', error);\n                } finally {\n                    setIsLoading(false);\n                }\n            } else {\n                showMessage(\"권한이 없습니다.\");\n            }\n\n        }\n    };\n\n    return (\n        <Accordion style={{ backgroundColor: \"rgba(255, 255, 255, 50%)\", width: \"100%\", border: \"1px solid white\" }} className=\"sort-wrap\">\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                style={{ borderRadius: \"5px\" }}\n            >\n                <Typography fontWeight={\"bold\"} display={\"flex\"}>캐릭터 순서 변경\n                    <SaveIcon\n                        onClick={() => saveSort()}\n                        sx={{ display: itemsSwapState ? \"flex\" : \"none\", marginLeft: \"5px\", color: \"blueviolet\", cursor: \"pointer\" }}\n                    >\n                    </SaveIcon>\n                </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <GridContextProvider onChange={onChange}>\n                    <GridDropZone\n                        id=\"characters\"\n                        boxesPerRow={itemsPerRow}\n                        rowHeight={80}\n                        style={{ height: 80 * Math.ceil(characters.length / itemsPerRow) }}\n                    >\n                        {characters.map((character) => (\n                            <GridItem key={character.sortNumber} style={{ width: `${100 / itemsPerRow}%` }}>\n                                <div style={{ marginRight: 10 }}>\n                                    <div className=\"character-info-mini\"\n                                        style={{\n                                            backgroundImage: character.characterImage !== null ? `url(${character.characterImage})` : \"\",\n                                            backgroundPosition: character.characterClassName === \"도화가\" || character.characterClassName === \"기상술사\" ? \"left 25px top -70px\" : \"left 25px top -35px\",\n                                            backgroundColor: \"gray\",\n                                        }}>\n                                        <p>{character.characterName}</p>\n                                        <p>Lv. {character.itemLevel}</p>\n                                    </div>\n                                </div>\n                            </GridItem>\n                        ))}\n                    </GridDropZone>\n                    <span className=\"acc-txt\">드래그 시 캐릭터 순서가 변경됩니다</span>\n                </GridContextProvider>\n            </AccordionDetails>\n        </Accordion>\n    );\n};\n\nexport default CharacterSortForm;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/backup/TodoWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/backup/WeekTodoWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/home/HomeContainer.jsx",["438","439"],[],"import React, {useEffect, useState} from 'react';\nimport HomeMain from \"../../components/home/HomeMain\";\n\nconst HomeContainer = ({\n                           setIsLoading,\n                           showMessage\n                       }) => {\n\n    return (\n        <HomeMain\n            setIsLoading={setIsLoading}\n            showMessage={showMessage}\n        />\n    );\n};\n\nexport default HomeContainer;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/home/HomeMain.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/home/HomeBoardContainer.jsx",["440","441","442"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/home/HomeBoards.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardText.jsx",["443"],[],"import React from 'react';\nimport DiscordIcon from '../../icons/DiscordIcon';\n\nconst BoardText = () => {\n    return (\n        <div className=\"comments\">\n            <div className=\"noticeBox box01\">\n                <p className=\"notice\">주요 공지사항</p>\n                <div className=\"cont\">\n                    <ul>\n                        <li>개발자 : <DiscordIcon /> 마볼링#2884 <a href=\"https://open.kakao.com/o/snL05upf\" target='_blank'>오픈카톡</a></li>\n                        <li>UI담당자 : <DiscordIcon /> 얀비#7431</li>\n                    </ul>\n                </div>\n                <div className=\"cont\">\n                    <p>사용해주시고 많은 의견주셔서 너무 감사합니다. 최대한 빠르게 업데이트 하도록 해보겠습니다.</p>\n                    <ul>\n                        <li>서버에 접속이 안되는 경우, 보통 업데이트 중이므로 1~2분 후 접속이 가능합니다.</li>\n                        <li>슬라임/메데이아의 경우 서버별로 다르고, 길드가 직접 운영하기 때문에 추가가 어려울 것 같습니다.</li>\n                    </ul>\n                </div>\n                <div className=\"cont\">\n                    <p style={{ fontWeight: \"bold\" }}>개발자에게 커피 한잔</p>\n                    <ul>\n                        <li>보내주신 소중한 후원금은 서버 유지 및 발전 비용으로 사용됩니다.</li>\n                        <li>카카오뱅크 3333-08-6962739</li>\n                        <li>예금주 : 이민혁</li>\n                    </ul>\n                </div>\n            </div>\n            {/*<div className=\"noticeBox box02\">*/}\n            {/*    <p className=\"update\">개발 예정</p>*/}\n            {/*    <div className=\"cont\">*/}\n            {/*        <ul>*/}\n            {/*            <li>카게, 모험섬, 필보, 로웬 주간퀘 등 - 페이지를 따로 분리할 예정입니다.</li>*/}\n            {/*            <li>기록남기기 - 숙제로 얻은 수익을 기록하여 그래프 혹은 표로 표시</li>*/}\n            {/*            <li>데이터보기 - 일일숙제, 큐브로 얻는 재화량 통계와 현재 경매장 시세를 확인, 귀속 재료도 수익확인</li>*/}\n            {/*            <li>캐릭터 info - 로아와, 클로아, 일로아와 유사한 기능</li>*/}\n            {/*        </ul>*/}\n            {/*    </div>*/}\n            {/*</div>*/}\n        </div>\n    );\n};\n\nexport default BoardText;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/home/HomeNoticesContainer.jsx",["444","445","446"],[],"import React, {useEffect, useState} from 'react';\nimport * as notices from \"../../apis/notices\";\nimport HomeNotices from \"../../components/home/HomeNotices\";\n\nconst HomeBoardContainer = ({\n                                setIsLoading,\n                                showMessage\n                            }) => {\n    const [noticesList, setNoticesList] = useState([]);\n    const [totalPages, setTotalPages] = useState(1);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    // 사이트 공지사항  데이터\n    const getNoticesList = async (page, size) => {\n        setIsLoading(true);\n        try {\n            const data = await notices.list(page, size);\n            setNoticesList(data.noticesList);\n            setTotalPages(data.totalPages);\n        } catch (error) {\n            console.log(error);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        getNoticesList(currentPage, 5);\n    }, [currentPage]);\n\n    return (<HomeNotices\n        noticesList={noticesList}\n    />);\n};\n\nexport default HomeBoardContainer;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/notices.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/home/HomeNotices.jsx",["447"],[],"import React from 'react';\n\nconst HomeBoards = ({\n                        noticesList\n                    }) => {\n    const isRecent = (date) => {\n        const currentDate = new Date();\n        const boardDate = new Date(date);\n        const timeDifference = currentDate - boardDate;\n        const daysDifference = timeDifference / (1000 * 60 * 60 * 24);\n        return daysDifference < 2;\n    };\n    return (\n        <div className=\"notice-board-container\">\n            <div className=\"notice-board-header\">\n                <a href=\"/boards\" className=\"notice-board-link\">로스트아크 공지사항</a>\n            </div>\n            <div className=\"notice-board-list\">\n                <ul className=\"board-ul\">\n                    {noticesList.map((notices) => (\n                        <li key={notices.id} className=\"board-item\">\n                            <div className=\"board-link\">\n                                <div className=\"board-category\" aria-label=\"카테고리\">\n                                    <span className=\"category-span\">{notices.type}</span>\n                                </div>\n                                <div className=\"board-title\" aria-label=\"제목\">\n                                    <a href={`${notices.link}`} target=\"_blank\" className=\"title-span\">{notices.title}</a>\n                                </div>\n                                {isRecent(notices.date) && <div className=\"board-new\">N</div>}\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n\n    );\n};\n\nexport default HomeBoards;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/auth.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/notification/NotificationComponent.jsx",["448","449"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/KaKaoAd.js",["450","451"],[],"import React, { useEffect, useRef } from 'react';\n\nconst KaKaoAd = ({unit, width, height}) => {\n    const KakaoLoadOne=()=>{\n        let ins = document.createElement('ins');\n        let scr = document.createElement('script');\n    \n        ins.className = 'kakao_ad_area';\n        ins.style = \"display:none; width:100%;\";\n        scr.async = 'true';\n        scr.type = \"text/javascript\";\n        scr.src = \"//t1.daumcdn.net/kas/static/ba.min.js\";\n        ins.setAttribute('data-ad-width', width);\n        ins.setAttribute('data-ad-height', height);\n        ins.setAttribute('data-ad-unit', unit);\n    \n        document.querySelector('.adfitOne').appendChild(ins);\n        document.querySelector('.adfitOne').appendChild(scr);\n      }\n\n    useEffect(() => {\n        KakaoLoadOne();\n    }, []);\n\n    return (\n        <div className='adfitOne'></div>\n    );\n};\n\nexport default KaKaoAd;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/auth/Login.jsx",["452"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/auth/SignUp.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/auth/AuthTimer.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/auth/SignUpCharacters.jsx",[],[],{"ruleId":"453","severity":1,"message":"454","line":117,"column":8,"nodeType":"455","endLine":117,"endColumn":10,"suggestions":"456"},{"ruleId":"457","severity":1,"message":"458","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":25},{"ruleId":"457","severity":1,"message":"461","line":8,"column":8,"nodeType":"459","messageId":"460","endLine":8,"endColumn":14},{"ruleId":"457","severity":1,"message":"462","line":9,"column":8,"nodeType":"459","messageId":"460","endLine":9,"endColumn":19},{"ruleId":"457","severity":1,"message":"463","line":10,"column":8,"nodeType":"459","messageId":"460","endLine":10,"endColumn":14},{"ruleId":"457","severity":1,"message":"464","line":11,"column":8,"nodeType":"459","messageId":"460","endLine":11,"endColumn":16},{"ruleId":"457","severity":1,"message":"465","line":2,"column":10,"nodeType":"459","messageId":"460","endLine":2,"endColumn":19},{"ruleId":"457","severity":1,"message":"466","line":3,"column":10,"nodeType":"459","messageId":"460","endLine":3,"endColumn":14},{"ruleId":"467","severity":1,"message":"468","line":46,"column":30,"nodeType":"469","messageId":"470","endLine":46,"endColumn":32},{"ruleId":"471","severity":1,"message":"472","line":50,"column":17,"nodeType":"473","messageId":"474","endLine":50,"endColumn":75,"fix":"475"},{"ruleId":"457","severity":1,"message":"476","line":3,"column":8,"nodeType":"459","messageId":"460","endLine":3,"endColumn":19},{"ruleId":"457","severity":1,"message":"477","line":4,"column":8,"nodeType":"459","messageId":"460","endLine":4,"endColumn":18},{"ruleId":"453","severity":1,"message":"478","line":33,"column":8,"nodeType":"455","endLine":33,"endColumn":21,"suggestions":"479"},{"ruleId":"480","severity":1,"message":"481","line":42,"column":11,"nodeType":"473","endLine":42,"endColumn":39},{"ruleId":"453","severity":1,"message":"482","line":76,"column":8,"nodeType":"455","endLine":76,"endColumn":25,"suggestions":"483"},{"ruleId":"484","severity":1,"message":"485","line":14,"column":21,"nodeType":"473","endLine":19,"endColumn":22},{"ruleId":"484","severity":1,"message":"485","line":28,"column":25,"nodeType":"473","endLine":33,"endColumn":26},{"ruleId":"484","severity":1,"message":"485","line":45,"column":25,"nodeType":"473","endLine":50,"endColumn":26},{"ruleId":"484","severity":1,"message":"485","line":63,"column":13,"nodeType":"473","endLine":63,"endColumn":90},{"ruleId":"484","severity":1,"message":"485","line":66,"column":13,"nodeType":"473","endLine":66,"endColumn":103},{"ruleId":"484","severity":1,"message":"485","line":70,"column":13,"nodeType":"473","endLine":70,"endColumn":103},{"ruleId":"484","severity":1,"message":"485","line":73,"column":13,"nodeType":"473","endLine":73,"endColumn":98},{"ruleId":"457","severity":1,"message":"486","line":5,"column":8,"nodeType":"459","messageId":"460","endLine":5,"endColumn":21},{"ruleId":"457","severity":1,"message":"487","line":6,"column":8,"nodeType":"459","messageId":"460","endLine":6,"endColumn":25},{"ruleId":"457","severity":1,"message":"488","line":7,"column":8,"nodeType":"459","messageId":"460","endLine":7,"endColumn":16},{"ruleId":"457","severity":1,"message":"489","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":17},{"ruleId":"457","severity":1,"message":"490","line":4,"column":9,"nodeType":"459","messageId":"460","endLine":4,"endColumn":20},{"ruleId":"453","severity":1,"message":"491","line":25,"column":8,"nodeType":"455","endLine":25,"endColumn":10,"suggestions":"492"},{"ruleId":"453","severity":1,"message":"493","line":16,"column":8,"nodeType":"455","endLine":16,"endColumn":10,"suggestions":"494"},{"ruleId":"457","severity":1,"message":"495","line":20,"column":19,"nodeType":"459","messageId":"460","endLine":20,"endColumn":27},{"ruleId":"457","severity":1,"message":"496","line":3,"column":10,"nodeType":"459","messageId":"460","endLine":3,"endColumn":14},{"ruleId":"457","severity":1,"message":"496","line":2,"column":10,"nodeType":"459","messageId":"460","endLine":2,"endColumn":14},{"ruleId":"457","severity":1,"message":"496","line":3,"column":9,"nodeType":"459","messageId":"460","endLine":3,"endColumn":13},{"ruleId":"457","severity":1,"message":"458","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":25},{"ruleId":"457","severity":1,"message":"495","line":43,"column":23,"nodeType":"459","messageId":"460","endLine":43,"endColumn":31},{"ruleId":"457","severity":1,"message":"495","line":55,"column":27,"nodeType":"459","messageId":"460","endLine":55,"endColumn":35},{"ruleId":"457","severity":1,"message":"497","line":1,"column":16,"nodeType":"459","messageId":"460","endLine":1,"endColumn":25},{"ruleId":"457","severity":1,"message":"458","line":1,"column":27,"nodeType":"459","messageId":"460","endLine":1,"endColumn":35},{"ruleId":"457","severity":1,"message":"498","line":10,"column":12,"nodeType":"459","messageId":"460","endLine":10,"endColumn":22},{"ruleId":"457","severity":1,"message":"499","line":11,"column":25,"nodeType":"459","messageId":"460","endLine":11,"endColumn":39},{"ruleId":"453","severity":1,"message":"500","line":29,"column":8,"nodeType":"455","endLine":29,"endColumn":21,"suggestions":"501"},{"ruleId":"471","severity":1,"message":"472","line":11,"column":60,"nodeType":"473","messageId":"474","endLine":11,"endColumn":120,"fix":"502"},{"ruleId":"457","severity":1,"message":"498","line":10,"column":12,"nodeType":"459","messageId":"460","endLine":10,"endColumn":22},{"ruleId":"457","severity":1,"message":"499","line":11,"column":25,"nodeType":"459","messageId":"460","endLine":11,"endColumn":39},{"ruleId":"453","severity":1,"message":"503","line":29,"column":8,"nodeType":"455","endLine":29,"endColumn":21,"suggestions":"504"},{"ruleId":"471","severity":1,"message":"472","line":27,"column":37,"nodeType":"473","messageId":"474","endLine":27,"endColumn":104,"fix":"505"},{"ruleId":"457","severity":1,"message":"497","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":26},{"ruleId":"457","severity":1,"message":"506","line":8,"column":27,"nodeType":"459","messageId":"460","endLine":8,"endColumn":43},{"ruleId":"457","severity":1,"message":"507","line":1,"column":28,"nodeType":"459","messageId":"460","endLine":1,"endColumn":34},{"ruleId":"453","severity":1,"message":"508","line":23,"column":8,"nodeType":"455","endLine":23,"endColumn":10,"suggestions":"509"},{"ruleId":"484","severity":1,"message":"510","line":109,"column":25,"nodeType":"473","endLine":109,"endColumn":100},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setIsLoading'. Either include it or remove the dependency array. If 'setIsLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["511"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'useParams' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"512","text":"513"},"'CommentList' is defined but never used.","'PageNation' is defined but never used.","React Hook useEffect has a missing dependency: 'getComment'. Either include it or remove the dependency array.",["514"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'getCharacters'. Either include it or remove the dependency array.",["515"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'WeekEponaWrap' is defined but never used.","'SilmaelChangeWrap' is defined but never used.","'CubeWrap' is defined but never used.","'SearchBox' is defined but never used.","'listDefault' is defined but never used.","React Hook useEffect has a missing dependency: 'getBoard'. Either include it or remove the dependency array.",["516"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["517"],"'response' is assigned a value but never used.","'call' is defined but never used.","'useEffect' is defined but never used.","'totalPages' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getBoardList'. Either include it or remove the dependency array.",["518"],{"range":"519","text":"513"},"React Hook useEffect has a missing dependency: 'getNoticesList'. Either include it or remove the dependency array.",["520"],{"range":"521","text":"513"},"'setNotifications' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'KakaoLoadOne'. Either include it or remove the dependency array.",["522"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"523","fix":"524"},[1529,1529]," rel=\"noreferrer\"",{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"533","fix":"534"},[431,431],{"desc":"535","fix":"536"},[1268,1268],{"desc":"537","fix":"538"},"Update the dependencies array to be: [setIsLoading]",{"range":"539","text":"540"},"Update the dependencies array to be: [currentPage, getComment]",{"range":"541","text":"542"},"Update the dependencies array to be: [getCharacters, isCharacterList]",{"range":"543","text":"544"},"Update the dependencies array to be: [getBoard]",{"range":"545","text":"546"},"Update the dependencies array to be: [navigate]",{"range":"547","text":"548"},"Update the dependencies array to be: [currentPage, getBoardList]",{"range":"549","text":"550"},"Update the dependencies array to be: [currentPage, getNoticesList]",{"range":"551","text":"552"},"Update the dependencies array to be: [KakaoLoadOne]",{"range":"553","text":"554"},[3930,3932],"[setIsLoading]",[1154,1167],"[currentPage, getComment]",[2527,2544],"[getCharacters, isCharacterList]",[610,612],"[getBoard]",[513,515],"[navigate]",[932,945],"[currentPage, getBoardList]",[938,951],"[currentPage, getNoticesList]",[787,789],"[KakaoLoadOne]"]