[{"/Users/minhyeok/Desktop/LostarkTodo/Front/src/index.js":"1","/Users/minhyeok/Desktop/LostarkTodo/Front/src/reportWebVitals.js":"2","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/SignUp.jsx":"3","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Login.jsx":"4","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Info.jsx":"5","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/LinearIndeterminate.jsx":"6","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Navbar.jsx":"7","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Notification.jsx":"8","/Users/minhyeok/Desktop/LostarkTodo/Front/src/service/api-service.jsx":"9","/Users/minhyeok/Desktop/LostarkTodo/Front/src/config/api-config.jsx":"10","/Users/minhyeok/Desktop/LostarkTodo/Front/src/App.jsx":"11","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/SocialLogin.jsx":"12","/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/Comments.js":"13","/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/CommentForm.js":"14","/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/Commnet.js":"15","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Setting.jsx":"16","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/BasicSpeedDial.jsx":"17","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/member/ApiKeyUpdateForm.jsx":"18","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/CharacterSortForm.jsx":"19","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/WeekEponaWrap.jsx":"20","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/SilmaelChangeWrap.jsx":"21","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/CubeWrap.jsx":"22","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/WeekTodoWrap.jsx":"23","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/TodoWrap.jsx":"24","/Users/minhyeok/Desktop/LostarkTodo/Front/src/icons/DiscordIcon.jsx":"25","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekTodoWrap.jsx":"26","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendsWrap.jsx":"27","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendCubeWrap.jsx":"28","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekEponaWrap.jsx":"29","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendSilmaelChangeWrap.jsx":"30","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendTodoWrap.jsx":"31","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/AdsCard.js":"32","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendBasicSpeedDial.jsx":"33","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardListContainer.jsx":"34","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardReadContainer.jsx":"35","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardUpdateContainer.jsx":"36","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardInsertContainer.jsx":"37","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/boards.js":"38","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardList.jsx":"39","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/axiosInstance.js":"40","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardInsertForm.jsx":"41","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/Board.jsx":"42","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/search/SearchBox.jsx":"43"},{"size":242,"mtime":1694332041421,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1694195401976,"results":"46","hashOfConfig":"45"},{"size":2657,"mtime":1698719103550,"results":"47","hashOfConfig":"45"},{"size":1327,"mtime":1697176849752,"results":"48","hashOfConfig":"45"},{"size":15162,"mtime":1701424269276,"results":"49","hashOfConfig":"45"},{"size":337,"mtime":1698152681908,"results":"50","hashOfConfig":"45"},{"size":5561,"mtime":1701864858434,"results":"51","hashOfConfig":"45"},{"size":867,"mtime":1694079266240,"results":"52","hashOfConfig":"45"},{"size":1806,"mtime":1698571711049,"results":"53","hashOfConfig":"45"},{"size":136,"mtime":1701866678582,"results":"54","hashOfConfig":"45"},{"size":2003,"mtime":1701864509063,"results":"55","hashOfConfig":"45"},{"size":869,"mtime":1694353634665,"results":"56","hashOfConfig":"45"},{"size":5882,"mtime":1701866170609,"results":"57","hashOfConfig":"45"},{"size":972,"mtime":1695565549405,"results":"58","hashOfConfig":"45"},{"size":3559,"mtime":1697623899468,"results":"59","hashOfConfig":"45"},{"size":8098,"mtime":1698715394197,"results":"60","hashOfConfig":"45"},{"size":2622,"mtime":1701420281204,"results":"61","hashOfConfig":"45"},{"size":2325,"mtime":1696970973228,"results":"62","hashOfConfig":"45"},{"size":5115,"mtime":1701423064316,"results":"63","hashOfConfig":"45"},{"size":3855,"mtime":1698149924305,"results":"64","hashOfConfig":"45"},{"size":2864,"mtime":1698152968566,"results":"65","hashOfConfig":"45"},{"size":12432,"mtime":1698715394199,"results":"66","hashOfConfig":"45"},{"size":21051,"mtime":1700812296799,"results":"67","hashOfConfig":"45"},{"size":40242,"mtime":1701422406688,"results":"68","hashOfConfig":"45"},{"size":1415,"mtime":1698326557861,"results":"69","hashOfConfig":"45"},{"size":9125,"mtime":1700264844026,"results":"70","hashOfConfig":"45"},{"size":16741,"mtime":1701423439517,"results":"71","hashOfConfig":"45"},{"size":12750,"mtime":1700264116913,"results":"72","hashOfConfig":"45"},{"size":4172,"mtime":1700264520139,"results":"73","hashOfConfig":"45"},{"size":3029,"mtime":1700264767113,"results":"74","hashOfConfig":"45"},{"size":26179,"mtime":1701423061482,"results":"75","hashOfConfig":"45"},{"size":929,"mtime":1701864320122,"results":"76","hashOfConfig":"45"},{"size":2107,"mtime":1701423643730,"results":"77","hashOfConfig":"45"},{"size":5074,"mtime":1701866132069,"results":"78","hashOfConfig":"45"},{"size":798,"mtime":1701845935223,"results":"79","hashOfConfig":"45"},{"size":420,"mtime":1701663778727,"results":"80","hashOfConfig":"45"},{"size":1041,"mtime":1701669878703,"results":"81","hashOfConfig":"45"},{"size":524,"mtime":1701863297010,"results":"82","hashOfConfig":"45"},{"size":1681,"mtime":1701865836631,"results":"83","hashOfConfig":"45"},{"size":929,"mtime":1701866989547,"results":"84","hashOfConfig":"45"},{"size":1286,"mtime":1701669169998,"results":"85","hashOfConfig":"45"},{"size":726,"mtime":1701852488917,"results":"86","hashOfConfig":"45"},{"size":1703,"mtime":1701849255061,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"sou7p6",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"91"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"91"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"91"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"91"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"91"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"91"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/Users/minhyeok/Desktop/LostarkTodo/Front/src/index.js",[],[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/reportWebVitals.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/SignUp.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Login.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Info.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/LinearIndeterminate.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Navbar.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Notification.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/service/api-service.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/config/api-config.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/App.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/SocialLogin.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/Comments.js",["224","225"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/CommentForm.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/Commnet.js",["226"],[],"import CommentForm from \"./CommentForm\";\n\nconst Comment = ({\n  comment,\n  replies,\n  setActiveComment,\n  activeComment,\n  updateComment,\n  deleteComment,\n  addComment,\n  parentId = null,\n  currentUser\n}) => {\n  const isEditing =\n    activeComment &&\n    activeComment.id === comment.id &&\n    activeComment.type === \"editing\";\n  const isReplying =\n    activeComment &&\n    activeComment.id === comment.id &&\n    activeComment.type === \"replying\";\n  const canDelete =\n    (currentUser.id === comment.memberId && replies.length === 0);\n  const canReply = (currentUser.role === \"ADMIN\" || \"PUBLISHER\") || (currentUser.id === comment.memberId);\n  const canEdit = currentUser.id === comment.memberId;\n  const replyId = parentId ? parentId : comment.id;\n  const lastModifiedDate = new Date(comment.lastModifiedDate).toLocaleString();\n  var username = \"\";\n  if (comment.role === \"ADMIN\") {\n    username = \"관리자\";\n  } else if (comment.role === \"PUBLISHER\") {\n    username = \"UI담당자\";\n  } else {\n    username = comment.username.substring(0, 5) + '*'.repeat(comment.username.length - 5);\n  }\n\n  return (\n    <div key={comment.id} className=\"comment\">\n      <div className=\"comment-image-container\">\n        <img src=\"/user-icon.png\" />\n      </div>\n      <div className=\"comment-right-part\">\n        <div className=\"comment-content\">\n          <div>\n            <span className=\"comment-author\"\n              style={{ color: comment.role === \"ADMIN\" ? \"blue\" : \"\" }}\n            >{username}</span>({lastModifiedDate})\n          </div>\n        </div>\n        {!isEditing && <div className=\"comment-text\">{comment.body}</div>}\n        {isEditing && (\n          <CommentForm\n            submitLabel=\"Update\"\n            hasCancelButton\n            initialText={comment.body}\n            handleSubmit={(text) => updateComment(text, comment.id)}\n            handleCancel={() => {\n              setActiveComment(null);\n            }}\n          />\n        )}\n        <div className=\"comment-actions\">\n          {canReply && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"replying\" })\n              }\n            >\n              Reply\n            </div>\n          )}\n          {canEdit && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"editing\" })\n              }\n            >\n              Edit\n            </div>\n          )}\n          {canDelete && (\n            <div\n              className=\"comment-action\"\n              onClick={() => deleteComment(comment.id)}\n            >\n              Delete\n            </div>\n          )}\n        </div>\n        {isReplying && (\n          <CommentForm\n            submitLabel=\"Reply\"\n            handleSubmit={(text) => addComment(text, replyId)}\n          />\n        )}\n        {replies.length > 0 && (\n          <div className=\"replies\">\n            {replies.map((reply) => (\n              <Comment\n                comment={reply}\n                key={reply.id}\n                setActiveComment={setActiveComment}\n                activeComment={activeComment}\n                updateComment={updateComment}\n                deleteComment={deleteComment}\n                addComment={addComment}\n                parentId={comment.id}\n                replies={[]}\n                currentUser={currentUser}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Setting.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/BasicSpeedDial.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/member/ApiKeyUpdateForm.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/CharacterSortForm.jsx",["227"],[],"import React, { useState } from \"react\";\nimport { call } from \"../../service/api-service\";\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Typography } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport {\n    GridContextProvider,\n    GridDropZone,\n    GridItem,\n    swap,\n} from \"react-grid-dnd\";\n\nconst CharacterSortForm = (props) => {\n    //1.순서 변경 캐릭터 리스트 저장\n    const [itemsSwapState, setItemsSwapState] = React.useState(false);\n    function onChange(sourceId, sourceIndex, targetIndex, targetId) {\n        setItemsSwapState(true);\n        const nextState = swap(props.characters, sourceIndex, targetIndex);\n        for (let i = 0; i < nextState.length; i++) {\n            nextState[i].sortNumber = i;\n        }\n        props.setCharacters(nextState);\n    }\n\n    //2.순서 변경 DB저장\n    const saveSort = () => {\n        if(props.friendSetting === null) {\n            props.setShowLinearProgress(true);\n            call(\"/member/characterList/sorting\", \"PATCH\", props.characters)\n                .then((response) => {\n                    props.setShowLinearProgress(false);\n                    props.showMessage(\"순서 업데이트가 완료되었습니다.\");\n                    props.setShowCharacterSortForm(false);\n                });\n            setItemsSwapState(false);\n        } else {\n            if(props.friendSetting.setting) {\n                props.setShowLinearProgress(true);\n                call(\"/v2/friends/characterList/sorting/\" +props.friendUsername, \"PATCH\", props.characters)\n                    .then((response) => {\n                        props.setShowLinearProgress(false);\n                        props.showMessage(\"순서 업데이트가 완료되었습니다.\");\n                        props.setShowCharacterSortForm(false);\n                    });\n                setItemsSwapState(false);\n            } else {\n                props.showMessage(\"권한이 없습니다.\");\n            }\n\n        }\n    };\n\n    const [itemsPerRow, setItemsPerRow] = useState(calculateItemsPerRow());\n    function calculateItemsPerRow() {\n        var screenWidth = window.innerWidth;\n        if (screenWidth >= 1300) {\n            screenWidth = 1300;\n        }\n        const width = 250;\n        const row = 2;\n        if (screenWidth > width * row) {\n            return Math.ceil(screenWidth / width);\n        } else {\n            return row;\n        }\n    }\n    \n    return (\n        <Accordion style={{ backgroundColor: \"rgba(255, 255, 255, 50%)\", width: \"100%\", border: \"1px solid white\" }} className=\"sort-wrap\">\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                style={{ borderRadius: \"5px\" }}\n            >\n                <Typography fontWeight={\"bold\"} display={\"flex\"}>캐릭터 순서 변경\n                    <SaveIcon\n                        onClick={() => saveSort()}\n                        sx={{ display: itemsSwapState ? \"flex\" : \"none\", marginLeft: \"5px\", color: \"blueviolet\", cursor: \"pointer\" }}\n                    >\n                    </SaveIcon>\n                </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <GridContextProvider onChange={onChange}>\n                    <GridDropZone\n                        id=\"characters\"\n                        boxesPerRow={itemsPerRow}\n                        rowHeight={80}\n                        style={{ height: 80 * Math.ceil(props.characters.length / itemsPerRow) }}\n                    >\n                        {props.characters.map((character) => (\n                            <GridItem key={character.sortNumber} style={{ width: `${100 / itemsPerRow}%` }}>\n                                <div style={{ marginRight: 10 }}>\n                                    <div className=\"character-info-mini\"\n                                        style={{\n                                            backgroundImage: character.characterImage !== null ? `url(${character.characterImage})` : \"\",\n                                            backgroundPosition: character.characterClassName === \"도화가\" || character.characterClassName === \"기상술사\" ? \"left 25px top -70px\" : \"left 25px top -35px\",\n                                            backgroundColor: \"gray\", \n                                        }}>\n                                        <p>{character.characterName}</p>\n                                        <p>Lv. {character.itemLevel}</p>\n                                    </div>\n                                </div>\n                            </GridItem>\n                        ))}\n                    </GridDropZone>\n                    <span className=\"acc-txt\">드래그 시 캐릭터 순서가 변경됩니다</span>\n                </GridContextProvider>\n            </AccordionDetails>\n        </Accordion>\n    );\n};\n\nexport default CharacterSortForm;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/WeekEponaWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/SilmaelChangeWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/CubeWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/WeekTodoWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/TodoWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/icons/DiscordIcon.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekTodoWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendsWrap.jsx",["228","229","230","231","232"],[],"import React, { useState, useEffect } from \"react\";\nimport { call } from \"../../service/api-service\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Grid } from \"@mui/material\";\nimport Notification from '../../fragments/Notification';\nimport LinearIndeterminate from '../../fragments/LinearIndeterminate';\nimport FriendWeekTodoWrap from \"./FriendWeekTodoWrap\";\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport Modal from \"@mui/material/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport FriendTodoWrap from \"./FriendTodoWrap\";\nimport FriendBasicSpeedDial from \"./FriendBasicSpeedDial\";\n\n\n//------------------------- 탭관련 -------------------------\nfunction CustomTabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <div>{children}</div>\n            )}\n        </div>\n    );\n}\nCustomTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n//-----------------------------------------------------\n\nexport default function FriendsWrap() {\n    const [tabValue, setTabValue] = useState(0);\n    const [friends, setFriends] = useState([]);\n    const [friendSetting, setFriendSetting] = useState([]);\n    const [characters, setCharacters] = useState([]);\n    const [state, setState] = useState(null);\n    const [friendUsername, setFriendUsername] = useState(null);\n    const [showCharacterSortForm, setShowCharacterSortForm] = useState(false);\n\n    const handleChange = (event, friend) => {\n        const index = friends.indexOf(friend);\n\n        setTabValue(index);\n        setState(friend.areWeFriend);\n        setFriendUsername(friend.username);\n        setCharacters(friend.characterList);\n        setFriendSetting(friend.fromFriendSettings);\n    };\n\n    //Notification 관련\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n\n    const handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpenSnackbar(false);\n    };\n\n    const showMessage = (message) => {\n        setSnackbarMessage(message);\n        setOpenSnackbar(true);\n    };\n\n    //------------------------- 페이지 로드시 호출 -------------------------\n    useEffect(() => {\n        call(\"/v2/friends\", \"GET\", null)\n            .then((response) => {\n                if (response !== null) {\n                    setFriends(response);\n                    setTabValue(0);\n                    setState(response[0].areWeFriend);\n                    setFriendUsername(response[0].username);\n                    setCharacters(response[0].characterList);\n                    setFriendSetting(response[0].fromFriendSettings);\n                }\n            })\n            .catch((error) => { showMessage(error.errorMessage) });\n    }, []);\n\n    // 캐릭터 닉네임 검색\n    const findCharacter = () => {\n        const characterName = document.getElementById('find-character').value;\n        if (characterName === '') {\n            showMessage(\"캐릭터명을 입력하여주십시오.\");\n        } else {\n            call(\"/v2/friends/character/\" + characterName, \"GET\", null)\n                .then((response) => {\n                    openFindCharacterFriend(response);\n                })\n                .catch((error) => {\n                    showMessage(error.errorMessage);\n                });\n        }\n    }\n\n    /**\n     * 각종 정보창 모달 관련\n     */\n    // 모달 열기/닫기 상태 관리\n    const [openModal, setOpenModal] = useState(false);\n    const [modalContent, setModalContent] = useState(\"\");\n    const [modalTitle, setModalTitle] = useState(\"\");\n    // 모달 닫기 함수\n    const closeContentModal = () => {\n        setOpenModal(false);\n        setModalTitle(\"\");\n        setModalContent(\"\");\n    };\n\n    // 캐릭터 검색 결과 모달\n    const openFindCharacterFriend = (findCharacterFriend) => {\n        setModalTitle(\"검색 결과\");\n        var content = findCharacterFriend.map((character) => {\n            return (\n                <div key={character.id}>\n                    <p>{character.username.substring(0, 5) + '*'.repeat(character.username.length - 5)}\n                        {character.areWeFriend === \"깐부 요청\" &&\n                            <Button variant=\"outlined\" onClick={() => requestFriend(character.areWeFriend, character.username)}\n                                style={{ marginLeft: 10 }}>\n                                {character.areWeFriend}\n                            </Button>}\n                        {character.areWeFriend === \"깐부 요청 진행중\" &&\n                            <Button variant=\"outlined\" color=\"secondary\" onClick={() => requestFriend(character.areWeFriend, character.username)}\n                                style={{ marginLeft: 10 }}>\n                                {character.areWeFriend}\n                            </Button>}\n                        {character.areWeFriend === \"깐부 요청 받음\" &&\n                            <Button variant=\"outlined\" color=\"success\" onClick={() => requestFriend(character.areWeFriend, character.username)}\n                                style={{ marginLeft: 10 }}>\n                                {character.areWeFriend}\n                            </Button>}\n                        {character.areWeFriend === \"깐부\" &&\n                            <Button variant=\"outlined\" color=\"inherit\" style={{ marginLeft: 10, cursor: \"default\" }}>\n                                {character.areWeFriend}\n                            </Button>\n                        }\n                    </p>\n                </div>\n            );\n        });\n        var modalContent = (\n            <div>\n                {content}\n            </div>\n        );\n        setModalContent(modalContent);\n        setOpenModal(true);\n    };\n\n    // 검색 후 요청 메서드\n    const requestFriend = (category, fromMember) => {\n        if (category === \"깐부 요청\") {\n            call(\"/v2/friends/\" + fromMember, \"POST\", null)\n                .then((response) => {\n                    setFriends(response);\n                    closeContentModal();\n                    showMessage(\"요청이 정상적으로 처리되었습니다.\")\n                })\n                .catch((error) => {\n                    showMessage(error.errorMessage);\n                });\n        }\n        if (category === \"깐부 요청 진행중\" || category === \"깐부 요청 받음\" || category === \"요청 거부\") {\n            handleRequest(\"delete\", fromMember);\n        }\n\n    }\n    //------------------------- 설정 버튼 관련 -------------------------\n    const openSettingForm = (friendsId) => {\n        const friend = friends[friendsId];\n\n        setModalTitle(friend.nickName + \" 권한 설정\");\n        var modalContent = (\n            <div>\n                <div>\n                    <p>\n                        {friend.areWeFriend === \"깐부 요청 받음\" &&\n                            <div>\n                                <Button variant=\"outlined\" onClick={() => handleRequest(\"ok\", friend.friendUsername)}>수락</Button>\n                                <Button variant=\"outlined\" color=\"error\" onClick={() => handleRequest(\"reject\", friend.friendUsername)}>거절</Button>\n                            </div>\n                        }\n                        {friend.areWeFriend !== \"깐부 요청 받음\" &&\n                            <div>\n                                권한 : {friend.areWeFriend}\n                                <Button variant=\"outlined\" color=\"error\" style={{marginLeft:10}} onClick={() => handleRequest(\"delete\", friend.friendUsername)}>깐부 삭제</Button>\n                            </div>\n                        }\n                    </p>\n                </div>\n                <div>\n                    <p>일일 숙제 출력 권한 : {selectSetting(friend.id, friend.toFriendSettings.showDayTodo, \"showDayTodo\")}</p>\n                </div>\n                <div>\n                    <p>일일 숙제 체크 권한 : {selectSetting(friend.id, friend.toFriendSettings.checkDayTodo, \"checkDayTodo\")}</p>\n                </div>\n                <div>\n                    <p>레이드 출력 권한 : {selectSetting(friend.id, friend.toFriendSettings.showRaid, \"showRaid\")}</p>\n                </div>\n                <div>\n                    <p>레이드 체크 권한 : {selectSetting(friend.id, friend.toFriendSettings.checkRaid, \"checkRaid\")}</p>\n                </div>\n                <div>\n                    <p>주간 숙제 출력 권한 : {selectSetting(friend.id, friend.toFriendSettings.showWeekTodo, \"showWeekTodo\")}</p>\n                </div>\n                <div>\n                    <p>주간 숙제 체크 권한 : {selectSetting(friend.id, friend.toFriendSettings.checkWeekTodo, \"checkWeekTodo\")}</p>\n                </div>\n                <div>\n                    <p>설정 변경 권한 : {selectSetting(friend.id, friend.toFriendSettings.setting, \"setting\")}</p>\n                </div>\n            </div>\n        );\n        setModalContent(modalContent);\n        setOpenModal(true);\n    };\n\n    const selectSetting = (friendId, setting, settingName) => (\n        <FormControl size=\"small\">\n            <Select\n                id={`${friendId}_${settingName}`}\n                onChange={(event) => updateSetting(event, friendId, settingName)}\n                defaultValue={setting ? \"true\" : \"false\"}\n                sx={{ bgcolor: setting ? '#FA5858' : \"#81BEF7\", color: \"var(--text-color)\", fontWeight: \"bold\", transition: \"color 0.5s\" }}\n            >\n                <MenuItem value={true} >true</MenuItem>\n                <MenuItem value={false}>false</MenuItem>\n            </Select>\n        </FormControl>\n    );\n\n    const updateSetting = (event, friendId, settingName) => {\n        setShowLinearProgress(true);\n        const updateContent = {\n            id: friendId,\n            name: settingName,\n            value: event.target.value\n        };\n        call(\"/v2/friends/settings\", \"PATCH\", updateContent)\n            .then((response) => {\n                setShowLinearProgress(false);\n                var point = document.getElementById(`${friendId}_${settingName}`);\n                point.style.backgroundColor = event.target.value ? '#FA5858' : \"#81BEF7\";\n            })\n            .catch((error) => {\n                alert(error.errorMessage);\n            });\n    };\n\n    const handleRequest = (category, fromMember) => {\n        const confirmMessage = category === \"delete\" ? \"해당 요청을 삭제 하시겠습니까?\" : null;\n\n        const userConfirmed = confirmMessage ? window.confirm(confirmMessage) : true;\n\n        if (userConfirmed) {\n            setShowLinearProgress(true);\n            call(`/v2/friends/${fromMember}/${category}`, \"PATCH\", null)\n                .then((response) => {\n                    setShowLinearProgress(false);\n                    window.location.replace(\"/friends\");\n                })\n                .catch((error) => {\n                    showMessage(error.errorMessage);\n                });\n        }\n    }\n\n\n\n    const [showLinearProgress, setShowLinearProgress] = useState(false);\n    return (\n        <>\n            {showLinearProgress && <LinearIndeterminate />}\n            <FriendBasicSpeedDial\n                setShowLinearProgress={setShowLinearProgress}\n                setCharacters={setCharacters}\n                showMessage={showMessage}\n                setShowCharacterSortForm={setShowCharacterSortForm}\n                friendSetting={friendSetting}\n                friendUsername={friendUsername}\n            />\n            <div className=\"wrap\">\n                <div>\n                    <TextField id=\"find-character\" label=\"캐릭터 닉네임 입력\" variant=\"outlined\" size=\"small\" />\n                    <Button variant=\"outlined\" onClick={() => findCharacter()}>검색</Button>\n                </div>\n                <div className=\"todo-wrap\" >\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider', width: \"100vw\", maxWidth: \"1280px\" }}>\n                        <Tabs value={tabValue} onChange={(event, friend) => handleChange(event, friend)} aria-label=\"basic tabs example\">\n                            {friends.map((friend, index) =>\n                                <Tab\n                                    label={friend.nickName}\n                                    {...a11yProps(index)}\n                                    key={friend.id}\n                                    onClick={(event) => handleChange(event, friend)}\n                                    style={{ color: \"var(--text-color)\" }}\n                                />\n                            )}\n                        </Tabs>\n                    </Box>\n                    <CustomTabPanel value={tabValue} index={tabValue}>\n                        {characters !== null && <div className=\"setting-wrap\">\n                            <button\n                                className=\"content-button\"\n                                style={{ cursor: \"pointer\", marginBottom: 0 }}\n                                onClick={() => openSettingForm(tabValue)}\n                            >\n                                깐부 설정\n                            </button>\n                            {state !== \"깐부\" && <p>{state}</p>}\n                        </div>}\n                        {state === \"깐부\" && <FriendTodoWrap\n                            characters={characters}\n                            setCharacters={setCharacters}\n                            friends={friends}\n                            setFriends={setFriends}\n                            tabValue={tabValue}\n                            friendSetting={friendSetting}\n                            showMessage={showMessage}\n                            setShowLinearProgress={setShowLinearProgress}\n                            setModalTitle={setModalTitle}\n                            setModalContent={setModalContent}\n                            setOpenModal={setOpenModal}\n                            showCharacterSortForm={showCharacterSortForm}\n                            friendUsername={friendUsername}\n                        />}\n                        {/* {state === \"요청 거부\" && <div style={{ color: 'red' }}>{areWeFriend}</div>} */}\n                    </CustomTabPanel>\n                </div>\n                <Modal\n                    open={openModal}\n                    onClose={closeContentModal}\n                    aria-labelledby=\"modal-title\"\n                    aria-describedby=\"modal-description\"\n                >\n                    <div className=\"miniModal\"\n                        style={{\n                            position: \"absolute\",\n                            top: \"50%\", left: \"50%\",\n                            transform: \"translate(-50%, -50%)\",\n                            backgroundColor: \"#ffffff\",\n                            padding: \"20px 30px 20px 20px\", width: \"auto\", overflowY: \"auto\",\n                            maxHeight: 450,\n                        }}>\n                        <Typography variant=\"h5\" id=\"modal-title\" style={{ color: \"white\", backgroundColor: \"black\", borderRadius: 7, textAlign: \"center\" }}>\n                            {modalTitle}\n                        </Typography>\n                        <pre style={{ whiteSpace: \"pre-wrap\", wordWrap: \"break-word\", lineHeight: 2, fontWeight: \"bold\" }}>\n                            {modalContent}\n                        </pre>\n                    </div>\n                </Modal>\n            </div >\n\n            < Notification\n                message={snackbarMessage}\n                open={openSnackbar}\n                handleClose={handleSnackbarClose}\n            />\n        </>\n    );\n}\n","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendCubeWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekEponaWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendSilmaelChangeWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendTodoWrap.jsx",["233","234","235","236","237"],[],"import React, { useState } from \"react\";\nimport { call } from \"../../service/api-service\";\nimport CharacterSortForm from \"../todo/CharacterSortForm\";\nimport { Grid } from \"@mui/material\";\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\nimport FriendWeekTodoWrap from \"./FriendWeekTodoWrap\";\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\n\nconst FriendTodoWrap = (props) => {\n    //------------------------- 일일 수익 & 주간 수익 관련 -------------------------\n    //1. 예상 일일 수익\n    const totalDayGold = props.characters.reduce((accumulator, character) => {\n        if (character.settings.showChaos) {\n            accumulator += character.chaosGold;\n        }\n        if (character.settings.showGuardian) {\n            accumulator += character.guardianGold;\n        }\n        return accumulator;\n    }, 0);\n\n    //2. 일일 수익\n    const getDayGold = props.characters.reduce((accumulator, character) => {\n        if (character.chaosCheck >= 1) {\n            for (var i = 0; i < character.chaosCheck; i++) {\n                accumulator += character.chaosGold / 2;\n            }\n        }\n        if (character.guardianCheck === 1) {\n            accumulator += character.guardianGold;\n        }\n        return accumulator;\n    }, 0);\n\n    //3. 예상 주간 수익\n    const totalWeekGold = props.characters.reduce((accumulator, character) => {\n        if (character.goldCharacter) {\n            character.todoList.forEach((todo) => {\n                accumulator += todo.gold;\n            });\n        }\n        return accumulator;\n    }, 0);\n\n    //4. 주간 수익\n    const getWeekGold = props.characters.reduce((accumulator, character) => {\n        if (character.goldCharacter) {\n            accumulator += character.weekGold;\n        }\n        return accumulator;\n    }, 0);\n    //-------------------------------------------------------------------------\n\n    //------------------------- 일일 숙제 체크 관련 -------------------------\n    const updateDayContent = async (characterId, category, authority) => {\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        props.setShowLinearProgress(true);\n        const updatedCharacters = props.characters.map((character) => {\n            if (character.id === characterId) {\n                var updatedCharacter = {\n                    ...character,\n                };\n                const updateContent = {\n                    characterId: character.id,\n                    characterName: character.characterName,\n                };\n                return call(\"/v2/friends/day-content/check/\" + category, \"PATCH\", updateContent)\n                    .then((response) => {\n                        props.setShowLinearProgress(false);\n                        updatedCharacter = response;\n                        return updatedCharacter;\n                    })\n                    .catch((error) => {\n                        props.setShowLinearProgress(false);\n                        props.showMessage(error.errorMessage);\n                        updatedCharacter[`${category}Check`] = 0;\n                        return updatedCharacter;\n                    });\n            }\n            return character;\n        });\n        const updatedCharactersResult = await Promise.all(updatedCharacters);\n        props.setCharacters(updatedCharactersResult);\n    };\n\n    const updateDayContentAll = async (e, characterId, category, authority) => {\n        e.preventDefault();\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        props.setShowLinearProgress(true);\n        const updatedCharacters = props.characters.map((character) => {\n            if (character.id === characterId) {\n                var updatedCharacter = {\n                    ...character,\n                };\n                const updateContent = {\n                    characterId: character.id,\n                    characterName: character.characterName,\n                };\n                return call(\"/v2/friends/day-content/check/\" + category + \"/all\", \"PATCH\", updateContent)\n                    .then((response) => {\n                        props.setShowLinearProgress(false);\n                        updatedCharacter = response;\n                        return updatedCharacter;\n                    })\n                    .catch((error) => {\n                        props.setShowLinearProgress(false);\n                        props.showMessage(error.errorMessage);\n                        updatedCharacter[`${category}Check`] = 0;\n                        return updatedCharacter;\n                    });\n            }\n            return character;\n        });\n        const updatedCharactersResult = await Promise.all(updatedCharacters);\n        props.setCharacters(updatedCharactersResult);\n    };\n\n    //캐릭터 휴식게이지 업데이트\n    const handleDayContentGuage = async (e, characterId, gaugeType, authority) => {\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        e.preventDefault();\n        const newGaugeValue = window.prompt(`휴식게이지 수정`);\n\n        if (newGaugeValue !== null) {\n            const parsedValue = parseInt(newGaugeValue);\n            if (!isNaN(parsedValue)) {\n                const updatedCharacters = props.characters.map((character) => {\n                    if (character.id === characterId) {\n                        const updatedCharacter = {\n                            ...character,\n                            [`${gaugeType}Gauge`]: parsedValue,\n                        };\n\n                        const updateContent = {\n                            characterId: updatedCharacter.id,\n                            characterName: updatedCharacter.characterName,\n                            chaosGauge: updatedCharacter.chaosGauge,\n                            guardianGauge: updatedCharacter.guardianGauge,\n                            eponaGauge: updatedCharacter.eponaGauge,\n                        };\n\n                        props.setShowLinearProgress(true);\n\n                        return call(\"/v2/friends/day-content/gauge\", \"PATCH\", updateContent)\n                            .then((response) => {\n                                props.setShowLinearProgress(false);\n                                updatedCharacter.chaosGold = response.chaosGold;\n                                updatedCharacter.guardianGold = response.guardianGold;\n                                return updatedCharacter;\n                            })\n                            .catch((error) => {\n                                props.setShowLinearProgress(false);\n                                props.showMessage(error.errorMessage);\n                                return character;\n                            });\n                    }\n                    return character;\n                });\n                const updatedCharactersWithGold = await Promise.all(updatedCharacters);\n                props.setCharacters(updatedCharactersWithGold);\n            }\n        }\n    };\n\n    //------------------------- 서버별 분리 관련 -------------------------\n    // const [anchorEl, setAnchorEl] = useState(null);\n    // const [selectedServer, setSelectedServer] = useState(null);\n    // const [servers, setServers] = useState([]); //서버 리스트\n\n    // const open = Boolean(anchorEl);\n    // const handleClick = (event) => {\n    //     setAnchorEl(event.currentTarget);\n    // };\n    // const handleClose = () => {\n    //     setAnchorEl(null);\n    // };\n    // const handleServerSelect = (serverName) => {\n    //     setSelectedServer(serverName);\n    //     handleClose();\n    //     call(\"/member/characterList/\" + serverName, \"GET\", null)\n    //         .then((characterResponse) => {\n    //             props.setCharacters(characterResponse);\n    //         })\n    // };\n    // const serverItems = Object.entries(servers).map(([serverName, count]) => (\n    //     <MenuItem key={serverName} value={serverName}\n    //         onClick={() => handleServerSelect(serverName)}>\n    //         {serverName}: {count}개\n    //     </MenuItem>\n    // ));\n\n    // 도전 어비스/가디언 체크(v2 업데이트 완료)\n    const updateChallenge = async (character, content, authority) => {\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        props.setShowLinearProgress(true);\n        const updateContent = {\n            characterId: character.id,\n            serverName: character.serverName,\n            content: content\n        };\n        try {\n            const response = await call(\"/v2/friends/challenge\", \"PATCH\", updateContent);\n            props.setCharacters(response);\n            props.setShowLinearProgress(false);\n        } catch (error) {\n            console.error(\"Error updating challenge:\", error);\n            props.setShowLinearProgress(false);\n        }\n    }\n\n    //-----------------------------------------------------------------------------\n    return (\n        <div>\n            <div className=\"wrap\" style={{ marginTop: 0 }}>\n                <div className=\"setting-wrap\">\n                    <div className=\"content-box\">\n                        <p>일일 수익</p>\n                        <span className=\"bar\">\n                            <i style={{ width: `${getDayGold / totalDayGold * 100}%` }}></i>\n                            <em style={{ textAlign: \"center\" }}>{(getDayGold / totalDayGold * 100).toFixed(1)} %</em>\n                        </span>\n                        <p>{getDayGold.toFixed(2)} / <span>{totalDayGold.toFixed(2)}</span>G</p>\n                    </div>\n                    <div className=\"content-box\">\n                        <p>주간 수익</p>\n                        <span className=\"bar\">\n                            <i style={{ width: `${getWeekGold / totalWeekGold * 100}%` }}></i>\n                            <em style={{ textAlign: \"center\" }}>{(getWeekGold / totalWeekGold * 100).toFixed(1)} %</em>\n                        </span>\n                        <p className={`${getWeekGold / totalWeekGold}` === 1 ? \"on\" : \"\"}>{getWeekGold.toLocaleString()} / <span>{totalWeekGold.toLocaleString()}</span>G</p>{/* pub width가 100% 시 on 클래스 추가해주세요!(골드색변함) */}\n                    </div>\n                </div>\n                {props.showCharacterSortForm && <CharacterSortForm\n                    characters={props.characters}\n                    setCharacters={props.setCharacters}\n                    setShowLinearProgress={props.setShowLinearProgress}\n                    showMessage={props.showMessage}\n                    setShowCharacterSortForm={props.setShowCharacterSortForm}\n                    friendSetting={props.friendSetting}\n                    friendUsername={props.friendUsername}\n                />}\n                <div className=\"setting-wrap\">\n                    {/* <div>\n                        <Button\n                            id=\"fade-button\"\n                            aria-controls={open ? 'fade-menu' : undefined}\n                            aria-haspopup=\"true\"\n                            aria-expanded={open ? 'true' : undefined}\n                            onClick={handleClick}\n                        >\n                            {selectedServer} {servers[selectedServer]}개\n                        </Button>\n                        <Menu\n                            id=\"fade-menu\"\n                            MenuListProps={{\n                                'aria-labelledby': 'fade-button',\n                            }}\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={handleClose}\n                            TransitionComponent={Fade}\n                        >\n                            {serverItems}\n                        </Menu>\n                    </div> */}\n                    <button\n                        className={`content-button ${props.characters.length > 0 && props.characters[0].challengeGuardian === true ? \"done\" : \"\"}`}\n                        onClick={() => updateChallenge(props.characters[0], \"Guardian\", props.friendSetting.checkWeekTodo)} style={{ cursor: \"pointer\" }}\n                    >\n                        도전 가디언 토벌\n                        <div className=\"content-button-text\" onClick={() => updateChallenge(props.characters[0], \"Guardian\", props.friendSetting.checkWeekTodo)}>\n                            {props.characters.length > 0 && (props.characters[0]?.challengeGuardian === true ? <DoneIcon /> : \"\")}\n                        </div>\n                    </button>\n                    <button\n                        className={`content-button ${props.characters.length > 0 && props.characters[0].challengeAbyss === true ? \"done\" : \"\"}`}\n                        onClick={() => updateChallenge(props.characters[0], \"Abyss\", props.friendSetting.checkWeekTodo)} style={{ cursor: \"pointer\" }}\n                    >\n                        도전 어비스 던전\n                        <div className=\"content-button-text\" onClick={() => updateChallenge(props.characters[0], \"Abyss\", props.friendSetting.checkWeekTodo)}>\n                            {props.characters.length > 0 && (props.characters[0]?.challengeAbyss === true ? <DoneIcon /> : \"\")}\n                        </div>\n                    </button>\n                </div>\n                <div className=\"todo-wrap\" >\n                    <Grid container spacing={1.5} overflow={\"hidden\"}>\n                        {props.characters.map((character) => (\n                            <Grid key={character.id} item>\n                                <div className=\"character-wrap\">\n                                    <div className=\"character-info\"\n                                        style={{\n                                            backgroundImage: character.characterImage !== null ? `url(${character.characterImage})` : \"\",\n                                            backgroundPosition: character.characterClassName === \"도화가\" || character.characterClassName === \"기상술사\" ? \"left 10px top -80px\" : \"left 10px top -30px\",\n                                            backgroundColor: \"gray\", // 배경색을 회색으로 설정\n                                        }}>\n                                        <div className={character.goldCharacter ? \"gold-border\" : \"\"}>\n                                            {character.goldCharacter ? \"골드 획득 지정\" : \"\"} {/* pub 문구변경 */}\n                                        </div>\n                                        <span>@{character.serverName}  {character.characterClassName}</span>\n                                        <h3 style={{ margin: 0 }}>{character.characterName}</h3>\n                                        <h2 style={{ margin: 0 }}>Lv. {character.itemLevel}</h2>\n                                    </div>\n                                    <p className=\"title\">일일 숙제</p>{/* pub 추가 */}\n                                    {props.friendSetting.showDayTodo && <div>\n                                        <div className=\"content-wrap\">\n                                            <div className=\"content\"\n                                                onClick={() => updateDayContent(character.id, \"epona\", props.friendSetting.checkDayTodo)}\n                                                onContextMenu={(e) => updateDayContentAll(e, character.id, \"epona\", props.friendSetting.checkDayTodo)}\n                                                style={{ cursor: \"pointer\" }}\n                                            >\n                                                <button\n                                                    className={`content-button ${character.eponaCheck === 3 ? \"done\" :\n                                                        character.eponaCheck === 1 ? \"ing\" :\n                                                            character.eponaCheck === 2 ? \"ing2\" : \"\"}`}\n                                                >\n                                                    {character.eponaCheck === 3 ? <DoneIcon /> : <CloseIcon />}\n                                                </button>\n                                                <div\n                                                    className={`${character.eponaCheck === 3 ? \"text-done\" : \"\"}`}>\n                                                    <span>에포나의뢰</span>\n                                                </div>\n                                            </div>\n                                            <div className=\"content gauge-box\" style={{ height: 24, padding: 0, position: \"relative\", cursor: \"pointer\" }}\n                                                onContextMenu={(e) => handleDayContentGuage(e, character.id, \"epona\", props.friendSetting.checkDayTodo)}\n                                                onClick={(e) => handleDayContentGuage(e, character.id, \"epona\", props.friendSetting.checkDayTodo)}>\n                                                {Array.from({ length: 5 }, (_, index) => (\n                                                    <div key={index} className=\"gauge-wrap\">\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 < character.eponaGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 + 1 < character.eponaGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                    </div>\n                                                ))}\n                                                <span className=\"gauge-text\">\n                                                    휴식게이지 {character.eponaGauge}\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div className=\"content-wrap\">\n                                            <div className=\"content\" onClick={() => updateDayContent(character.id, \"chaos\", props.friendSetting.checkDayTodo)}\n                                                onContextMenu={(e) => updateDayContentAll(e, character.id, \"chaos\", props.friendSetting.checkDayTodo)}\n                                                style={{ cursor: \"pointer\" }}>\n                                                <button\n                                                    className={`content-button ${character.chaosCheck === 0 ? \"\" :\n                                                        character.chaosCheck === 1 ? \"ing\" : \"done\"}`}\n                                                >\n                                                    {character.chaosCheck === 2 ? <DoneIcon /> : <CloseIcon />}\n                                                </button>\n                                                <div\n                                                    className={`${character.chaosCheck === 2 ? \"text-done\" : \"\"}`}\n                                                >\n                                                    <p>카오스던전</p>\n                                                    <p className=\"gold\">({character.chaosGold} gold)</p>\n                                                </div>\n                                            </div>\n                                            <div className=\"content gauge-box\" style={{ height: 24, padding: 0, position: \"relative\", cursor: \"pointer\" }}\n                                                onContextMenu={(e) => handleDayContentGuage(e, character.id, \"chaos\", props.friendSetting.checkDayTodo)}\n                                                onClick={(e) => handleDayContentGuage(e, character.id, \"chaos\", props.friendSetting.checkDayTodo)}>\n                                                {Array.from({ length: 5 }, (_, index) => (\n                                                    <div key={index} className=\"gauge-wrap\">\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 < character.chaosGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 + 1 < character.chaosGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                    </div>\n                                                ))}\n                                                <span className=\"gauge-text\">\n                                                    휴식게이지 {character.chaosGauge}\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div className=\"content-wrap\">\n                                            <div className=\"content\" onClick={() => updateDayContent(character.id, \"guardian\", props.friendSetting.checkDayTodo)}\n                                                onContextMenu={(e) => updateDayContentAll(e, character.id, \"guardian\", props.friendSetting.checkDayTodo)}\n                                                style={{ cursor: \"pointer\" }}>\n                                                <button\n                                                    className={`content-button ${character.guardianCheck === 1 ? \"done\" : \"\"}`}\n                                                >\n                                                    {character.guardianCheck === 1 ? <DoneIcon /> : <CloseIcon />}\n                                                </button>\n                                                <div\n                                                    className={`${character.guardianCheck === 1 ? \"text-done\" : \"\"}`}\n                                                >\n                                                    <p>가디언토벌</p>\n                                                    <p className=\"gold\">({character.guardianGold} gold)</p>\n                                                </div>\n                                            </div>\n                                            <div className=\"content gauge-box\" style={{ height: 24, padding: 0, position: \"relative\", cursor: \"pointer\" }}\n                                                onContextMenu={(e) => handleDayContentGuage(e, character.id, \"guardian\", props.friendSetting.checkDayTodo)}\n                                                onClick={(e) => handleDayContentGuage(e, character.id, \"guardian\", props.friendSetting.checkDayTodo)}>\n                                                {Array.from({ length: 5 }, (_, index) => (\n                                                    <div key={index} className=\"gauge-wrap\">\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 < character.guardianGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 + 1 < character.guardianGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                    </div>\n                                                ))}\n                                                <span className=\"gauge-text\">\n                                                    휴식게이지 {character.guardianGauge}\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>}\n                                </div>\n                                <FriendWeekTodoWrap\n                                    characters={props.characters}\n                                    setCharacters={props.setCharacters}\n                                    character={character}\n                                    setModalTitle={props.setModalTitle}\n                                    setModalContent={props.setModalContent}\n                                    setOpenModal={props.setOpenModal}\n                                    setShowLinearProgress={props.setShowLinearProgress}\n                                    showMessage={props.showMessage}\n                                    friendSetting={props.friendSetting}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            </div >\n        </div>\n    );\n};\n\nexport default FriendTodoWrap;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/AdsCard.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendBasicSpeedDial.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardListContainer.jsx",["238","239","240","241","242","243","244","245","246","247","248","249"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardReadContainer.jsx",["250"],[],"import React, {useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as boards from '../../apis/boards';\nimport Board from '../../components/boards/Board';\n\n// 게시글 조회\nconst BoardReadContainer = () => {\n    const { no } = useParams(); //url경로에 있는 param\n\n    // state 설정\n    const [board, setBoard] = useState([]);\n\n    // 게시글 목록 데이터\n    const getBoard = async () => {\n        try {\n            const data = (await boards.select(no)).data;\n            setBoard(data);\n        } catch(e) {\n            console.log(e);\n        }\n    }\n\n    useEffect(()=>{\n        getBoard();\n    }, []);\n\n    return (\n        <div>\n            <Board board={board} no={no}></Board>\n        </div>\n    );\n};\n\nexport default BoardReadContainer;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardUpdateContainer.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardInsertContainer.jsx",["251"],[],"import React, { useEffect } from 'react';\nimport * as boards from '../../apis/boards';\nimport BoardInsertForm from '../../components/boards/BoardInsertForm';\nimport { useNavigate } from 'react-router-dom';\n\n// 게시글 등록 \nconst BoardInsertContainer = () => {\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const accessToken = localStorage.getItem(\"ACCESS_TOKEN\");\n        if (accessToken === null || !accessToken) {\n            alert(\"로그인 후 이용해주세요!\");\n            navigate(\"/login\");\n        }\n    },[]);\n\n    const onInsert = async (title, content) => {\n        try {\n            const response = await boards.insert(title, content);\n            alert(\"등록 완료\");\n            console.log(response.data);\n\n            // -> 게시글 목록 이동\n            navigate('/boards');\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    return (\n        <div>\n            <BoardInsertForm onInsert={onInsert} />\n        </div>\n    );\n};\n\nexport default BoardInsertContainer;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/boards.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardList.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/axiosInstance.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardInsertForm.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/Board.jsx",["252","253"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/search/SearchBox.jsx",["254","255"],[],{"ruleId":"256","severity":1,"message":"257","line":6,"column":8,"nodeType":"258","messageId":"259","endLine":6,"endColumn":12},{"ruleId":"256","severity":1,"message":"260","line":7,"column":8,"nodeType":"258","messageId":"259","endLine":7,"endColumn":19},{"ruleId":"261","severity":1,"message":"262","line":40,"column":9,"nodeType":"263","endLine":40,"endColumn":37},{"ruleId":"256","severity":1,"message":"264","line":56,"column":25,"nodeType":"258","messageId":"259","endLine":56,"endColumn":39},{"ruleId":"256","severity":1,"message":"265","line":3,"column":8,"nodeType":"258","messageId":"259","endLine":3,"endColumn":18},{"ruleId":"256","severity":1,"message":"266","line":4,"column":8,"nodeType":"258","messageId":"259","endLine":4,"endColumn":16},{"ruleId":"256","severity":1,"message":"267","line":5,"column":8,"nodeType":"258","messageId":"259","endLine":5,"endColumn":17},{"ruleId":"256","severity":1,"message":"268","line":6,"column":10,"nodeType":"258","messageId":"259","endLine":6,"endColumn":14},{"ruleId":"256","severity":1,"message":"269","line":9,"column":8,"nodeType":"258","messageId":"259","endLine":9,"endColumn":26},{"ruleId":"256","severity":1,"message":"270","line":1,"column":17,"nodeType":"258","messageId":"259","endLine":1,"endColumn":25},{"ruleId":"256","severity":1,"message":"271","line":8,"column":8,"nodeType":"258","messageId":"259","endLine":8,"endColumn":14},{"ruleId":"256","severity":1,"message":"272","line":9,"column":8,"nodeType":"258","messageId":"259","endLine":9,"endColumn":19},{"ruleId":"256","severity":1,"message":"273","line":10,"column":8,"nodeType":"258","messageId":"259","endLine":10,"endColumn":14},{"ruleId":"256","severity":1,"message":"274","line":11,"column":8,"nodeType":"258","messageId":"259","endLine":11,"endColumn":16},{"ruleId":"256","severity":1,"message":"275","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":14},{"ruleId":"276","severity":1,"message":"277","line":41,"column":17,"nodeType":"263","endLine":46,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":43,"column":26,"nodeType":"280","messageId":"281","endLine":43,"endColumn":48},{"ruleId":"282","severity":1,"message":"283","line":62,"column":64,"nodeType":"263","messageId":"284","endLine":62,"endColumn":124,"fix":"285"},{"ruleId":"276","severity":1,"message":"277","line":96,"column":21,"nodeType":"263","endLine":96,"endColumn":117},{"ruleId":"278","severity":1,"message":"279","line":96,"column":29,"nodeType":"280","messageId":"281","endLine":96,"endColumn":51},{"ruleId":"276","severity":1,"message":"277","line":99,"column":21,"nodeType":"263","endLine":99,"endColumn":130},{"ruleId":"278","severity":1,"message":"279","line":99,"column":29,"nodeType":"280","messageId":"281","endLine":99,"endColumn":51},{"ruleId":"276","severity":1,"message":"277","line":103,"column":21,"nodeType":"263","endLine":103,"endColumn":130},{"ruleId":"278","severity":1,"message":"279","line":103,"column":29,"nodeType":"280","messageId":"281","endLine":103,"endColumn":51},{"ruleId":"276","severity":1,"message":"277","line":106,"column":21,"nodeType":"263","endLine":106,"endColumn":125},{"ruleId":"278","severity":1,"message":"279","line":106,"column":29,"nodeType":"280","messageId":"281","endLine":106,"endColumn":51},{"ruleId":"286","severity":1,"message":"287","line":25,"column":8,"nodeType":"288","endLine":25,"endColumn":10,"suggestions":"289"},{"ruleId":"286","severity":1,"message":"290","line":16,"column":7,"nodeType":"288","endLine":16,"endColumn":9,"suggestions":"291"},{"ruleId":"256","severity":1,"message":"292","line":2,"column":10,"nodeType":"258","messageId":"259","endLine":2,"endColumn":19},{"ruleId":"256","severity":1,"message":"275","line":3,"column":10,"nodeType":"258","messageId":"259","endLine":3,"endColumn":14},{"ruleId":"293","severity":1,"message":"294","line":46,"column":30,"nodeType":"295","messageId":"296","endLine":46,"endColumn":32},{"ruleId":"282","severity":1,"message":"283","line":50,"column":17,"nodeType":"263","messageId":"284","endLine":50,"endColumn":75,"fix":"297"},"no-unused-vars","'Info' is defined but never used.","Identifier","unusedVar","'DiscordIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setItemsPerRow' is assigned a value but never used.","'SearchIcon' is defined but never used.","'DoneIcon' is defined but never used.","'CloseIcon' is defined but never used.","'Grid' is defined but never used.","'FriendWeekTodoWrap' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"298","text":"299"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBoard'. Either include it or remove the dependency array.","ArrayExpression",["300"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["301"],"'useParams' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"302","text":"299"},[2100,2100]," rel=\"noreferrer\"",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},[1529,1529],"Update the dependencies array to be: [getBoard]",{"range":"307","text":"308"},"Update the dependencies array to be: [navigate]",{"range":"309","text":"310"},[615,617],"[getBoard]",[516,518],"[navigate]"]