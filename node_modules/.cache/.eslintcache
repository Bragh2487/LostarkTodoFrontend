[{"/Users/minhyeok/Desktop/LostarkTodo/Front/src/index.js":"1","/Users/minhyeok/Desktop/LostarkTodo/Front/src/reportWebVitals.js":"2","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/SignUp.jsx":"3","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Login.jsx":"4","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Info.jsx":"5","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/LinearIndeterminate.jsx":"6","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Navbar.jsx":"7","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Notification.jsx":"8","/Users/minhyeok/Desktop/LostarkTodo/Front/src/service/api-service.jsx":"9","/Users/minhyeok/Desktop/LostarkTodo/Front/src/config/api-config.jsx":"10","/Users/minhyeok/Desktop/LostarkTodo/Front/src/App.jsx":"11","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/SocialLogin.jsx":"12","/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/Comments.js":"13","/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/CommentForm.js":"14","/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/Commnet.js":"15","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Setting.jsx":"16","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/BasicSpeedDial.jsx":"17","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/member/ApiKeyUpdateForm.jsx":"18","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/CharacterSortForm.jsx":"19","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/WeekEponaWrap.jsx":"20","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/SilmaelChangeWrap.jsx":"21","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/CubeWrap.jsx":"22","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/WeekTodoWrap.jsx":"23","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/TodoWrap.jsx":"24","/Users/minhyeok/Desktop/LostarkTodo/Front/src/icons/DiscordIcon.jsx":"25","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekTodoWrap.jsx":"26","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendsWrap.jsx":"27","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendCubeWrap.jsx":"28","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekEponaWrap.jsx":"29","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendSilmaelChangeWrap.jsx":"30","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendTodoWrap.jsx":"31","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/AdsCard.js":"32","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendBasicSpeedDial.jsx":"33","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardListContainer.jsx":"34","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardReadContainer.jsx":"35","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardUpdateContainer.jsx":"36","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardInsertContainer.jsx":"37","/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/boards.js":"38","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardList.jsx":"39","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardInsertForm.jsx":"40","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/Board.jsx":"41","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/search/SearchBox.jsx":"42"},{"size":242,"mtime":1694332041421,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1694195401976,"results":"45","hashOfConfig":"44"},{"size":2657,"mtime":1698719103550,"results":"46","hashOfConfig":"44"},{"size":1327,"mtime":1697176849752,"results":"47","hashOfConfig":"44"},{"size":15162,"mtime":1701424269276,"results":"48","hashOfConfig":"44"},{"size":337,"mtime":1698152681908,"results":"49","hashOfConfig":"44"},{"size":5561,"mtime":1701864858434,"results":"50","hashOfConfig":"44"},{"size":867,"mtime":1694079266240,"results":"51","hashOfConfig":"44"},{"size":1806,"mtime":1698571711049,"results":"52","hashOfConfig":"44"},{"size":136,"mtime":1701922936714,"results":"53","hashOfConfig":"44"},{"size":2003,"mtime":1701864509063,"results":"54","hashOfConfig":"44"},{"size":869,"mtime":1694353634665,"results":"55","hashOfConfig":"44"},{"size":5882,"mtime":1701866170609,"results":"56","hashOfConfig":"44"},{"size":972,"mtime":1695565549405,"results":"57","hashOfConfig":"44"},{"size":3559,"mtime":1697623899468,"results":"58","hashOfConfig":"44"},{"size":8098,"mtime":1698715394197,"results":"59","hashOfConfig":"44"},{"size":2622,"mtime":1701420281204,"results":"60","hashOfConfig":"44"},{"size":2325,"mtime":1696970973228,"results":"61","hashOfConfig":"44"},{"size":5115,"mtime":1701423064316,"results":"62","hashOfConfig":"44"},{"size":3855,"mtime":1698149924305,"results":"63","hashOfConfig":"44"},{"size":2864,"mtime":1698152968566,"results":"64","hashOfConfig":"44"},{"size":12432,"mtime":1698715394199,"results":"65","hashOfConfig":"44"},{"size":21051,"mtime":1700812296799,"results":"66","hashOfConfig":"44"},{"size":40242,"mtime":1701422406688,"results":"67","hashOfConfig":"44"},{"size":1415,"mtime":1698326557861,"results":"68","hashOfConfig":"44"},{"size":9125,"mtime":1700264844026,"results":"69","hashOfConfig":"44"},{"size":16741,"mtime":1701423439517,"results":"70","hashOfConfig":"44"},{"size":12750,"mtime":1700264116913,"results":"71","hashOfConfig":"44"},{"size":4172,"mtime":1700264520139,"results":"72","hashOfConfig":"44"},{"size":3029,"mtime":1700264767113,"results":"73","hashOfConfig":"44"},{"size":26179,"mtime":1701423061482,"results":"74","hashOfConfig":"44"},{"size":929,"mtime":1701864320122,"results":"75","hashOfConfig":"44"},{"size":2107,"mtime":1701423643730,"results":"76","hashOfConfig":"44"},{"size":5318,"mtime":1701869780483,"results":"77","hashOfConfig":"44"},{"size":793,"mtime":1701869256181,"results":"78","hashOfConfig":"44"},{"size":420,"mtime":1701663778727,"results":"79","hashOfConfig":"44"},{"size":1001,"mtime":1701869491331,"results":"80","hashOfConfig":"44"},{"size":1089,"mtime":1701922732859,"results":"81","hashOfConfig":"44"},{"size":1721,"mtime":1701869706575,"results":"82","hashOfConfig":"44"},{"size":1286,"mtime":1701669169998,"results":"83","hashOfConfig":"44"},{"size":726,"mtime":1701852488917,"results":"84","hashOfConfig":"44"},{"size":1703,"mtime":1701849255061,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"sou7p6",{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"89"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"89"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"89"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"89"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"220","usedDeprecatedRules":"89"},"/Users/minhyeok/Desktop/LostarkTodo/Front/src/index.js",[],[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/reportWebVitals.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/SignUp.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Login.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Info.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/LinearIndeterminate.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Navbar.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/Notification.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/service/api-service.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/config/api-config.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/App.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/SocialLogin.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/Comments.js",["221","222"],[],"import { useState, useEffect } from \"react\";\nimport { call } from \"../service/api-service\";\nimport '../App.css';\nimport Comment from \"./Commnet\";\nimport CommentForm from \"./CommentForm\";\nimport Info from \"../components/Info\";\nimport DiscordIcon from \"../icons/DiscordIcon\";\n\nconst Comments = () => {\n    const [backendComments, setBackendComments] = useState([]);\n    const [currentUser, setCurrentUser] = useState([]);\n    const [activeComment, setActiveComment] = useState(null);\n    const rootComments = backendComments.filter(\n        (backendComment) => backendComment.parentId === 0\n    );\n    const getReplies = (commentId) =>\n        backendComments\n            .filter((backendComment) => backendComment.parentId === commentId)\n            .sort(\n                (a, b) =>\n                    new Date(a.lastModifiedDate).getTime() - new Date(b.lastModifiedDate).getTime()\n            );\n\n    useEffect(() => {\n        call(\"/member\", \"GET\", null)\n            .then((response) => {\n                setCurrentUser(response);\n            })\n            .catch((error) => { console.log(error.errorMessage) });\n        // 초기 캐릭터 정보 불러오기\n        call(\"/comments\", \"GET\", null)\n            .then((response) => {\n                setBackendComments(response);\n            })\n            .catch((error) => { console.log(error.errorMessage) });\n\n    }, []);\n\n    const addComment = (text, parentId = null) => {\n        const updateContent = {\n            body: text,\n            parentId: parentId\n        };\n        call(\"/comments\", \"POST\", updateContent)\n            .then((response) => {\n                setBackendComments(response);\n                setActiveComment(null);\n            })\n            .catch((error) => { console.log(error.errorMessage) });\n    };\n\n    const updateComment = (text, commentId) => {\n        const updateContent = {\n            body: text,\n            id: commentId\n        };\n        call(\"/comments\", \"PATCH\", updateContent)\n            .then((response) => {\n                setBackendComments(response);\n                setActiveComment(null);\n            })\n            .catch((error) => {\n                console.log(error.errorMessage)\n            });\n    };\n\n    const deleteComment = (commentId) => {\n        const updateContent = {\n            id: commentId,\n        };\n        if (window.confirm(\"삭제하시겠습니까?\")) {\n            call(\"/comments\", \"DELETE\", updateContent)\n                .then((response) => {\n                    setBackendComments(response);\n                })\n                .catch((error) => { console.log(error.errorMessage) });\n        }\n    };\n\n    return (\n        <div className=\"comments\">\n            {/* \n                p.big - 제일 큰 공지\n                p.date - 날짜\n                div.cont - 내용\n                p.update - 개발 예정\n                p.modify - 수정 예정\n            */}\n\n            <div className=\"noticeBox box02\">\n                <p className=\"update\">개발 예정</p>\n                <div className=\"cont\">\n                    <ul>\n                        <li>카게, 모험섬, 필보, 로웬 주간퀘 등 - 페이지를 따로 분리할 예정입니다.</li>\n                        <li>기록남기기 - 숙제로 얻은 수익을 기록하여 그래프 혹은 표로 표시</li>\n                        <li>데이터보기 - 일일숙제, 큐브로 얻는 재화량 통계와 현재 경매장 시세를 확인, 귀속 재료도 수익확인</li>\n                        <li>캐릭터 info - 로아와, 클로아, 일로아와 유사한 기능</li>\n                    </ul>\n                </div>\n            </div>\n\n            <div className=\"noticeBox box03\">\n                <p className=\"modify\">수정 중(현상 확인 중)</p>\n                <div className=\"cont\">\n                    <ul>\n                        <li>간혈적으로 체크된 상태로 보이는데 주간 수익에 포함이 되지 않아 퍼센트가 100%되지 않는 문제가 있습니다.</li>\n                    </ul>\n                </div>\n            </div>\n{/* \n            <div className=\"noticeBox box04\">\n                <p className=\"update\">수정 완료</p>\n                <div className=\"cont\">\n                    <div className=\"flex\">\n                        <p className=\"date\">2023.12.01</p>\n                        <p className=\"txt\">\n                            <ul>\n                                <li>새로운 주소로 접속이 가능합니다.<a href=\"https://loatodo.com\">https://loatodo.com</a></li>\n                                <li>깐부 수락/거절/삭제시 오류가 수정되었습니다.</li>\n                                <li>깐부 캐릭터 업데이트, 순서 변경 기능이 추가되었습니다.</li>\n                            </ul>\n                        </p>\n                    </div>\n                    <Info />\n                </div>\n            </div> */}\n\n            <div className=\"noticeBox box05\">\n                <CommentForm submitLabel=\"작성하기\" handleSubmit={addComment} />\n                <div className=\"comments-container\">\n                    {rootComments.map((rootComment) => (\n                        <Comment\n                            key={rootComment.id}\n                            comment={rootComment}\n                            replies={getReplies(rootComment.id)}\n                            activeComment={activeComment}\n                            setActiveComment={setActiveComment}\n                            addComment={addComment}\n                            deleteComment={deleteComment}\n                            updateComment={updateComment}\n                            currentUser={currentUser}\n                        />\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Comments;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/CommentForm.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/comments/Commnet.js",["223"],[],"import CommentForm from \"./CommentForm\";\n\nconst Comment = ({\n  comment,\n  replies,\n  setActiveComment,\n  activeComment,\n  updateComment,\n  deleteComment,\n  addComment,\n  parentId = null,\n  currentUser\n}) => {\n  const isEditing =\n    activeComment &&\n    activeComment.id === comment.id &&\n    activeComment.type === \"editing\";\n  const isReplying =\n    activeComment &&\n    activeComment.id === comment.id &&\n    activeComment.type === \"replying\";\n  const canDelete =\n    (currentUser.id === comment.memberId && replies.length === 0);\n  const canReply = (currentUser.role === \"ADMIN\" || \"PUBLISHER\") || (currentUser.id === comment.memberId);\n  const canEdit = currentUser.id === comment.memberId;\n  const replyId = parentId ? parentId : comment.id;\n  const lastModifiedDate = new Date(comment.lastModifiedDate).toLocaleString();\n  var username = \"\";\n  if (comment.role === \"ADMIN\") {\n    username = \"관리자\";\n  } else if (comment.role === \"PUBLISHER\") {\n    username = \"UI담당자\";\n  } else {\n    username = comment.username.substring(0, 5) + '*'.repeat(comment.username.length - 5);\n  }\n\n  return (\n    <div key={comment.id} className=\"comment\">\n      <div className=\"comment-image-container\">\n        <img src=\"/user-icon.png\" />\n      </div>\n      <div className=\"comment-right-part\">\n        <div className=\"comment-content\">\n          <div>\n            <span className=\"comment-author\"\n              style={{ color: comment.role === \"ADMIN\" ? \"blue\" : \"\" }}\n            >{username}</span>({lastModifiedDate})\n          </div>\n        </div>\n        {!isEditing && <div className=\"comment-text\">{comment.body}</div>}\n        {isEditing && (\n          <CommentForm\n            submitLabel=\"Update\"\n            hasCancelButton\n            initialText={comment.body}\n            handleSubmit={(text) => updateComment(text, comment.id)}\n            handleCancel={() => {\n              setActiveComment(null);\n            }}\n          />\n        )}\n        <div className=\"comment-actions\">\n          {canReply && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"replying\" })\n              }\n            >\n              Reply\n            </div>\n          )}\n          {canEdit && (\n            <div\n              className=\"comment-action\"\n              onClick={() =>\n                setActiveComment({ id: comment.id, type: \"editing\" })\n              }\n            >\n              Edit\n            </div>\n          )}\n          {canDelete && (\n            <div\n              className=\"comment-action\"\n              onClick={() => deleteComment(comment.id)}\n            >\n              Delete\n            </div>\n          )}\n        </div>\n        {isReplying && (\n          <CommentForm\n            submitLabel=\"Reply\"\n            handleSubmit={(text) => addComment(text, replyId)}\n          />\n        )}\n        {replies.length > 0 && (\n          <div className=\"replies\">\n            {replies.map((reply) => (\n              <Comment\n                comment={reply}\n                key={reply.id}\n                setActiveComment={setActiveComment}\n                activeComment={activeComment}\n                updateComment={updateComment}\n                deleteComment={deleteComment}\n                addComment={addComment}\n                parentId={comment.id}\n                replies={[]}\n                currentUser={currentUser}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Comment;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/Setting.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/BasicSpeedDial.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/member/ApiKeyUpdateForm.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/CharacterSortForm.jsx",["224"],[],"import React, { useState } from \"react\";\nimport { call } from \"../../service/api-service\";\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Typography } from '@mui/material';\nimport SaveIcon from '@mui/icons-material/Save';\nimport {\n    GridContextProvider,\n    GridDropZone,\n    GridItem,\n    swap,\n} from \"react-grid-dnd\";\n\nconst CharacterSortForm = (props) => {\n    //1.순서 변경 캐릭터 리스트 저장\n    const [itemsSwapState, setItemsSwapState] = React.useState(false);\n    function onChange(sourceId, sourceIndex, targetIndex, targetId) {\n        setItemsSwapState(true);\n        const nextState = swap(props.characters, sourceIndex, targetIndex);\n        for (let i = 0; i < nextState.length; i++) {\n            nextState[i].sortNumber = i;\n        }\n        props.setCharacters(nextState);\n    }\n\n    //2.순서 변경 DB저장\n    const saveSort = () => {\n        if(props.friendSetting === null) {\n            props.setShowLinearProgress(true);\n            call(\"/member/characterList/sorting\", \"PATCH\", props.characters)\n                .then((response) => {\n                    props.setShowLinearProgress(false);\n                    props.showMessage(\"순서 업데이트가 완료되었습니다.\");\n                    props.setShowCharacterSortForm(false);\n                });\n            setItemsSwapState(false);\n        } else {\n            if(props.friendSetting.setting) {\n                props.setShowLinearProgress(true);\n                call(\"/v2/friends/characterList/sorting/\" +props.friendUsername, \"PATCH\", props.characters)\n                    .then((response) => {\n                        props.setShowLinearProgress(false);\n                        props.showMessage(\"순서 업데이트가 완료되었습니다.\");\n                        props.setShowCharacterSortForm(false);\n                    });\n                setItemsSwapState(false);\n            } else {\n                props.showMessage(\"권한이 없습니다.\");\n            }\n\n        }\n    };\n\n    const [itemsPerRow, setItemsPerRow] = useState(calculateItemsPerRow());\n    function calculateItemsPerRow() {\n        var screenWidth = window.innerWidth;\n        if (screenWidth >= 1300) {\n            screenWidth = 1300;\n        }\n        const width = 250;\n        const row = 2;\n        if (screenWidth > width * row) {\n            return Math.ceil(screenWidth / width);\n        } else {\n            return row;\n        }\n    }\n    \n    return (\n        <Accordion style={{ backgroundColor: \"rgba(255, 255, 255, 50%)\", width: \"100%\", border: \"1px solid white\" }} className=\"sort-wrap\">\n            <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n                style={{ borderRadius: \"5px\" }}\n            >\n                <Typography fontWeight={\"bold\"} display={\"flex\"}>캐릭터 순서 변경\n                    <SaveIcon\n                        onClick={() => saveSort()}\n                        sx={{ display: itemsSwapState ? \"flex\" : \"none\", marginLeft: \"5px\", color: \"blueviolet\", cursor: \"pointer\" }}\n                    >\n                    </SaveIcon>\n                </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <GridContextProvider onChange={onChange}>\n                    <GridDropZone\n                        id=\"characters\"\n                        boxesPerRow={itemsPerRow}\n                        rowHeight={80}\n                        style={{ height: 80 * Math.ceil(props.characters.length / itemsPerRow) }}\n                    >\n                        {props.characters.map((character) => (\n                            <GridItem key={character.sortNumber} style={{ width: `${100 / itemsPerRow}%` }}>\n                                <div style={{ marginRight: 10 }}>\n                                    <div className=\"character-info-mini\"\n                                        style={{\n                                            backgroundImage: character.characterImage !== null ? `url(${character.characterImage})` : \"\",\n                                            backgroundPosition: character.characterClassName === \"도화가\" || character.characterClassName === \"기상술사\" ? \"left 25px top -70px\" : \"left 25px top -35px\",\n                                            backgroundColor: \"gray\", \n                                        }}>\n                                        <p>{character.characterName}</p>\n                                        <p>Lv. {character.itemLevel}</p>\n                                    </div>\n                                </div>\n                            </GridItem>\n                        ))}\n                    </GridDropZone>\n                    <span className=\"acc-txt\">드래그 시 캐릭터 순서가 변경됩니다</span>\n                </GridContextProvider>\n            </AccordionDetails>\n        </Accordion>\n    );\n};\n\nexport default CharacterSortForm;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/WeekEponaWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/SilmaelChangeWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/CubeWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/todo/WeekTodoWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/TodoWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/icons/DiscordIcon.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekTodoWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendsWrap.jsx",["225","226","227","228","229"],[],"import React, { useState, useEffect } from \"react\";\nimport { call } from \"../../service/api-service\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Grid } from \"@mui/material\";\nimport Notification from '../../fragments/Notification';\nimport LinearIndeterminate from '../../fragments/LinearIndeterminate';\nimport FriendWeekTodoWrap from \"./FriendWeekTodoWrap\";\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport Modal from \"@mui/material/Modal\";\nimport Typography from \"@mui/material/Typography\";\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport FriendTodoWrap from \"./FriendTodoWrap\";\nimport FriendBasicSpeedDial from \"./FriendBasicSpeedDial\";\n\n\n//------------------------- 탭관련 -------------------------\nfunction CustomTabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <div>{children}</div>\n            )}\n        </div>\n    );\n}\nCustomTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n//-----------------------------------------------------\n\nexport default function FriendsWrap() {\n    const [tabValue, setTabValue] = useState(0);\n    const [friends, setFriends] = useState([]);\n    const [friendSetting, setFriendSetting] = useState([]);\n    const [characters, setCharacters] = useState([]);\n    const [state, setState] = useState(null);\n    const [friendUsername, setFriendUsername] = useState(null);\n    const [showCharacterSortForm, setShowCharacterSortForm] = useState(false);\n\n    const handleChange = (event, friend) => {\n        const index = friends.indexOf(friend);\n\n        setTabValue(index);\n        setState(friend.areWeFriend);\n        setFriendUsername(friend.username);\n        setCharacters(friend.characterList);\n        setFriendSetting(friend.fromFriendSettings);\n    };\n\n    //Notification 관련\n    const [openSnackbar, setOpenSnackbar] = useState(false);\n    const [snackbarMessage, setSnackbarMessage] = useState('');\n\n    const handleSnackbarClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpenSnackbar(false);\n    };\n\n    const showMessage = (message) => {\n        setSnackbarMessage(message);\n        setOpenSnackbar(true);\n    };\n\n    //------------------------- 페이지 로드시 호출 -------------------------\n    useEffect(() => {\n        call(\"/v2/friends\", \"GET\", null)\n            .then((response) => {\n                if (response !== null) {\n                    setFriends(response);\n                    setTabValue(0);\n                    setState(response[0].areWeFriend);\n                    setFriendUsername(response[0].username);\n                    setCharacters(response[0].characterList);\n                    setFriendSetting(response[0].fromFriendSettings);\n                }\n            })\n            .catch((error) => { showMessage(error.errorMessage) });\n    }, []);\n\n    // 캐릭터 닉네임 검색\n    const findCharacter = () => {\n        const characterName = document.getElementById('find-character').value;\n        if (characterName === '') {\n            showMessage(\"캐릭터명을 입력하여주십시오.\");\n        } else {\n            call(\"/v2/friends/character/\" + characterName, \"GET\", null)\n                .then((response) => {\n                    openFindCharacterFriend(response);\n                })\n                .catch((error) => {\n                    showMessage(error.errorMessage);\n                });\n        }\n    }\n\n    /**\n     * 각종 정보창 모달 관련\n     */\n    // 모달 열기/닫기 상태 관리\n    const [openModal, setOpenModal] = useState(false);\n    const [modalContent, setModalContent] = useState(\"\");\n    const [modalTitle, setModalTitle] = useState(\"\");\n    // 모달 닫기 함수\n    const closeContentModal = () => {\n        setOpenModal(false);\n        setModalTitle(\"\");\n        setModalContent(\"\");\n    };\n\n    // 캐릭터 검색 결과 모달\n    const openFindCharacterFriend = (findCharacterFriend) => {\n        setModalTitle(\"검색 결과\");\n        var content = findCharacterFriend.map((character) => {\n            return (\n                <div key={character.id}>\n                    <p>{character.username.substring(0, 5) + '*'.repeat(character.username.length - 5)}\n                        {character.areWeFriend === \"깐부 요청\" &&\n                            <Button variant=\"outlined\" onClick={() => requestFriend(character.areWeFriend, character.username)}\n                                style={{ marginLeft: 10 }}>\n                                {character.areWeFriend}\n                            </Button>}\n                        {character.areWeFriend === \"깐부 요청 진행중\" &&\n                            <Button variant=\"outlined\" color=\"secondary\" onClick={() => requestFriend(character.areWeFriend, character.username)}\n                                style={{ marginLeft: 10 }}>\n                                {character.areWeFriend}\n                            </Button>}\n                        {character.areWeFriend === \"깐부 요청 받음\" &&\n                            <Button variant=\"outlined\" color=\"success\" onClick={() => requestFriend(character.areWeFriend, character.username)}\n                                style={{ marginLeft: 10 }}>\n                                {character.areWeFriend}\n                            </Button>}\n                        {character.areWeFriend === \"깐부\" &&\n                            <Button variant=\"outlined\" color=\"inherit\" style={{ marginLeft: 10, cursor: \"default\" }}>\n                                {character.areWeFriend}\n                            </Button>\n                        }\n                    </p>\n                </div>\n            );\n        });\n        var modalContent = (\n            <div>\n                {content}\n            </div>\n        );\n        setModalContent(modalContent);\n        setOpenModal(true);\n    };\n\n    // 검색 후 요청 메서드\n    const requestFriend = (category, fromMember) => {\n        if (category === \"깐부 요청\") {\n            call(\"/v2/friends/\" + fromMember, \"POST\", null)\n                .then((response) => {\n                    setFriends(response);\n                    closeContentModal();\n                    showMessage(\"요청이 정상적으로 처리되었습니다.\")\n                })\n                .catch((error) => {\n                    showMessage(error.errorMessage);\n                });\n        }\n        if (category === \"깐부 요청 진행중\" || category === \"깐부 요청 받음\" || category === \"요청 거부\") {\n            handleRequest(\"delete\", fromMember);\n        }\n\n    }\n    //------------------------- 설정 버튼 관련 -------------------------\n    const openSettingForm = (friendsId) => {\n        const friend = friends[friendsId];\n\n        setModalTitle(friend.nickName + \" 권한 설정\");\n        var modalContent = (\n            <div>\n                <div>\n                    <p>\n                        {friend.areWeFriend === \"깐부 요청 받음\" &&\n                            <div>\n                                <Button variant=\"outlined\" onClick={() => handleRequest(\"ok\", friend.friendUsername)}>수락</Button>\n                                <Button variant=\"outlined\" color=\"error\" onClick={() => handleRequest(\"reject\", friend.friendUsername)}>거절</Button>\n                            </div>\n                        }\n                        {friend.areWeFriend !== \"깐부 요청 받음\" &&\n                            <div>\n                                권한 : {friend.areWeFriend}\n                                <Button variant=\"outlined\" color=\"error\" style={{marginLeft:10}} onClick={() => handleRequest(\"delete\", friend.friendUsername)}>깐부 삭제</Button>\n                            </div>\n                        }\n                    </p>\n                </div>\n                <div>\n                    <p>일일 숙제 출력 권한 : {selectSetting(friend.id, friend.toFriendSettings.showDayTodo, \"showDayTodo\")}</p>\n                </div>\n                <div>\n                    <p>일일 숙제 체크 권한 : {selectSetting(friend.id, friend.toFriendSettings.checkDayTodo, \"checkDayTodo\")}</p>\n                </div>\n                <div>\n                    <p>레이드 출력 권한 : {selectSetting(friend.id, friend.toFriendSettings.showRaid, \"showRaid\")}</p>\n                </div>\n                <div>\n                    <p>레이드 체크 권한 : {selectSetting(friend.id, friend.toFriendSettings.checkRaid, \"checkRaid\")}</p>\n                </div>\n                <div>\n                    <p>주간 숙제 출력 권한 : {selectSetting(friend.id, friend.toFriendSettings.showWeekTodo, \"showWeekTodo\")}</p>\n                </div>\n                <div>\n                    <p>주간 숙제 체크 권한 : {selectSetting(friend.id, friend.toFriendSettings.checkWeekTodo, \"checkWeekTodo\")}</p>\n                </div>\n                <div>\n                    <p>설정 변경 권한 : {selectSetting(friend.id, friend.toFriendSettings.setting, \"setting\")}</p>\n                </div>\n            </div>\n        );\n        setModalContent(modalContent);\n        setOpenModal(true);\n    };\n\n    const selectSetting = (friendId, setting, settingName) => (\n        <FormControl size=\"small\">\n            <Select\n                id={`${friendId}_${settingName}`}\n                onChange={(event) => updateSetting(event, friendId, settingName)}\n                defaultValue={setting ? \"true\" : \"false\"}\n                sx={{ bgcolor: setting ? '#FA5858' : \"#81BEF7\", color: \"var(--text-color)\", fontWeight: \"bold\", transition: \"color 0.5s\" }}\n            >\n                <MenuItem value={true} >true</MenuItem>\n                <MenuItem value={false}>false</MenuItem>\n            </Select>\n        </FormControl>\n    );\n\n    const updateSetting = (event, friendId, settingName) => {\n        setShowLinearProgress(true);\n        const updateContent = {\n            id: friendId,\n            name: settingName,\n            value: event.target.value\n        };\n        call(\"/v2/friends/settings\", \"PATCH\", updateContent)\n            .then((response) => {\n                setShowLinearProgress(false);\n                var point = document.getElementById(`${friendId}_${settingName}`);\n                point.style.backgroundColor = event.target.value ? '#FA5858' : \"#81BEF7\";\n            })\n            .catch((error) => {\n                alert(error.errorMessage);\n            });\n    };\n\n    const handleRequest = (category, fromMember) => {\n        const confirmMessage = category === \"delete\" ? \"해당 요청을 삭제 하시겠습니까?\" : null;\n\n        const userConfirmed = confirmMessage ? window.confirm(confirmMessage) : true;\n\n        if (userConfirmed) {\n            setShowLinearProgress(true);\n            call(`/v2/friends/${fromMember}/${category}`, \"PATCH\", null)\n                .then((response) => {\n                    setShowLinearProgress(false);\n                    window.location.replace(\"/friends\");\n                })\n                .catch((error) => {\n                    showMessage(error.errorMessage);\n                });\n        }\n    }\n\n\n\n    const [showLinearProgress, setShowLinearProgress] = useState(false);\n    return (\n        <>\n            {showLinearProgress && <LinearIndeterminate />}\n            <FriendBasicSpeedDial\n                setShowLinearProgress={setShowLinearProgress}\n                setCharacters={setCharacters}\n                showMessage={showMessage}\n                setShowCharacterSortForm={setShowCharacterSortForm}\n                friendSetting={friendSetting}\n                friendUsername={friendUsername}\n            />\n            <div className=\"wrap\">\n                <div>\n                    <TextField id=\"find-character\" label=\"캐릭터 닉네임 입력\" variant=\"outlined\" size=\"small\" />\n                    <Button variant=\"outlined\" onClick={() => findCharacter()}>검색</Button>\n                </div>\n                <div className=\"todo-wrap\" >\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider', width: \"100vw\", maxWidth: \"1280px\" }}>\n                        <Tabs value={tabValue} onChange={(event, friend) => handleChange(event, friend)} aria-label=\"basic tabs example\">\n                            {friends.map((friend, index) =>\n                                <Tab\n                                    label={friend.nickName}\n                                    {...a11yProps(index)}\n                                    key={friend.id}\n                                    onClick={(event) => handleChange(event, friend)}\n                                    style={{ color: \"var(--text-color)\" }}\n                                />\n                            )}\n                        </Tabs>\n                    </Box>\n                    <CustomTabPanel value={tabValue} index={tabValue}>\n                        {characters !== null && <div className=\"setting-wrap\">\n                            <button\n                                className=\"content-button\"\n                                style={{ cursor: \"pointer\", marginBottom: 0 }}\n                                onClick={() => openSettingForm(tabValue)}\n                            >\n                                깐부 설정\n                            </button>\n                            {state !== \"깐부\" && <p>{state}</p>}\n                        </div>}\n                        {state === \"깐부\" && <FriendTodoWrap\n                            characters={characters}\n                            setCharacters={setCharacters}\n                            friends={friends}\n                            setFriends={setFriends}\n                            tabValue={tabValue}\n                            friendSetting={friendSetting}\n                            showMessage={showMessage}\n                            setShowLinearProgress={setShowLinearProgress}\n                            setModalTitle={setModalTitle}\n                            setModalContent={setModalContent}\n                            setOpenModal={setOpenModal}\n                            showCharacterSortForm={showCharacterSortForm}\n                            friendUsername={friendUsername}\n                        />}\n                        {/* {state === \"요청 거부\" && <div style={{ color: 'red' }}>{areWeFriend}</div>} */}\n                    </CustomTabPanel>\n                </div>\n                <Modal\n                    open={openModal}\n                    onClose={closeContentModal}\n                    aria-labelledby=\"modal-title\"\n                    aria-describedby=\"modal-description\"\n                >\n                    <div className=\"miniModal\"\n                        style={{\n                            position: \"absolute\",\n                            top: \"50%\", left: \"50%\",\n                            transform: \"translate(-50%, -50%)\",\n                            backgroundColor: \"#ffffff\",\n                            padding: \"20px 30px 20px 20px\", width: \"auto\", overflowY: \"auto\",\n                            maxHeight: 450,\n                        }}>\n                        <Typography variant=\"h5\" id=\"modal-title\" style={{ color: \"white\", backgroundColor: \"black\", borderRadius: 7, textAlign: \"center\" }}>\n                            {modalTitle}\n                        </Typography>\n                        <pre style={{ whiteSpace: \"pre-wrap\", wordWrap: \"break-word\", lineHeight: 2, fontWeight: \"bold\" }}>\n                            {modalContent}\n                        </pre>\n                    </div>\n                </Modal>\n            </div >\n\n            < Notification\n                message={snackbarMessage}\n                open={openSnackbar}\n                handleClose={handleSnackbarClose}\n            />\n        </>\n    );\n}\n","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendCubeWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendWeekEponaWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendSilmaelChangeWrap.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendTodoWrap.jsx",["230","231","232","233","234"],[],"import React, { useState } from \"react\";\nimport { call } from \"../../service/api-service\";\nimport CharacterSortForm from \"../todo/CharacterSortForm\";\nimport { Grid } from \"@mui/material\";\nimport DoneIcon from '@mui/icons-material/Done';\nimport CloseIcon from '@mui/icons-material/Close';\nimport FriendWeekTodoWrap from \"./FriendWeekTodoWrap\";\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\n\nconst FriendTodoWrap = (props) => {\n    //------------------------- 일일 수익 & 주간 수익 관련 -------------------------\n    //1. 예상 일일 수익\n    const totalDayGold = props.characters.reduce((accumulator, character) => {\n        if (character.settings.showChaos) {\n            accumulator += character.chaosGold;\n        }\n        if (character.settings.showGuardian) {\n            accumulator += character.guardianGold;\n        }\n        return accumulator;\n    }, 0);\n\n    //2. 일일 수익\n    const getDayGold = props.characters.reduce((accumulator, character) => {\n        if (character.chaosCheck >= 1) {\n            for (var i = 0; i < character.chaosCheck; i++) {\n                accumulator += character.chaosGold / 2;\n            }\n        }\n        if (character.guardianCheck === 1) {\n            accumulator += character.guardianGold;\n        }\n        return accumulator;\n    }, 0);\n\n    //3. 예상 주간 수익\n    const totalWeekGold = props.characters.reduce((accumulator, character) => {\n        if (character.goldCharacter) {\n            character.todoList.forEach((todo) => {\n                accumulator += todo.gold;\n            });\n        }\n        return accumulator;\n    }, 0);\n\n    //4. 주간 수익\n    const getWeekGold = props.characters.reduce((accumulator, character) => {\n        if (character.goldCharacter) {\n            accumulator += character.weekGold;\n        }\n        return accumulator;\n    }, 0);\n    //-------------------------------------------------------------------------\n\n    //------------------------- 일일 숙제 체크 관련 -------------------------\n    const updateDayContent = async (characterId, category, authority) => {\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        props.setShowLinearProgress(true);\n        const updatedCharacters = props.characters.map((character) => {\n            if (character.id === characterId) {\n                var updatedCharacter = {\n                    ...character,\n                };\n                const updateContent = {\n                    characterId: character.id,\n                    characterName: character.characterName,\n                };\n                return call(\"/v2/friends/day-content/check/\" + category, \"PATCH\", updateContent)\n                    .then((response) => {\n                        props.setShowLinearProgress(false);\n                        updatedCharacter = response;\n                        return updatedCharacter;\n                    })\n                    .catch((error) => {\n                        props.setShowLinearProgress(false);\n                        props.showMessage(error.errorMessage);\n                        updatedCharacter[`${category}Check`] = 0;\n                        return updatedCharacter;\n                    });\n            }\n            return character;\n        });\n        const updatedCharactersResult = await Promise.all(updatedCharacters);\n        props.setCharacters(updatedCharactersResult);\n    };\n\n    const updateDayContentAll = async (e, characterId, category, authority) => {\n        e.preventDefault();\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        props.setShowLinearProgress(true);\n        const updatedCharacters = props.characters.map((character) => {\n            if (character.id === characterId) {\n                var updatedCharacter = {\n                    ...character,\n                };\n                const updateContent = {\n                    characterId: character.id,\n                    characterName: character.characterName,\n                };\n                return call(\"/v2/friends/day-content/check/\" + category + \"/all\", \"PATCH\", updateContent)\n                    .then((response) => {\n                        props.setShowLinearProgress(false);\n                        updatedCharacter = response;\n                        return updatedCharacter;\n                    })\n                    .catch((error) => {\n                        props.setShowLinearProgress(false);\n                        props.showMessage(error.errorMessage);\n                        updatedCharacter[`${category}Check`] = 0;\n                        return updatedCharacter;\n                    });\n            }\n            return character;\n        });\n        const updatedCharactersResult = await Promise.all(updatedCharacters);\n        props.setCharacters(updatedCharactersResult);\n    };\n\n    //캐릭터 휴식게이지 업데이트\n    const handleDayContentGuage = async (e, characterId, gaugeType, authority) => {\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        e.preventDefault();\n        const newGaugeValue = window.prompt(`휴식게이지 수정`);\n\n        if (newGaugeValue !== null) {\n            const parsedValue = parseInt(newGaugeValue);\n            if (!isNaN(parsedValue)) {\n                const updatedCharacters = props.characters.map((character) => {\n                    if (character.id === characterId) {\n                        const updatedCharacter = {\n                            ...character,\n                            [`${gaugeType}Gauge`]: parsedValue,\n                        };\n\n                        const updateContent = {\n                            characterId: updatedCharacter.id,\n                            characterName: updatedCharacter.characterName,\n                            chaosGauge: updatedCharacter.chaosGauge,\n                            guardianGauge: updatedCharacter.guardianGauge,\n                            eponaGauge: updatedCharacter.eponaGauge,\n                        };\n\n                        props.setShowLinearProgress(true);\n\n                        return call(\"/v2/friends/day-content/gauge\", \"PATCH\", updateContent)\n                            .then((response) => {\n                                props.setShowLinearProgress(false);\n                                updatedCharacter.chaosGold = response.chaosGold;\n                                updatedCharacter.guardianGold = response.guardianGold;\n                                return updatedCharacter;\n                            })\n                            .catch((error) => {\n                                props.setShowLinearProgress(false);\n                                props.showMessage(error.errorMessage);\n                                return character;\n                            });\n                    }\n                    return character;\n                });\n                const updatedCharactersWithGold = await Promise.all(updatedCharacters);\n                props.setCharacters(updatedCharactersWithGold);\n            }\n        }\n    };\n\n    //------------------------- 서버별 분리 관련 -------------------------\n    // const [anchorEl, setAnchorEl] = useState(null);\n    // const [selectedServer, setSelectedServer] = useState(null);\n    // const [servers, setServers] = useState([]); //서버 리스트\n\n    // const open = Boolean(anchorEl);\n    // const handleClick = (event) => {\n    //     setAnchorEl(event.currentTarget);\n    // };\n    // const handleClose = () => {\n    //     setAnchorEl(null);\n    // };\n    // const handleServerSelect = (serverName) => {\n    //     setSelectedServer(serverName);\n    //     handleClose();\n    //     call(\"/member/characterList/\" + serverName, \"GET\", null)\n    //         .then((characterResponse) => {\n    //             props.setCharacters(characterResponse);\n    //         })\n    // };\n    // const serverItems = Object.entries(servers).map(([serverName, count]) => (\n    //     <MenuItem key={serverName} value={serverName}\n    //         onClick={() => handleServerSelect(serverName)}>\n    //         {serverName}: {count}개\n    //     </MenuItem>\n    // ));\n\n    // 도전 어비스/가디언 체크(v2 업데이트 완료)\n    const updateChallenge = async (character, content, authority) => {\n        if (!authority) {\n            props.showMessage(\"권한이 없습니다.\");\n            return;\n        }\n        props.setShowLinearProgress(true);\n        const updateContent = {\n            characterId: character.id,\n            serverName: character.serverName,\n            content: content\n        };\n        try {\n            const response = await call(\"/v2/friends/challenge\", \"PATCH\", updateContent);\n            props.setCharacters(response);\n            props.setShowLinearProgress(false);\n        } catch (error) {\n            console.error(\"Error updating challenge:\", error);\n            props.setShowLinearProgress(false);\n        }\n    }\n\n    //-----------------------------------------------------------------------------\n    return (\n        <div>\n            <div className=\"wrap\" style={{ marginTop: 0 }}>\n                <div className=\"setting-wrap\">\n                    <div className=\"content-box\">\n                        <p>일일 수익</p>\n                        <span className=\"bar\">\n                            <i style={{ width: `${getDayGold / totalDayGold * 100}%` }}></i>\n                            <em style={{ textAlign: \"center\" }}>{(getDayGold / totalDayGold * 100).toFixed(1)} %</em>\n                        </span>\n                        <p>{getDayGold.toFixed(2)} / <span>{totalDayGold.toFixed(2)}</span>G</p>\n                    </div>\n                    <div className=\"content-box\">\n                        <p>주간 수익</p>\n                        <span className=\"bar\">\n                            <i style={{ width: `${getWeekGold / totalWeekGold * 100}%` }}></i>\n                            <em style={{ textAlign: \"center\" }}>{(getWeekGold / totalWeekGold * 100).toFixed(1)} %</em>\n                        </span>\n                        <p className={`${getWeekGold / totalWeekGold}` === 1 ? \"on\" : \"\"}>{getWeekGold.toLocaleString()} / <span>{totalWeekGold.toLocaleString()}</span>G</p>{/* pub width가 100% 시 on 클래스 추가해주세요!(골드색변함) */}\n                    </div>\n                </div>\n                {props.showCharacterSortForm && <CharacterSortForm\n                    characters={props.characters}\n                    setCharacters={props.setCharacters}\n                    setShowLinearProgress={props.setShowLinearProgress}\n                    showMessage={props.showMessage}\n                    setShowCharacterSortForm={props.setShowCharacterSortForm}\n                    friendSetting={props.friendSetting}\n                    friendUsername={props.friendUsername}\n                />}\n                <div className=\"setting-wrap\">\n                    {/* <div>\n                        <Button\n                            id=\"fade-button\"\n                            aria-controls={open ? 'fade-menu' : undefined}\n                            aria-haspopup=\"true\"\n                            aria-expanded={open ? 'true' : undefined}\n                            onClick={handleClick}\n                        >\n                            {selectedServer} {servers[selectedServer]}개\n                        </Button>\n                        <Menu\n                            id=\"fade-menu\"\n                            MenuListProps={{\n                                'aria-labelledby': 'fade-button',\n                            }}\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={handleClose}\n                            TransitionComponent={Fade}\n                        >\n                            {serverItems}\n                        </Menu>\n                    </div> */}\n                    <button\n                        className={`content-button ${props.characters.length > 0 && props.characters[0].challengeGuardian === true ? \"done\" : \"\"}`}\n                        onClick={() => updateChallenge(props.characters[0], \"Guardian\", props.friendSetting.checkWeekTodo)} style={{ cursor: \"pointer\" }}\n                    >\n                        도전 가디언 토벌\n                        <div className=\"content-button-text\" onClick={() => updateChallenge(props.characters[0], \"Guardian\", props.friendSetting.checkWeekTodo)}>\n                            {props.characters.length > 0 && (props.characters[0]?.challengeGuardian === true ? <DoneIcon /> : \"\")}\n                        </div>\n                    </button>\n                    <button\n                        className={`content-button ${props.characters.length > 0 && props.characters[0].challengeAbyss === true ? \"done\" : \"\"}`}\n                        onClick={() => updateChallenge(props.characters[0], \"Abyss\", props.friendSetting.checkWeekTodo)} style={{ cursor: \"pointer\" }}\n                    >\n                        도전 어비스 던전\n                        <div className=\"content-button-text\" onClick={() => updateChallenge(props.characters[0], \"Abyss\", props.friendSetting.checkWeekTodo)}>\n                            {props.characters.length > 0 && (props.characters[0]?.challengeAbyss === true ? <DoneIcon /> : \"\")}\n                        </div>\n                    </button>\n                </div>\n                <div className=\"todo-wrap\" >\n                    <Grid container spacing={1.5} overflow={\"hidden\"}>\n                        {props.characters.map((character) => (\n                            <Grid key={character.id} item>\n                                <div className=\"character-wrap\">\n                                    <div className=\"character-info\"\n                                        style={{\n                                            backgroundImage: character.characterImage !== null ? `url(${character.characterImage})` : \"\",\n                                            backgroundPosition: character.characterClassName === \"도화가\" || character.characterClassName === \"기상술사\" ? \"left 10px top -80px\" : \"left 10px top -30px\",\n                                            backgroundColor: \"gray\", // 배경색을 회색으로 설정\n                                        }}>\n                                        <div className={character.goldCharacter ? \"gold-border\" : \"\"}>\n                                            {character.goldCharacter ? \"골드 획득 지정\" : \"\"} {/* pub 문구변경 */}\n                                        </div>\n                                        <span>@{character.serverName}  {character.characterClassName}</span>\n                                        <h3 style={{ margin: 0 }}>{character.characterName}</h3>\n                                        <h2 style={{ margin: 0 }}>Lv. {character.itemLevel}</h2>\n                                    </div>\n                                    <p className=\"title\">일일 숙제</p>{/* pub 추가 */}\n                                    {props.friendSetting.showDayTodo && <div>\n                                        <div className=\"content-wrap\">\n                                            <div className=\"content\"\n                                                onClick={() => updateDayContent(character.id, \"epona\", props.friendSetting.checkDayTodo)}\n                                                onContextMenu={(e) => updateDayContentAll(e, character.id, \"epona\", props.friendSetting.checkDayTodo)}\n                                                style={{ cursor: \"pointer\" }}\n                                            >\n                                                <button\n                                                    className={`content-button ${character.eponaCheck === 3 ? \"done\" :\n                                                        character.eponaCheck === 1 ? \"ing\" :\n                                                            character.eponaCheck === 2 ? \"ing2\" : \"\"}`}\n                                                >\n                                                    {character.eponaCheck === 3 ? <DoneIcon /> : <CloseIcon />}\n                                                </button>\n                                                <div\n                                                    className={`${character.eponaCheck === 3 ? \"text-done\" : \"\"}`}>\n                                                    <span>에포나의뢰</span>\n                                                </div>\n                                            </div>\n                                            <div className=\"content gauge-box\" style={{ height: 24, padding: 0, position: \"relative\", cursor: \"pointer\" }}\n                                                onContextMenu={(e) => handleDayContentGuage(e, character.id, \"epona\", props.friendSetting.checkDayTodo)}\n                                                onClick={(e) => handleDayContentGuage(e, character.id, \"epona\", props.friendSetting.checkDayTodo)}>\n                                                {Array.from({ length: 5 }, (_, index) => (\n                                                    <div key={index} className=\"gauge-wrap\">\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 < character.eponaGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 + 1 < character.eponaGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                    </div>\n                                                ))}\n                                                <span className=\"gauge-text\">\n                                                    휴식게이지 {character.eponaGauge}\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div className=\"content-wrap\">\n                                            <div className=\"content\" onClick={() => updateDayContent(character.id, \"chaos\", props.friendSetting.checkDayTodo)}\n                                                onContextMenu={(e) => updateDayContentAll(e, character.id, \"chaos\", props.friendSetting.checkDayTodo)}\n                                                style={{ cursor: \"pointer\" }}>\n                                                <button\n                                                    className={`content-button ${character.chaosCheck === 0 ? \"\" :\n                                                        character.chaosCheck === 1 ? \"ing\" : \"done\"}`}\n                                                >\n                                                    {character.chaosCheck === 2 ? <DoneIcon /> : <CloseIcon />}\n                                                </button>\n                                                <div\n                                                    className={`${character.chaosCheck === 2 ? \"text-done\" : \"\"}`}\n                                                >\n                                                    <p>카오스던전</p>\n                                                    <p className=\"gold\">({character.chaosGold} gold)</p>\n                                                </div>\n                                            </div>\n                                            <div className=\"content gauge-box\" style={{ height: 24, padding: 0, position: \"relative\", cursor: \"pointer\" }}\n                                                onContextMenu={(e) => handleDayContentGuage(e, character.id, \"chaos\", props.friendSetting.checkDayTodo)}\n                                                onClick={(e) => handleDayContentGuage(e, character.id, \"chaos\", props.friendSetting.checkDayTodo)}>\n                                                {Array.from({ length: 5 }, (_, index) => (\n                                                    <div key={index} className=\"gauge-wrap\">\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 < character.chaosGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 + 1 < character.chaosGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                    </div>\n                                                ))}\n                                                <span className=\"gauge-text\">\n                                                    휴식게이지 {character.chaosGauge}\n                                                </span>\n                                            </div>\n                                        </div>\n                                        <div className=\"content-wrap\">\n                                            <div className=\"content\" onClick={() => updateDayContent(character.id, \"guardian\", props.friendSetting.checkDayTodo)}\n                                                onContextMenu={(e) => updateDayContentAll(e, character.id, \"guardian\", props.friendSetting.checkDayTodo)}\n                                                style={{ cursor: \"pointer\" }}>\n                                                <button\n                                                    className={`content-button ${character.guardianCheck === 1 ? \"done\" : \"\"}`}\n                                                >\n                                                    {character.guardianCheck === 1 ? <DoneIcon /> : <CloseIcon />}\n                                                </button>\n                                                <div\n                                                    className={`${character.guardianCheck === 1 ? \"text-done\" : \"\"}`}\n                                                >\n                                                    <p>가디언토벌</p>\n                                                    <p className=\"gold\">({character.guardianGold} gold)</p>\n                                                </div>\n                                            </div>\n                                            <div className=\"content gauge-box\" style={{ height: 24, padding: 0, position: \"relative\", cursor: \"pointer\" }}\n                                                onContextMenu={(e) => handleDayContentGuage(e, character.id, \"guardian\", props.friendSetting.checkDayTodo)}\n                                                onClick={(e) => handleDayContentGuage(e, character.id, \"guardian\", props.friendSetting.checkDayTodo)}>\n                                                {Array.from({ length: 5 }, (_, index) => (\n                                                    <div key={index} className=\"gauge-wrap\">\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 < character.guardianGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                        <div\n                                                            className=\"gauge\"\n                                                            style={{ backgroundColor: index * 2 + 1 < character.guardianGauge / 10 ? \"#cfecff\" : undefined }}\n                                                        ></div>\n                                                    </div>\n                                                ))}\n                                                <span className=\"gauge-text\">\n                                                    휴식게이지 {character.guardianGauge}\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>}\n                                </div>\n                                <FriendWeekTodoWrap\n                                    characters={props.characters}\n                                    setCharacters={props.setCharacters}\n                                    character={character}\n                                    setModalTitle={props.setModalTitle}\n                                    setModalContent={props.setModalContent}\n                                    setOpenModal={props.setOpenModal}\n                                    setShowLinearProgress={props.setShowLinearProgress}\n                                    showMessage={props.showMessage}\n                                    friendSetting={props.friendSetting}\n                                />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </div>\n            </div >\n        </div>\n    );\n};\n\nexport default FriendTodoWrap;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/fragments/AdsCard.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/friends/FriendBasicSpeedDial.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardListContainer.jsx",["235","236","237","238","239","240","241","242","243","244","245","246","247"],[],"import React, { useEffect, useState } from 'react';\nimport { call } from \"../../service/api-service\";\nimport * as boards from '../../apis/boards';\nimport { Link } from 'react-router-dom';\nimport SearchBox from '../../components/search/SearchBox';\nimport BoardList from '../../components/boards/BoardList';\nimport DiscordIcon from '../../icons/DiscordIcon';\n\n// 게시글 목록\nconst BoardListContainer = () => {\n    // state 설정\n    const [boardList, setBoardList] = useState([]);\n    const [noticeList, setNoticeList] = useState([]);\n    const [totalPages, setTotalPages] = useState(1);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    // 게시글 목록 데이터\n    const getBoardList = async (page) => {\n        try {\n            const data = await boards.list(page);\n            setBoardList(data.boardDtoList);\n            setTotalPages(data.totalPages);\n            setNoticeList(data.noticeList);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        getBoardList(currentPage);\n    }, [currentPage]);\n\n    const handlePageClick = async (page) => {\n        if (page <= totalPages) {\n            try {\n                const data = await boards.list(page);\n                setBoardList(data.boardDtoList);\n                setCurrentPage(page);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    };\n\n    // Generate an array with page numbers based on totalPages\n    const generatePageNumbers = () => {\n        const pageNumbers = [];\n        for (let i = 1; i <= totalPages; i++) {\n            pageNumbers.push(\n                <a\n                    key={i}\n                    href=\"javascript: void(0);\"\n                    className={`pagination__number ${currentPage === i ? 'pagination__number--active' : ''}`}\n                    onClick={() => handlePageClick(i)}\n                >\n                    {i}\n                </a>\n            );\n        }\n        return pageNumbers;\n    };\n\n\n    return (\n        <div>\n            <div className=\"comments\">\n                <div className=\"noticeBox box01\">\n                    <p className=\"notice\">공지사항</p>\n                    <div className=\"cont\">\n                        <ul>\n                            <li>개발자 : <DiscordIcon /> 마볼링#2884 <a href=\"https://open.kakao.com/o/snL05upf\" target='_blank'>오픈카톡</a></li>\n                            <li>UI담당자 : <DiscordIcon /> 얀비#7431</li>\n                        </ul>\n                    </div>\n                    <div className=\"cont\">\n                        <p>사용해주시고 많은 의견주셔서 너무 감사합니다. 최대한 빠르게 업데이트 하도록 해보겠습니다.</p>\n                        <ul>\n                            <li>서버에 접속이 안되는 경우, 보통 업데이트 중이므로 1~2분 후 접속이 가능합니다.</li>\n                            <li>슬라임/메데이아의 경우 서버별로 다르고, 길드가 직접 운영하기 때문에 추가가 어려울 것 같습니다.</li>\n                        </ul>\n                    </div>\n                    <div className=\"cont\">\n                        <p style={{ fontWeight: \"bold\" }}>개발자에게 커피 한잔</p>\n                        <ul>\n                            <li>보내주신 소중한 후원금은 서버 유지 및 발전 비용으로 사용됩니다.</li>\n                            <li>카카오뱅크 3333-08-6962739</li>\n                            <li>예금주 : 이민혁</li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n            <div className=\"content content--notice\">\n                <h2 className=\"title\">공지사항</h2>\n                {/* 리스트 검색 */}\n                <SearchBox placeholder={\"검색어를 입력해주세요.\"} data={boardList} />\n                {/* // 리스트 검색 */}\n\n                {/* 메인공지 */}\n                <BoardList boardList={noticeList}></BoardList>\n\n                {/* 업데이트 공지 */}\n                <BoardList boardList={boardList}></BoardList>\n                {/* 페이징 */}\n                <div className=\"pagination\" aria-label=\"페이지네이션\">\n                    <a href=\"javascript: void(0);\" className=\"pagination__first\" onClick={() => handlePageClick(1)}>\n                        처음\n                    </a>\n                    <a href=\"javascript: void(0);\" className=\"pagination__prev\" onClick={() => handlePageClick(currentPage - 1)}>\n                        이전\n                    </a>\n                    {generatePageNumbers()}\n                    <a href=\"javascript: void(0);\" className=\"pagination__next\" onClick={() => handlePageClick(currentPage + 1)}>\n                        다음\n                    </a>\n                    <a href=\"javascript: void(0);\" className=\"pagination__last\" onClick={() => handlePageClick(totalPages)}>\n                        마지막\n                    </a>\n                </div>\n                {/* // 페이징 */}\n                {/* <div>\n                    <Link to=\"/boards/insert\">글쓰기</Link>\n                </div> */}\n            </div>\n        </div>\n    );\n};\n\nexport default BoardListContainer;\n","/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardReadContainer.jsx",["248"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardUpdateContainer.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/containers/board/BoardInsertContainer.jsx",["249","250"],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/apis/boards.js",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardList.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/BoardInsertForm.jsx",[],[],"/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/boards/Board.jsx",["251","252"],[],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\n//게시글 조회\nconst Board = ({ board, no }) => {\n    const createMarkup = () => {\n        return { __html: board.content };\n    };\n    return (\n        <div className=\"board-container\">\n            <div className=\"board-info\">\n                <p className=\"notice-title\">공지 | {board.title}</p>\n                <p className=\"reg-date\">{new Date(board.regDate).toLocaleString()}</p>\n            </div>\n            <div className=\"board-content\" dangerouslySetInnerHTML={createMarkup()} />\n            {/* <Link to={`/boards/update/${no}`}>수정</Link> */}\n        </div>\n    );\n};\n\nexport default Board;","/Users/minhyeok/Desktop/LostarkTodo/Front/src/components/search/SearchBox.jsx",["253","254"],[],"import React, { useState } from \"react\";\nimport './SearchBox.css';\nimport SearchIcon from '@mui/icons-material/Search';\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nfunction SearchBox({ placeholder, data }) {\n    const [filteredData, setFilteredData] = useState([]);\n    const [wordEntered, setWordEntered] = useState(\"\");\n  \n    const handleFilter = (event) => {\n      const searchWord = event.target.value;\n      setWordEntered(searchWord);\n      const newFilter = data.filter((value) => {\n        return value.title.toLowerCase().includes(searchWord.toLowerCase());\n      });\n  \n      if (searchWord === \"\") {\n        setFilteredData([]);\n      } else {\n        setFilteredData(newFilter);\n      }\n    };\n  \n    const clearInput = () => {\n      setFilteredData([]);\n      setWordEntered(\"\");\n    };\n  \n    return (\n      <div className=\"search\">\n        <div className=\"searchInputs\">\n          <input\n            type=\"text\"\n            placeholder={placeholder}\n            value={wordEntered}\n            onChange={handleFilter}\n          />\n          <div className=\"searchIcon\">\n            {filteredData.length === 0 ? (\n              <SearchIcon />\n            ) : (\n              <CloseIcon id=\"clearBtn\" onClick={clearInput} />\n            )}\n          </div>\n        </div>\n        {filteredData.length != 0 && (\n          <div className=\"dataResult\">\n            {filteredData.slice(0, 15).map((value, key) => {\n              return (\n                <a className=\"dataItem\" href={value.link} target=\"_blank\">\n                  <p>{value.title} </p>\n                </a>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    );\n  }\n\nexport default SearchBox;",{"ruleId":"255","severity":1,"message":"256","line":6,"column":8,"nodeType":"257","messageId":"258","endLine":6,"endColumn":12},{"ruleId":"255","severity":1,"message":"259","line":7,"column":8,"nodeType":"257","messageId":"258","endLine":7,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":40,"column":9,"nodeType":"262","endLine":40,"endColumn":37},{"ruleId":"255","severity":1,"message":"263","line":56,"column":25,"nodeType":"257","messageId":"258","endLine":56,"endColumn":39},{"ruleId":"255","severity":1,"message":"264","line":3,"column":8,"nodeType":"257","messageId":"258","endLine":3,"endColumn":18},{"ruleId":"255","severity":1,"message":"265","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":16},{"ruleId":"255","severity":1,"message":"266","line":5,"column":8,"nodeType":"257","messageId":"258","endLine":5,"endColumn":17},{"ruleId":"255","severity":1,"message":"267","line":6,"column":10,"nodeType":"257","messageId":"258","endLine":6,"endColumn":14},{"ruleId":"255","severity":1,"message":"268","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":26},{"ruleId":"255","severity":1,"message":"269","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"270","line":8,"column":8,"nodeType":"257","messageId":"258","endLine":8,"endColumn":14},{"ruleId":"255","severity":1,"message":"271","line":9,"column":8,"nodeType":"257","messageId":"258","endLine":9,"endColumn":19},{"ruleId":"255","severity":1,"message":"272","line":10,"column":8,"nodeType":"257","messageId":"258","endLine":10,"endColumn":14},{"ruleId":"255","severity":1,"message":"273","line":11,"column":8,"nodeType":"257","messageId":"258","endLine":11,"endColumn":16},{"ruleId":"255","severity":1,"message":"274","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"275","line":4,"column":10,"nodeType":"257","messageId":"258","endLine":4,"endColumn":14},{"ruleId":"276","severity":1,"message":"277","line":50,"column":17,"nodeType":"262","endLine":55,"endColumn":18},{"ruleId":"278","severity":1,"message":"279","line":52,"column":26,"nodeType":"280","messageId":"281","endLine":52,"endColumn":48},{"ruleId":"282","severity":1,"message":"283","line":71,"column":64,"nodeType":"262","messageId":"284","endLine":71,"endColumn":124,"fix":"285"},{"ruleId":"276","severity":1,"message":"277","line":105,"column":21,"nodeType":"262","endLine":105,"endColumn":117},{"ruleId":"278","severity":1,"message":"279","line":105,"column":29,"nodeType":"280","messageId":"281","endLine":105,"endColumn":51},{"ruleId":"276","severity":1,"message":"277","line":108,"column":21,"nodeType":"262","endLine":108,"endColumn":130},{"ruleId":"278","severity":1,"message":"279","line":108,"column":29,"nodeType":"280","messageId":"281","endLine":108,"endColumn":51},{"ruleId":"276","severity":1,"message":"277","line":112,"column":21,"nodeType":"262","endLine":112,"endColumn":130},{"ruleId":"278","severity":1,"message":"279","line":112,"column":29,"nodeType":"280","messageId":"281","endLine":112,"endColumn":51},{"ruleId":"276","severity":1,"message":"277","line":115,"column":21,"nodeType":"262","endLine":115,"endColumn":125},{"ruleId":"278","severity":1,"message":"279","line":115,"column":29,"nodeType":"280","messageId":"281","endLine":115,"endColumn":51},{"ruleId":"286","severity":1,"message":"287","line":25,"column":8,"nodeType":"288","endLine":25,"endColumn":10,"suggestions":"289"},{"ruleId":"286","severity":1,"message":"290","line":16,"column":7,"nodeType":"288","endLine":16,"endColumn":9,"suggestions":"291"},{"ruleId":"255","severity":1,"message":"292","line":20,"column":19,"nodeType":"257","messageId":"258","endLine":20,"endColumn":27},{"ruleId":"255","severity":1,"message":"293","line":2,"column":10,"nodeType":"257","messageId":"258","endLine":2,"endColumn":19},{"ruleId":"255","severity":1,"message":"275","line":3,"column":10,"nodeType":"257","messageId":"258","endLine":3,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":46,"column":30,"nodeType":"296","messageId":"297","endLine":46,"endColumn":32},{"ruleId":"282","severity":1,"message":"283","line":50,"column":17,"nodeType":"262","messageId":"284","endLine":50,"endColumn":75,"fix":"298"},"no-unused-vars","'Info' is defined but never used.","Identifier","unusedVar","'DiscordIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setItemsPerRow' is assigned a value but never used.","'SearchIcon' is defined but never used.","'DoneIcon' is defined but never used.","'CloseIcon' is defined but never used.","'Grid' is defined but never used.","'FriendWeekTodoWrap' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'call' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"299","text":"300"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBoard'. Either include it or remove the dependency array.","ArrayExpression",["301"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["302"],"'response' is assigned a value but never used.","'useParams' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"303","text":"300"},[2344,2344]," rel=\"noreferrer\"",{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},[1529,1529],"Update the dependencies array to be: [getBoard]",{"range":"308","text":"309"},"Update the dependencies array to be: [navigate]",{"range":"310","text":"311"},[610,612],"[getBoard]",[516,518],"[navigate]"]